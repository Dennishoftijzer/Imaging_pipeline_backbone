graph(%self : __torch__.___torch_mangle_410.ScriptableAdapter,
      %inputs.1 : (Dict(str, Tensor))):
  %2 : bool = prim::Constant[value=1]() # C:\Users\HOFTIJ~1\AppData\Local\Temp/ipykernel_15240/909090163.py:28:23
  %3 : NoneType = prim::Constant()
  %4 : bool = prim::Constant[value=0]() # C:\Users\HOFTIJ~1\AppData\Local\Temp/ipykernel_15240/909090163.py:27:72
  %model : __torch__.detectron2.modeling.meta_arch.rcnn.___torch_mangle_409.GeneralizedRCNN = prim::GetAttr[name="model"](%self)
  %6 : Dict(str, Tensor) = prim::TupleUnpack(%inputs.1)
  %7 : Dict(str, Tensor)[] = prim::ListConstruct(%6)
  %15 : str = prim::Constant[value="Empty Instances does not support __len__!"]() # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:199:34
  %16 : str = prim::Constant[value="unequal value, x[0] batch dim 0 is {}, but box_list has length {}"]() # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\poolers.py:213:11
  %17 : str = prim::Constant[value="unequal value, num_level_assignments={}, but x is list of {} Tensors"]() # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\poolers.py:207:11
  %18 : float = prim::Constant[value=1e-08]() # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\poolers.py:53:70
  %19 : str = prim::Constant[value="AssertionError: The shape of the tensor in the boxes list is not correct as List[Tensor[L, 4]]"]()
  %20 : str = prim::Constant[value="AssertionError: The boxes tensor shape is not correct as Tensor[K, 5]"]()
  %21 : str = prim::Constant[value="AssertionError: proposal_boxes is None and cannot be accessed!"]()
  %22 : int = prim::Constant[value=6]() # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\anchor_generator.py:42:65
  %23 : int = prim::Constant[value=9223372036854775807]() # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\proposal_generator\proposal_utils.py:68:45
  %24 : str = prim::Constant[value="Indexing on Boxes with {} failed to return a matrix!"]() # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:234:29
  %25 : str = prim::Constant[value="AssertionError: Box tensor contains infinite or NaN!"]()
  %26 : str = prim::Constant[value="cpu"]() # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\boxes.py:71:53
  %27 : int = prim::Constant[value=4000]() # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\boxes.py:71:24
  %28 : int = prim::Constant[value=20000]() # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\boxes.py:71:64
  %29 : int = prim::Constant[value=11]() # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\boxes.py:105:47
  %30 : (str, str, str, str, str, str, str, str) = prim::Constant[value=("proposal_boxes", "objectness_logits", "pred_boxes", "scores", "pred_classes", "pred_masks", "pred_keypoints", "pred_keypoint_heatmaps")]()
  %31 : float = prim::Constant[value=0.5]() # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:93:30
  %32 : int = prim::Constant[value=-4]()
  %33 : int = prim::Constant[value=-3]()
  %34 : str = prim::Constant[value="nearest"]() # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\fpn.py:140:88
  %35 : float = prim::Constant[value=2.]() # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\fpn.py:140:78
  %36 : int = prim::Constant[value=3]() # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\resnet.py:358:40
  %37 : float = prim::Constant[value=0.10000000000000001]()
  %38 : str = prim::Constant[value="ResNet takes an input of shape (N, C, H, W). Got {} instead!"]() # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\resnet.py:443:29
  %39 : str = prim::Constant[value="stem"]() # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\resnet.py:446:11
  %40 : int = prim::Constant[value=5]() # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:3892:22
  %41 : str = prim::Constant[value="Input Error: Only 3D, 4D and 5D input Tensors supported (got {}D) for the modes: nearest | linear | bilinear | bicubic | trilinear | area | nearest-exact (got {})"]() # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:3943:8
  %42 : float = prim::Constant[value=0.]()
  %43 : int = prim::Constant[value=1]()
  %44 : bool = prim::Constant[value=0]()
  %45 : str = prim::Constant[value="image"]() # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\meta_arch\rcnn.py:224:20
  %46 : int = prim::Constant[value=2]()
  %47 : str = prim::Constant[value="AssertionError: Padding length too large"]()
  %48 : int = prim::Constant[value=0]() # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\image_list.py:75:30
  %49 : str = prim::Constant[value="AssertionError: "]()
  %50 : int = prim::Constant[value=-2]() # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\image_list.py:79:28
  %51 : int = prim::Constant[value=-1]() # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\image_list.py:81:47
  %52 : str = prim::Constant[value="floor"]() # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\image_list.py:88:75
  %53 : int = prim::Constant[value=4]() # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\image_list.py:92:52
  %54 : NoneType = prim::Constant() # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\meta_arch\rcnn.py:202:33
  %55 : bool = prim::Constant[value=1]() # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\meta_arch\rcnn.py:211:33
  %56 : str = prim::Constant[value="AssertionError: Scripting is not supported for postprocess."]()
  %57 : __torch__.detectron2.export.torchscript_patch11.ScriptedInstances11[] = prim::Uninitialized()
  %images.1 : Tensor[] = prim::ListConstruct()
  %59 : int = aten::len(%7) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\meta_arch\rcnn.py:224:17
   = prim::Loop(%59, %55) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\meta_arch\rcnn.py:224:17
    block0(%60 : int):
      %x.45 : Dict(str, Tensor) = aten::__getitem__(%7, %60) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\meta_arch\rcnn.py:224:17
      %62 : Tensor = aten::__getitem__(%x.45, %45) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\meta_arch\rcnn.py:224:18
      %pixel_mean.2 : Tensor = prim::GetAttr[name="pixel_mean"](%model)
      %64 : Device = prim::device(%pixel_mean.2)
      %65 : Tensor = aten::to(%62, %64, %54, %44, %44) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\meta_arch\rcnn.py:224:18
      %66 : Tensor[] = aten::append(%images.1, %65) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\meta_arch\rcnn.py:224:17
      -> (%55)
  %images.5 : Tensor[] = prim::ListConstruct()
  %68 : int = aten::len(%images.1) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\meta_arch\rcnn.py:225:17
   = prim::Loop(%68, %55) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\meta_arch\rcnn.py:225:17
    block0(%69 : int):
      %x.39 : Tensor = aten::__getitem__(%images.1, %69) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\meta_arch\rcnn.py:225:17
      %pixel_mean.1 : Tensor = prim::GetAttr[name="pixel_mean"](%model)
      %72 : Tensor = aten::sub(%x.39, %pixel_mean.1, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\meta_arch\rcnn.py:225:19
      %pixel_std : Tensor = prim::GetAttr[name="pixel_std"](%model)
      %74 : Tensor = aten::div(%72, %pixel_std) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\meta_arch\rcnn.py:225:19
      %75 : Tensor[] = aten::append(%images.5, %74) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\meta_arch\rcnn.py:225:17
      -> (%55)
  %backbone : __torch__.detectron2.modeling.backbone.fpn.___torch_mangle_389.FPN = prim::GetAttr[name="backbone"](%model)
  %_size_divisibility : int = prim::GetAttr[name="_size_divisibility"](%backbone)
  %78 : int = aten::len(%images.5) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\image_list.py:75:15
  %79 : bool = aten::gt(%78, %48) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\image_list.py:75:15
   = prim::If(%79) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\image_list.py:75:8
    block0():
      -> ()
    block1():
       = prim::RaiseException(%49, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\image_list.py:75:8
      -> ()
  %80 : int = aten::len(%images.5) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\image_list.py:77:8
   = prim::Loop(%80, %55) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\image_list.py:77:8
    block0(%81 : int):
      %t.2 : Tensor = aten::__getitem__(%images.5, %81) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\image_list.py:77:8
      %83 : int[] = aten::size(%t.2) # <string>:13:9
      %84 : int[] = aten::slice(%83, %54, %50, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\image_list.py:79:19
      %85 : Tensor = aten::__getitem__(%images.5, %48) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\image_list.py:79:35
      %86 : int[] = aten::size(%85) # <string>:13:9
      %87 : int[] = aten::slice(%86, %54, %50, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\image_list.py:79:35
      %88 : bool = aten::eq(%84, %87) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\image_list.py:79:19
       = prim::If(%88) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\image_list.py:79:12
        block0():
          -> ()
        block1():
          %89 : int[] = aten::size(%t.2) # <string>:13:9
          %90 : str = aten::str(%89) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\image_list.py:79:12
          %91 : str = aten::add(%49, %90) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\image_list.py:79:12
           = prim::RaiseException(%91, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\image_list.py:79:12
          -> ()
      -> (%55)
  %image_sizes.1 : (int, int)[] = prim::ListConstruct()
  %93 : int = aten::len(%images.5) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\image_list.py:81:22
   = prim::Loop(%93, %55) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\image_list.py:81:22
    block0(%94 : int):
      %im.1 : Tensor = aten::__getitem__(%images.5, %94) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\image_list.py:81:22
      %96 : int[] = aten::size(%im.1) # <string>:13:9
      %97 : int = aten::__getitem__(%96, %50) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\image_list.py:81:24
      %98 : int[] = aten::size(%im.1) # <string>:13:9
      %99 : int = aten::__getitem__(%98, %51) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\image_list.py:81:38
      %100 : (int, int) = prim::TupleConstruct(%97, %99)
      %101 : (int, int)[] = aten::append(%image_sizes.1, %100) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\image_list.py:81:22
      -> (%55)
  %image_sizes_tensor.1 : Tensor[] = prim::ListConstruct()
  %103 : int = aten::len(%image_sizes.1) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\image_list.py:82:29
   = prim::Loop(%103, %55) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\image_list.py:82:29
    block0(%104 : int):
      %x.41 : (int, int) = aten::__getitem__(%image_sizes.1, %104) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\image_list.py:82:29
      %106 : int, %107 : int = prim::TupleUnpack(%x.41)
      %108 : int[] = prim::ListConstruct(%106, %107)
      %109 : Tensor = aten::as_tensor(%108, %54, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:25:15
      %110 : Tensor[] = aten::append(%image_sizes_tensor.1, %109) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\image_list.py:82:29
      -> (%55)
  %111 : Tensor = aten::stack(%image_sizes_tensor.1, %48) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\image_list.py:83:19
  %112 : Tensor, %113 : Tensor = aten::max(%111, %48, %44) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\image_list.py:83:19
  %114 : bool = aten::gt(%_size_divisibility, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\image_list.py:85:11
  %max_size : Tensor = prim::If(%114) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\image_list.py:85:8
    block0():
      %116 : int = aten::sub(%_size_divisibility, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\image_list.py:88:36
      %117 : Tensor = aten::add(%112, %116, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\image_list.py:88:24
      %118 : Tensor = aten::div(%117, %_size_divisibility, %52) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\image_list.py:88:24
      %max_size.5 : Tensor = aten::mul(%118, %_size_divisibility) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\image_list.py:88:24
      -> (%max_size.5)
    block1():
      -> (%112)
  %120 : Tensor = aten::to(%max_size, %53, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\image_list.py:92:34
  %max_size.21 : int[] = prim::tolist(%120, %43, %48)
  %122 : int = aten::len(%images.5) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\image_list.py:97:11
  %123 : bool = aten::eq(%122, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\image_list.py:97:11
  %batched_imgs : Tensor = prim::If(%123) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\image_list.py:97:8
    block0():
      %image_size.2 : (int, int) = aten::__getitem__(%image_sizes.1, %48) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\image_list.py:100:25
      %126 : int = aten::__getitem__(%max_size.21, %51) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\image_list.py:101:31
      %127 : int = prim::TupleIndex(%image_size.2, %43)
      %128 : int = aten::sub(%126, %127) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\image_list.py:101:31
      %129 : int = aten::__getitem__(%max_size.21, %50) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\image_list.py:101:64
      %130 : int = prim::TupleIndex(%image_size.2, %48)
      %131 : int = aten::sub(%129, %130) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\image_list.py:101:64
      %padding_size.1 : int[] = prim::ListConstruct(%48, %128, %48, %131)
      %133 : Tensor = aten::__getitem__(%images.5, %48) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\image_list.py:102:33
      %134 : int = aten::dim(%133) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:4362:28
      %135 : bool = aten::le(%46, %134) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:4362:11
       = prim::If(%135) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:4362:4
        block0():
          -> ()
        block1():
           = prim::RaiseException(%47, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:4362:4
          -> ()
      %136 : Tensor = aten::constant_pad_nd(%133, %padding_size.1, %42) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:4364:15
      %batched_imgs.1 : Tensor = aten::unsqueeze_(%136, %48) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\image_list.py:102:27
      -> (%batched_imgs.1)
    block1():
      %138 : int = aten::len(%images.5) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\image_list.py:105:27
      %139 : int[] = prim::ListConstruct(%138)
      %140 : Tensor = aten::__getitem__(%images.5, %48) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\image_list.py:105:48
      %141 : int[] = aten::size(%140) # <string>:13:9
      %142 : int[] = aten::slice(%141, %54, %50, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\image_list.py:105:48
      %143 : int[] = aten::list(%142) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\image_list.py:105:43
      %144 : int[] = aten::add(%139, %143) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\image_list.py:105:26
      %145 : int[] = aten::list(%max_size.21) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\image_list.py:105:73
      %batch_shape.1 : int[] = aten::add(%144, %145) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\image_list.py:105:26
      %147 : Tensor = aten::__getitem__(%images.5, %48) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\image_list.py:106:27
      %batched_imgs.3 : Tensor = aten::new_full(%147, %batch_shape.1, %42, %54, %54, %54, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\image_list.py:106:27
      %149 : int = aten::len(%images.5) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\image_list.py:107:12
      %150 : int = aten::len(%batched_imgs.3) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\image_list.py:107:12
      %151 : int[] = prim::ListConstruct(%149, %150)
      %152 : int = prim::min(%151) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\image_list.py:107:12
       = prim::Loop(%152, %55) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\image_list.py:107:12
        block0(%153 : int):
          %img.1 : Tensor = aten::__getitem__(%images.5, %153) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\image_list.py:107:12
          %pad_img.1 : Tensor = aten::select(%batched_imgs.3, %48, %153) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\image_list.py:107:12
          %156 : int[] = aten::size(%img.1) # <string>:13:9
          %157 : int = aten::__getitem__(%156, %50) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\image_list.py:108:31
          %158 : Tensor = aten::slice(%pad_img.1, %50, %54, %157, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\image_list.py:108:16
          %159 : int[] = aten::size(%img.1) # <string>:13:9
          %160 : int = aten::__getitem__(%159, %51) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\image_list.py:108:48
          %161 : Tensor = aten::slice(%158, %51, %54, %160, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\image_list.py:108:16
          %162 : Tensor = aten::copy_(%161, %img.1, %44) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\image_list.py:108:16
          -> (%55)
      -> (%batched_imgs.3)
  %163 : Tensor = aten::contiguous(%batched_imgs, %48) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\image_list.py:110:25
  %images.2 : __torch__.detectron2.structures.image_list.ImageList = prim::CreateObject()
   = prim::SetAttr[name="tensor"](%images.2, %163)
   = prim::SetAttr[name="image_sizes"](%images.2, %image_sizes.1)
  %backbone.1 : __torch__.detectron2.modeling.backbone.fpn.___torch_mangle_389.FPN = prim::GetAttr[name="backbone"](%model)
  %tensor.51 : Tensor = prim::GetAttr[name="tensor"](%images.2)
  %bottom_up : __torch__.detectron2.modeling.backbone.resnet.___torch_mangle_381.ResNet = prim::GetAttr[name="bottom_up"](%backbone.1)
  %168 : int = aten::dim(%tensor.51) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\resnet.py:443:15
  %169 : bool = aten::eq(%168, %53) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\resnet.py:443:15
   = prim::If(%169) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\resnet.py:443:8
    block0():
      -> ()
    block1():
      %170 : int[] = aten::size(%tensor.51) # <string>:13:9
      %171 : str = aten::format(%38, %170) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\resnet.py:443:29
      %172 : str = aten::add(%49, %171) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\resnet.py:443:8
       = prim::RaiseException(%172, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\resnet.py:443:8
      -> ()
  %bottom_up_features.1 : Dict(str, Tensor) = prim::DictConstruct()
  %stem : __torch__.detectron2.modeling.backbone.resnet.___torch_mangle_348.BasicStem = prim::GetAttr[name="stem"](%bottom_up)
  %conv1.2 : __torch__.detectron2.layers.wrappers.___torch_mangle_347.Conv2d = prim::GetAttr[name="conv1"](%stem)
  %weight.21 : Tensor = prim::GetAttr[name="weight"](%conv1.2)
  %bias.34 : Tensor? = prim::GetAttr[name="bias"](%conv1.2)
  %178 : int[] = prim::ListConstruct(%46, %46)
  %179 : int[] = prim::ListConstruct(%36, %36)
  %180 : int[] = prim::ListConstruct(%43, %43)
  %x.24 : Tensor = aten::conv2d(%tensor.51, %weight.21, %bias.34, %178, %179, %180, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:106:12
  %norm.7 : __torch__.detectron2.layers.batch_norm.___torch_mangle_346.FrozenBatchNorm2d = prim::GetAttr[name="norm"](%conv1.2)
  %183 : bool = prim::requires_grad(%x.24)
  %x.22 : Tensor = prim::If(%183) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:45:8
    block0():
      %weight.23 : Tensor = prim::GetAttr[name="weight"](%norm.7)
      %running_var.14 : Tensor = prim::GetAttr[name="running_var"](%norm.7)
      %eps.14 : float = prim::GetAttr[name="eps"](%norm.7)
      %188 : Tensor = aten::add(%running_var.14, %eps.14, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:35
      %189 : Tensor = aten::rsqrt(%188) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:35
      %scale.4 : Tensor = aten::mul(%weight.23, %189) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:20
      %bias.36 : Tensor = prim::GetAttr[name="bias"](%norm.7)
      %running_mean.14 : Tensor = prim::GetAttr[name="running_mean"](%norm.7)
      %193 : Tensor = aten::mul(%running_mean.14, %scale.4) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:49:31
      %bias.38 : Tensor = aten::sub(%bias.36, %193, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:49:19
      %195 : int[] = prim::ListConstruct(%43, %51, %43, %43)
      %scale.18 : Tensor = aten::reshape(%scale.4, %195) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:50:20
      %197 : int[] = prim::ListConstruct(%43, %51, %43, %43)
      %bias.40 : Tensor = aten::reshape(%bias.38, %197) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:51:19
      %out_dtype.8 : int = prim::dtype(%x.24)
      %200 : Tensor = aten::to(%scale.18, %out_dtype.8, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:23
      %201 : Tensor = aten::mul(%x.24, %200) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:19
      %202 : Tensor = aten::to(%bias.40, %out_dtype.8, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:45
      %203 : Tensor = aten::add(%201, %202, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:19
      -> (%203)
    block1():
      %running_mean.16 : Tensor = prim::GetAttr[name="running_mean"](%norm.7)
      %running_var.16 : Tensor = prim::GetAttr[name="running_var"](%norm.7)
      %weight.25 : Tensor = prim::GetAttr[name="weight"](%norm.7)
      %bias.42 : Tensor = prim::GetAttr[name="bias"](%norm.7)
      %eps.16 : float = prim::GetAttr[name="eps"](%norm.7)
      %209 : Tensor = aten::batch_norm(%x.24, %weight.25, %bias.42, %running_mean.16, %running_var.16, %44, %37, %eps.16, %55) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:2421:11
      -> (%209)
  %x.16 : Tensor = aten::relu_(%x.22) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\resnet.py:357:12
  %211 : int[] = prim::ListConstruct(%36, %36)
  %212 : int[] = prim::ListConstruct(%46, %46)
  %213 : int[] = prim::ListConstruct(%43, %43)
  %214 : int[] = prim::ListConstruct(%43, %43)
  %x.18 : Tensor = aten::max_pool2d(%x.16, %211, %212, %213, %214, %44) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:797:11
  %_out_features.1 : str[] = prim::GetAttr[name="_out_features"](%bottom_up)
  %217 : bool = aten::__contains__(%_out_features.1, %39) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\resnet.py:446:11
   = prim::If(%217) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\resnet.py:446:8
    block0():
       = aten::_set_item(%bottom_up_features.1, %39, %x.18) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\resnet.py:447:12
      -> ()
    block1():
      -> ()
  %stage_names : (str, str, str, str) = prim::GetAttr[name="stage_names"](%bottom_up)
  %name.1 : str, %name.7 : str, %name.13 : str, %name.19 : str = prim::TupleUnpack(%stage_names)
  %stages : __torch__.torch.nn.modules.container.___torch_mangle_380.ModuleList = prim::GetAttr[name="stages"](%bottom_up)
  %_0.1 : __torch__.torch.nn.modules.container.___torch_mangle_355.Sequential = prim::GetAttr[name="0"](%stages)
  %_1.1 : __torch__.torch.nn.modules.container.___torch_mangle_363.Sequential = prim::GetAttr[name="1"](%stages)
  %_2.1 : __torch__.torch.nn.modules.container.___torch_mangle_371.Sequential = prim::GetAttr[name="2"](%stages)
  %_3.1 : __torch__.torch.nn.modules.container.___torch_mangle_379.Sequential = prim::GetAttr[name="3"](%stages)
  %_0.3 : __torch__.detectron2.modeling.backbone.resnet.___torch_mangle_352.BottleneckBlock = prim::GetAttr[name="0"](%_0.1)
  %_1.3 : __torch__.detectron2.modeling.backbone.resnet.___torch_mangle_354.BottleneckBlock = prim::GetAttr[name="1"](%_0.1)
  %_2.3 : __torch__.detectron2.modeling.backbone.resnet.___torch_mangle_354.BottleneckBlock = prim::GetAttr[name="2"](%_0.1)
  %conv1.4 : __torch__.detectron2.layers.wrappers.___torch_mangle_350.Conv2d = prim::GetAttr[name="conv1"](%_0.3)
  %weight.27 : Tensor = prim::GetAttr[name="weight"](%conv1.4)
  %bias.44 : Tensor? = prim::GetAttr[name="bias"](%conv1.4)
  %234 : int[] = prim::ListConstruct(%43, %43)
  %235 : int[] = prim::ListConstruct(%48, %48)
  %236 : int[] = prim::ListConstruct(%43, %43)
  %x.28 : Tensor = aten::conv2d(%x.18, %weight.27, %bias.44, %234, %235, %236, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:106:12
  %norm.9 : __torch__.detectron2.layers.batch_norm.___torch_mangle_346.FrozenBatchNorm2d = prim::GetAttr[name="norm"](%conv1.4)
  %239 : bool = prim::requires_grad(%x.28)
  %out.3 : Tensor = prim::If(%239) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:45:8
    block0():
      %weight.29 : Tensor = prim::GetAttr[name="weight"](%norm.9)
      %running_var.18 : Tensor = prim::GetAttr[name="running_var"](%norm.9)
      %eps.18 : float = prim::GetAttr[name="eps"](%norm.9)
      %244 : Tensor = aten::add(%running_var.18, %eps.18, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:35
      %245 : Tensor = aten::rsqrt(%244) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:35
      %scale.20 : Tensor = aten::mul(%weight.29, %245) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:20
      %bias.46 : Tensor = prim::GetAttr[name="bias"](%norm.9)
      %running_mean.18 : Tensor = prim::GetAttr[name="running_mean"](%norm.9)
      %249 : Tensor = aten::mul(%running_mean.18, %scale.20) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:49:31
      %bias.48 : Tensor = aten::sub(%bias.46, %249, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:49:19
      %251 : int[] = prim::ListConstruct(%43, %51, %43, %43)
      %scale.22 : Tensor = aten::reshape(%scale.20, %251) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:50:20
      %253 : int[] = prim::ListConstruct(%43, %51, %43, %43)
      %bias.50 : Tensor = aten::reshape(%bias.48, %253) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:51:19
      %out_dtype.10 : int = prim::dtype(%x.28)
      %256 : Tensor = aten::to(%scale.22, %out_dtype.10, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:23
      %257 : Tensor = aten::mul(%x.28, %256) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:19
      %258 : Tensor = aten::to(%bias.50, %out_dtype.10, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:45
      %259 : Tensor = aten::add(%257, %258, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:19
      -> (%259)
    block1():
      %running_mean.20 : Tensor = prim::GetAttr[name="running_mean"](%norm.9)
      %running_var.20 : Tensor = prim::GetAttr[name="running_var"](%norm.9)
      %weight.31 : Tensor = prim::GetAttr[name="weight"](%norm.9)
      %bias.52 : Tensor = prim::GetAttr[name="bias"](%norm.9)
      %eps.20 : float = prim::GetAttr[name="eps"](%norm.9)
      %265 : Tensor = aten::batch_norm(%x.28, %weight.31, %bias.52, %running_mean.20, %running_var.20, %44, %37, %eps.20, %55) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:2421:11
      -> (%265)
  %out.7 : Tensor = aten::relu_(%out.3) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\resnet.py:196:14
  %conv2.2 : __torch__.detectron2.layers.wrappers.___torch_mangle_351.Conv2d = prim::GetAttr[name="conv2"](%_0.3)
  %weight.33 : Tensor = prim::GetAttr[name="weight"](%conv2.2)
  %bias.54 : Tensor? = prim::GetAttr[name="bias"](%conv2.2)
  %270 : int[] = prim::ListConstruct(%43, %43)
  %271 : int[] = prim::ListConstruct(%43, %43)
  %272 : int[] = prim::ListConstruct(%43, %43)
  %x.30 : Tensor = aten::conv2d(%out.7, %weight.33, %bias.54, %270, %271, %272, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:106:12
  %norm.11 : __torch__.detectron2.layers.batch_norm.___torch_mangle_346.FrozenBatchNorm2d = prim::GetAttr[name="norm"](%conv2.2)
  %275 : bool = prim::requires_grad(%x.30)
  %out.11 : Tensor = prim::If(%275) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:45:8
    block0():
      %weight.35 : Tensor = prim::GetAttr[name="weight"](%norm.11)
      %running_var.22 : Tensor = prim::GetAttr[name="running_var"](%norm.11)
      %eps.22 : float = prim::GetAttr[name="eps"](%norm.11)
      %280 : Tensor = aten::add(%running_var.22, %eps.22, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:35
      %281 : Tensor = aten::rsqrt(%280) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:35
      %scale.24 : Tensor = aten::mul(%weight.35, %281) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:20
      %bias.56 : Tensor = prim::GetAttr[name="bias"](%norm.11)
      %running_mean.22 : Tensor = prim::GetAttr[name="running_mean"](%norm.11)
      %285 : Tensor = aten::mul(%running_mean.22, %scale.24) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:49:31
      %bias.58 : Tensor = aten::sub(%bias.56, %285, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:49:19
      %287 : int[] = prim::ListConstruct(%43, %51, %43, %43)
      %scale.26 : Tensor = aten::reshape(%scale.24, %287) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:50:20
      %289 : int[] = prim::ListConstruct(%43, %51, %43, %43)
      %bias.60 : Tensor = aten::reshape(%bias.58, %289) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:51:19
      %out_dtype.12 : int = prim::dtype(%x.30)
      %292 : Tensor = aten::to(%scale.26, %out_dtype.12, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:23
      %293 : Tensor = aten::mul(%x.30, %292) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:19
      %294 : Tensor = aten::to(%bias.60, %out_dtype.12, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:45
      %295 : Tensor = aten::add(%293, %294, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:19
      -> (%295)
    block1():
      %running_mean.24 : Tensor = prim::GetAttr[name="running_mean"](%norm.11)
      %running_var.24 : Tensor = prim::GetAttr[name="running_var"](%norm.11)
      %weight.37 : Tensor = prim::GetAttr[name="weight"](%norm.11)
      %bias.62 : Tensor = prim::GetAttr[name="bias"](%norm.11)
      %eps.24 : float = prim::GetAttr[name="eps"](%norm.11)
      %301 : Tensor = aten::batch_norm(%x.30, %weight.37, %bias.62, %running_mean.24, %running_var.24, %44, %37, %eps.24, %55) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:2421:11
      -> (%301)
  %out.15 : Tensor = aten::relu_(%out.11) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\resnet.py:199:14
  %conv3.2 : __torch__.detectron2.layers.wrappers.___torch_mangle_349.Conv2d = prim::GetAttr[name="conv3"](%_0.3)
  %weight.39 : Tensor = prim::GetAttr[name="weight"](%conv3.2)
  %bias.64 : Tensor? = prim::GetAttr[name="bias"](%conv3.2)
  %306 : int[] = prim::ListConstruct(%43, %43)
  %307 : int[] = prim::ListConstruct(%48, %48)
  %308 : int[] = prim::ListConstruct(%43, %43)
  %x.32 : Tensor = aten::conv2d(%out.15, %weight.39, %bias.64, %306, %307, %308, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:106:12
  %norm.13 : __torch__.detectron2.layers.batch_norm.___torch_mangle_346.FrozenBatchNorm2d = prim::GetAttr[name="norm"](%conv3.2)
  %311 : bool = prim::requires_grad(%x.32)
  %out.19 : Tensor = prim::If(%311) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:45:8
    block0():
      %weight.41 : Tensor = prim::GetAttr[name="weight"](%norm.13)
      %running_var.26 : Tensor = prim::GetAttr[name="running_var"](%norm.13)
      %eps.26 : float = prim::GetAttr[name="eps"](%norm.13)
      %316 : Tensor = aten::add(%running_var.26, %eps.26, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:35
      %317 : Tensor = aten::rsqrt(%316) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:35
      %scale.28 : Tensor = aten::mul(%weight.41, %317) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:20
      %bias.66 : Tensor = prim::GetAttr[name="bias"](%norm.13)
      %running_mean.26 : Tensor = prim::GetAttr[name="running_mean"](%norm.13)
      %321 : Tensor = aten::mul(%running_mean.26, %scale.28) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:49:31
      %bias.68 : Tensor = aten::sub(%bias.66, %321, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:49:19
      %323 : int[] = prim::ListConstruct(%43, %51, %43, %43)
      %scale.30 : Tensor = aten::reshape(%scale.28, %323) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:50:20
      %325 : int[] = prim::ListConstruct(%43, %51, %43, %43)
      %bias.70 : Tensor = aten::reshape(%bias.68, %325) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:51:19
      %out_dtype.14 : int = prim::dtype(%x.32)
      %328 : Tensor = aten::to(%scale.30, %out_dtype.14, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:23
      %329 : Tensor = aten::mul(%x.32, %328) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:19
      %330 : Tensor = aten::to(%bias.70, %out_dtype.14, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:45
      %331 : Tensor = aten::add(%329, %330, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:19
      -> (%331)
    block1():
      %running_mean.28 : Tensor = prim::GetAttr[name="running_mean"](%norm.13)
      %running_var.28 : Tensor = prim::GetAttr[name="running_var"](%norm.13)
      %weight.43 : Tensor = prim::GetAttr[name="weight"](%norm.13)
      %bias.72 : Tensor = prim::GetAttr[name="bias"](%norm.13)
      %eps.28 : float = prim::GetAttr[name="eps"](%norm.13)
      %337 : Tensor = aten::batch_norm(%x.32, %weight.43, %bias.72, %running_mean.28, %running_var.28, %44, %37, %eps.28, %55) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:2421:11
      -> (%337)
  %shortcut.4 : __torch__.detectron2.layers.wrappers.___torch_mangle_349.Conv2d = prim::GetAttr[name="shortcut"](%_0.3)
  %weight.45 : Tensor = prim::GetAttr[name="weight"](%shortcut.4)
  %bias.74 : Tensor? = prim::GetAttr[name="bias"](%shortcut.4)
  %341 : int[] = prim::ListConstruct(%43, %43)
  %342 : int[] = prim::ListConstruct(%48, %48)
  %343 : int[] = prim::ListConstruct(%43, %43)
  %x.34 : Tensor = aten::conv2d(%x.18, %weight.45, %bias.74, %341, %342, %343, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:106:12
  %norm.15 : __torch__.detectron2.layers.batch_norm.___torch_mangle_346.FrozenBatchNorm2d = prim::GetAttr[name="norm"](%shortcut.4)
  %346 : bool = prim::requires_grad(%x.34)
  %shortcut.6 : Tensor = prim::If(%346) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:45:8
    block0():
      %weight.47 : Tensor = prim::GetAttr[name="weight"](%norm.15)
      %running_var.30 : Tensor = prim::GetAttr[name="running_var"](%norm.15)
      %eps.30 : float = prim::GetAttr[name="eps"](%norm.15)
      %351 : Tensor = aten::add(%running_var.30, %eps.30, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:35
      %352 : Tensor = aten::rsqrt(%351) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:35
      %scale.32 : Tensor = aten::mul(%weight.47, %352) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:20
      %bias.76 : Tensor = prim::GetAttr[name="bias"](%norm.15)
      %running_mean.30 : Tensor = prim::GetAttr[name="running_mean"](%norm.15)
      %356 : Tensor = aten::mul(%running_mean.30, %scale.32) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:49:31
      %bias.78 : Tensor = aten::sub(%bias.76, %356, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:49:19
      %358 : int[] = prim::ListConstruct(%43, %51, %43, %43)
      %scale.34 : Tensor = aten::reshape(%scale.32, %358) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:50:20
      %360 : int[] = prim::ListConstruct(%43, %51, %43, %43)
      %bias.80 : Tensor = aten::reshape(%bias.78, %360) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:51:19
      %out_dtype.16 : int = prim::dtype(%x.34)
      %363 : Tensor = aten::to(%scale.34, %out_dtype.16, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:23
      %364 : Tensor = aten::mul(%x.34, %363) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:19
      %365 : Tensor = aten::to(%bias.80, %out_dtype.16, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:45
      %366 : Tensor = aten::add(%364, %365, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:19
      -> (%366)
    block1():
      %running_mean.32 : Tensor = prim::GetAttr[name="running_mean"](%norm.15)
      %running_var.32 : Tensor = prim::GetAttr[name="running_var"](%norm.15)
      %weight.49 : Tensor = prim::GetAttr[name="weight"](%norm.15)
      %bias.82 : Tensor = prim::GetAttr[name="bias"](%norm.15)
      %eps.32 : float = prim::GetAttr[name="eps"](%norm.15)
      %372 : Tensor = aten::batch_norm(%x.34, %weight.49, %bias.82, %running_mean.32, %running_var.32, %44, %37, %eps.32, %55) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:2421:11
      -> (%372)
  %out.23 : Tensor = aten::add_(%out.19, %shortcut.6, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\resnet.py:208:8
  %input.6 : Tensor = aten::relu_(%out.23) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\resnet.py:209:14
  %conv1.6 : __torch__.detectron2.layers.wrappers.___torch_mangle_353.Conv2d = prim::GetAttr[name="conv1"](%_1.3)
  %weight.51 : Tensor = prim::GetAttr[name="weight"](%conv1.6)
  %bias.84 : Tensor? = prim::GetAttr[name="bias"](%conv1.6)
  %378 : int[] = prim::ListConstruct(%43, %43)
  %379 : int[] = prim::ListConstruct(%48, %48)
  %380 : int[] = prim::ListConstruct(%43, %43)
  %x.36 : Tensor = aten::conv2d(%input.6, %weight.51, %bias.84, %378, %379, %380, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:106:12
  %norm.17 : __torch__.detectron2.layers.batch_norm.___torch_mangle_346.FrozenBatchNorm2d = prim::GetAttr[name="norm"](%conv1.6)
  %383 : bool = prim::requires_grad(%x.36)
  %out.25 : Tensor = prim::If(%383) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:45:8
    block0():
      %weight.53 : Tensor = prim::GetAttr[name="weight"](%norm.17)
      %running_var.34 : Tensor = prim::GetAttr[name="running_var"](%norm.17)
      %eps.34 : float = prim::GetAttr[name="eps"](%norm.17)
      %388 : Tensor = aten::add(%running_var.34, %eps.34, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:35
      %389 : Tensor = aten::rsqrt(%388) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:35
      %scale.36 : Tensor = aten::mul(%weight.53, %389) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:20
      %bias.86 : Tensor = prim::GetAttr[name="bias"](%norm.17)
      %running_mean.34 : Tensor = prim::GetAttr[name="running_mean"](%norm.17)
      %393 : Tensor = aten::mul(%running_mean.34, %scale.36) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:49:31
      %bias.88 : Tensor = aten::sub(%bias.86, %393, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:49:19
      %395 : int[] = prim::ListConstruct(%43, %51, %43, %43)
      %scale.38 : Tensor = aten::reshape(%scale.36, %395) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:50:20
      %397 : int[] = prim::ListConstruct(%43, %51, %43, %43)
      %bias.90 : Tensor = aten::reshape(%bias.88, %397) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:51:19
      %out_dtype.18 : int = prim::dtype(%x.36)
      %400 : Tensor = aten::to(%scale.38, %out_dtype.18, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:23
      %401 : Tensor = aten::mul(%x.36, %400) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:19
      %402 : Tensor = aten::to(%bias.90, %out_dtype.18, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:45
      %403 : Tensor = aten::add(%401, %402, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:19
      -> (%403)
    block1():
      %running_mean.36 : Tensor = prim::GetAttr[name="running_mean"](%norm.17)
      %running_var.36 : Tensor = prim::GetAttr[name="running_var"](%norm.17)
      %weight.55 : Tensor = prim::GetAttr[name="weight"](%norm.17)
      %bias.92 : Tensor = prim::GetAttr[name="bias"](%norm.17)
      %eps.36 : float = prim::GetAttr[name="eps"](%norm.17)
      %409 : Tensor = aten::batch_norm(%x.36, %weight.55, %bias.92, %running_mean.36, %running_var.36, %44, %37, %eps.36, %55) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:2421:11
      -> (%409)
  %out.27 : Tensor = aten::relu_(%out.25) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\resnet.py:196:14
  %conv2.4 : __torch__.detectron2.layers.wrappers.___torch_mangle_351.Conv2d = prim::GetAttr[name="conv2"](%_1.3)
  %weight.57 : Tensor = prim::GetAttr[name="weight"](%conv2.4)
  %bias.94 : Tensor? = prim::GetAttr[name="bias"](%conv2.4)
  %414 : int[] = prim::ListConstruct(%43, %43)
  %415 : int[] = prim::ListConstruct(%43, %43)
  %416 : int[] = prim::ListConstruct(%43, %43)
  %x.38 : Tensor = aten::conv2d(%out.27, %weight.57, %bias.94, %414, %415, %416, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:106:12
  %norm.19 : __torch__.detectron2.layers.batch_norm.___torch_mangle_346.FrozenBatchNorm2d = prim::GetAttr[name="norm"](%conv2.4)
  %419 : bool = prim::requires_grad(%x.38)
  %out.29 : Tensor = prim::If(%419) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:45:8
    block0():
      %weight.59 : Tensor = prim::GetAttr[name="weight"](%norm.19)
      %running_var.38 : Tensor = prim::GetAttr[name="running_var"](%norm.19)
      %eps.38 : float = prim::GetAttr[name="eps"](%norm.19)
      %424 : Tensor = aten::add(%running_var.38, %eps.38, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:35
      %425 : Tensor = aten::rsqrt(%424) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:35
      %scale.40 : Tensor = aten::mul(%weight.59, %425) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:20
      %bias.96 : Tensor = prim::GetAttr[name="bias"](%norm.19)
      %running_mean.38 : Tensor = prim::GetAttr[name="running_mean"](%norm.19)
      %429 : Tensor = aten::mul(%running_mean.38, %scale.40) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:49:31
      %bias.98 : Tensor = aten::sub(%bias.96, %429, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:49:19
      %431 : int[] = prim::ListConstruct(%43, %51, %43, %43)
      %scale.42 : Tensor = aten::reshape(%scale.40, %431) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:50:20
      %433 : int[] = prim::ListConstruct(%43, %51, %43, %43)
      %bias.100 : Tensor = aten::reshape(%bias.98, %433) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:51:19
      %out_dtype.20 : int = prim::dtype(%x.38)
      %436 : Tensor = aten::to(%scale.42, %out_dtype.20, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:23
      %437 : Tensor = aten::mul(%x.38, %436) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:19
      %438 : Tensor = aten::to(%bias.100, %out_dtype.20, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:45
      %439 : Tensor = aten::add(%437, %438, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:19
      -> (%439)
    block1():
      %running_mean.40 : Tensor = prim::GetAttr[name="running_mean"](%norm.19)
      %running_var.40 : Tensor = prim::GetAttr[name="running_var"](%norm.19)
      %weight.61 : Tensor = prim::GetAttr[name="weight"](%norm.19)
      %bias.102 : Tensor = prim::GetAttr[name="bias"](%norm.19)
      %eps.40 : float = prim::GetAttr[name="eps"](%norm.19)
      %445 : Tensor = aten::batch_norm(%x.38, %weight.61, %bias.102, %running_mean.40, %running_var.40, %44, %37, %eps.40, %55) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:2421:11
      -> (%445)
  %out.31 : Tensor = aten::relu_(%out.29) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\resnet.py:199:14
  %conv3.4 : __torch__.detectron2.layers.wrappers.___torch_mangle_349.Conv2d = prim::GetAttr[name="conv3"](%_1.3)
  %weight.63 : Tensor = prim::GetAttr[name="weight"](%conv3.4)
  %bias.104 : Tensor? = prim::GetAttr[name="bias"](%conv3.4)
  %450 : int[] = prim::ListConstruct(%43, %43)
  %451 : int[] = prim::ListConstruct(%48, %48)
  %452 : int[] = prim::ListConstruct(%43, %43)
  %x.40 : Tensor = aten::conv2d(%out.31, %weight.63, %bias.104, %450, %451, %452, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:106:12
  %norm.21 : __torch__.detectron2.layers.batch_norm.___torch_mangle_346.FrozenBatchNorm2d = prim::GetAttr[name="norm"](%conv3.4)
  %455 : bool = prim::requires_grad(%x.40)
  %out.33 : Tensor = prim::If(%455) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:45:8
    block0():
      %weight.65 : Tensor = prim::GetAttr[name="weight"](%norm.21)
      %running_var.42 : Tensor = prim::GetAttr[name="running_var"](%norm.21)
      %eps.42 : float = prim::GetAttr[name="eps"](%norm.21)
      %460 : Tensor = aten::add(%running_var.42, %eps.42, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:35
      %461 : Tensor = aten::rsqrt(%460) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:35
      %scale.44 : Tensor = aten::mul(%weight.65, %461) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:20
      %bias.106 : Tensor = prim::GetAttr[name="bias"](%norm.21)
      %running_mean.42 : Tensor = prim::GetAttr[name="running_mean"](%norm.21)
      %465 : Tensor = aten::mul(%running_mean.42, %scale.44) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:49:31
      %bias.108 : Tensor = aten::sub(%bias.106, %465, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:49:19
      %467 : int[] = prim::ListConstruct(%43, %51, %43, %43)
      %scale.46 : Tensor = aten::reshape(%scale.44, %467) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:50:20
      %469 : int[] = prim::ListConstruct(%43, %51, %43, %43)
      %bias.110 : Tensor = aten::reshape(%bias.108, %469) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:51:19
      %out_dtype.22 : int = prim::dtype(%x.40)
      %472 : Tensor = aten::to(%scale.46, %out_dtype.22, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:23
      %473 : Tensor = aten::mul(%x.40, %472) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:19
      %474 : Tensor = aten::to(%bias.110, %out_dtype.22, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:45
      %475 : Tensor = aten::add(%473, %474, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:19
      -> (%475)
    block1():
      %running_mean.44 : Tensor = prim::GetAttr[name="running_mean"](%norm.21)
      %running_var.44 : Tensor = prim::GetAttr[name="running_var"](%norm.21)
      %weight.67 : Tensor = prim::GetAttr[name="weight"](%norm.21)
      %bias.112 : Tensor = prim::GetAttr[name="bias"](%norm.21)
      %eps.44 : float = prim::GetAttr[name="eps"](%norm.21)
      %481 : Tensor = aten::batch_norm(%x.40, %weight.67, %bias.112, %running_mean.44, %running_var.44, %44, %37, %eps.44, %55) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:2421:11
      -> (%481)
  %out.35 : Tensor = aten::add_(%out.33, %input.6, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\resnet.py:208:8
  %input.11 : Tensor = aten::relu_(%out.35) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\resnet.py:209:14
  %conv1.8 : __torch__.detectron2.layers.wrappers.___torch_mangle_353.Conv2d = prim::GetAttr[name="conv1"](%_2.3)
  %weight.69 : Tensor = prim::GetAttr[name="weight"](%conv1.8)
  %bias.114 : Tensor? = prim::GetAttr[name="bias"](%conv1.8)
  %487 : int[] = prim::ListConstruct(%43, %43)
  %488 : int[] = prim::ListConstruct(%48, %48)
  %489 : int[] = prim::ListConstruct(%43, %43)
  %x.44 : Tensor = aten::conv2d(%input.11, %weight.69, %bias.114, %487, %488, %489, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:106:12
  %norm.23 : __torch__.detectron2.layers.batch_norm.___torch_mangle_346.FrozenBatchNorm2d = prim::GetAttr[name="norm"](%conv1.8)
  %492 : bool = prim::requires_grad(%x.44)
  %out.37 : Tensor = prim::If(%492) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:45:8
    block0():
      %weight.71 : Tensor = prim::GetAttr[name="weight"](%norm.23)
      %running_var.46 : Tensor = prim::GetAttr[name="running_var"](%norm.23)
      %eps.46 : float = prim::GetAttr[name="eps"](%norm.23)
      %497 : Tensor = aten::add(%running_var.46, %eps.46, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:35
      %498 : Tensor = aten::rsqrt(%497) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:35
      %scale.48 : Tensor = aten::mul(%weight.71, %498) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:20
      %bias.116 : Tensor = prim::GetAttr[name="bias"](%norm.23)
      %running_mean.46 : Tensor = prim::GetAttr[name="running_mean"](%norm.23)
      %502 : Tensor = aten::mul(%running_mean.46, %scale.48) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:49:31
      %bias.118 : Tensor = aten::sub(%bias.116, %502, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:49:19
      %504 : int[] = prim::ListConstruct(%43, %51, %43, %43)
      %scale.50 : Tensor = aten::reshape(%scale.48, %504) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:50:20
      %506 : int[] = prim::ListConstruct(%43, %51, %43, %43)
      %bias.120 : Tensor = aten::reshape(%bias.118, %506) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:51:19
      %out_dtype.24 : int = prim::dtype(%x.44)
      %509 : Tensor = aten::to(%scale.50, %out_dtype.24, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:23
      %510 : Tensor = aten::mul(%x.44, %509) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:19
      %511 : Tensor = aten::to(%bias.120, %out_dtype.24, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:45
      %512 : Tensor = aten::add(%510, %511, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:19
      -> (%512)
    block1():
      %running_mean.48 : Tensor = prim::GetAttr[name="running_mean"](%norm.23)
      %running_var.48 : Tensor = prim::GetAttr[name="running_var"](%norm.23)
      %weight.73 : Tensor = prim::GetAttr[name="weight"](%norm.23)
      %bias.122 : Tensor = prim::GetAttr[name="bias"](%norm.23)
      %eps.48 : float = prim::GetAttr[name="eps"](%norm.23)
      %518 : Tensor = aten::batch_norm(%x.44, %weight.73, %bias.122, %running_mean.48, %running_var.48, %44, %37, %eps.48, %55) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:2421:11
      -> (%518)
  %out.39 : Tensor = aten::relu_(%out.37) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\resnet.py:196:14
  %conv2.6 : __torch__.detectron2.layers.wrappers.___torch_mangle_351.Conv2d = prim::GetAttr[name="conv2"](%_2.3)
  %weight.75 : Tensor = prim::GetAttr[name="weight"](%conv2.6)
  %bias.124 : Tensor? = prim::GetAttr[name="bias"](%conv2.6)
  %523 : int[] = prim::ListConstruct(%43, %43)
  %524 : int[] = prim::ListConstruct(%43, %43)
  %525 : int[] = prim::ListConstruct(%43, %43)
  %x.46 : Tensor = aten::conv2d(%out.39, %weight.75, %bias.124, %523, %524, %525, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:106:12
  %norm.25 : __torch__.detectron2.layers.batch_norm.___torch_mangle_346.FrozenBatchNorm2d = prim::GetAttr[name="norm"](%conv2.6)
  %528 : bool = prim::requires_grad(%x.46)
  %out.41 : Tensor = prim::If(%528) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:45:8
    block0():
      %weight.77 : Tensor = prim::GetAttr[name="weight"](%norm.25)
      %running_var.50 : Tensor = prim::GetAttr[name="running_var"](%norm.25)
      %eps.50 : float = prim::GetAttr[name="eps"](%norm.25)
      %533 : Tensor = aten::add(%running_var.50, %eps.50, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:35
      %534 : Tensor = aten::rsqrt(%533) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:35
      %scale.52 : Tensor = aten::mul(%weight.77, %534) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:20
      %bias.126 : Tensor = prim::GetAttr[name="bias"](%norm.25)
      %running_mean.50 : Tensor = prim::GetAttr[name="running_mean"](%norm.25)
      %538 : Tensor = aten::mul(%running_mean.50, %scale.52) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:49:31
      %bias.128 : Tensor = aten::sub(%bias.126, %538, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:49:19
      %540 : int[] = prim::ListConstruct(%43, %51, %43, %43)
      %scale.54 : Tensor = aten::reshape(%scale.52, %540) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:50:20
      %542 : int[] = prim::ListConstruct(%43, %51, %43, %43)
      %bias.130 : Tensor = aten::reshape(%bias.128, %542) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:51:19
      %out_dtype.26 : int = prim::dtype(%x.46)
      %545 : Tensor = aten::to(%scale.54, %out_dtype.26, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:23
      %546 : Tensor = aten::mul(%x.46, %545) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:19
      %547 : Tensor = aten::to(%bias.130, %out_dtype.26, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:45
      %548 : Tensor = aten::add(%546, %547, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:19
      -> (%548)
    block1():
      %running_mean.52 : Tensor = prim::GetAttr[name="running_mean"](%norm.25)
      %running_var.52 : Tensor = prim::GetAttr[name="running_var"](%norm.25)
      %weight.79 : Tensor = prim::GetAttr[name="weight"](%norm.25)
      %bias.132 : Tensor = prim::GetAttr[name="bias"](%norm.25)
      %eps.52 : float = prim::GetAttr[name="eps"](%norm.25)
      %554 : Tensor = aten::batch_norm(%x.46, %weight.79, %bias.132, %running_mean.52, %running_var.52, %44, %37, %eps.52, %55) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:2421:11
      -> (%554)
  %out.43 : Tensor = aten::relu_(%out.41) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\resnet.py:199:14
  %conv3.6 : __torch__.detectron2.layers.wrappers.___torch_mangle_349.Conv2d = prim::GetAttr[name="conv3"](%_2.3)
  %weight.81 : Tensor = prim::GetAttr[name="weight"](%conv3.6)
  %bias.134 : Tensor? = prim::GetAttr[name="bias"](%conv3.6)
  %559 : int[] = prim::ListConstruct(%43, %43)
  %560 : int[] = prim::ListConstruct(%48, %48)
  %561 : int[] = prim::ListConstruct(%43, %43)
  %x.48 : Tensor = aten::conv2d(%out.43, %weight.81, %bias.134, %559, %560, %561, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:106:12
  %norm.27 : __torch__.detectron2.layers.batch_norm.___torch_mangle_346.FrozenBatchNorm2d = prim::GetAttr[name="norm"](%conv3.6)
  %564 : bool = prim::requires_grad(%x.48)
  %out.45 : Tensor = prim::If(%564) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:45:8
    block0():
      %weight.83 : Tensor = prim::GetAttr[name="weight"](%norm.27)
      %running_var.54 : Tensor = prim::GetAttr[name="running_var"](%norm.27)
      %eps.54 : float = prim::GetAttr[name="eps"](%norm.27)
      %569 : Tensor = aten::add(%running_var.54, %eps.54, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:35
      %570 : Tensor = aten::rsqrt(%569) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:35
      %scale.56 : Tensor = aten::mul(%weight.83, %570) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:20
      %bias.136 : Tensor = prim::GetAttr[name="bias"](%norm.27)
      %running_mean.54 : Tensor = prim::GetAttr[name="running_mean"](%norm.27)
      %574 : Tensor = aten::mul(%running_mean.54, %scale.56) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:49:31
      %bias.138 : Tensor = aten::sub(%bias.136, %574, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:49:19
      %576 : int[] = prim::ListConstruct(%43, %51, %43, %43)
      %scale.58 : Tensor = aten::reshape(%scale.56, %576) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:50:20
      %578 : int[] = prim::ListConstruct(%43, %51, %43, %43)
      %bias.140 : Tensor = aten::reshape(%bias.138, %578) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:51:19
      %out_dtype.28 : int = prim::dtype(%x.48)
      %581 : Tensor = aten::to(%scale.58, %out_dtype.28, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:23
      %582 : Tensor = aten::mul(%x.48, %581) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:19
      %583 : Tensor = aten::to(%bias.140, %out_dtype.28, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:45
      %584 : Tensor = aten::add(%582, %583, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:19
      -> (%584)
    block1():
      %running_mean.56 : Tensor = prim::GetAttr[name="running_mean"](%norm.27)
      %running_var.56 : Tensor = prim::GetAttr[name="running_var"](%norm.27)
      %weight.85 : Tensor = prim::GetAttr[name="weight"](%norm.27)
      %bias.142 : Tensor = prim::GetAttr[name="bias"](%norm.27)
      %eps.56 : float = prim::GetAttr[name="eps"](%norm.27)
      %590 : Tensor = aten::batch_norm(%x.48, %weight.85, %bias.142, %running_mean.56, %running_var.56, %44, %37, %eps.56, %55) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:2421:11
      -> (%590)
  %out.47 : Tensor = aten::add_(%out.45, %input.11, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\resnet.py:208:8
  %x.20 : Tensor = aten::relu_(%out.47) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\resnet.py:209:14
  %_out_features.3 : str[] = prim::GetAttr[name="_out_features"](%bottom_up)
  %594 : bool = aten::__contains__(%_out_features.3, %name.1) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\resnet.py:450:15
   = prim::If(%594) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\resnet.py:450:12
    block0():
       = aten::_set_item(%bottom_up_features.1, %name.1, %x.20) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\resnet.py:451:16
      -> ()
    block1():
      -> ()
  %_0.5 : __torch__.detectron2.modeling.backbone.resnet.___torch_mangle_360.BottleneckBlock = prim::GetAttr[name="0"](%_1.1)
  %_1.5 : __torch__.detectron2.modeling.backbone.resnet.___torch_mangle_362.BottleneckBlock = prim::GetAttr[name="1"](%_1.1)
  %_2.5 : __torch__.detectron2.modeling.backbone.resnet.___torch_mangle_362.BottleneckBlock = prim::GetAttr[name="2"](%_1.1)
  %_3.3 : __torch__.detectron2.modeling.backbone.resnet.___torch_mangle_362.BottleneckBlock = prim::GetAttr[name="3"](%_1.1)
  %conv1.10 : __torch__.detectron2.layers.wrappers.___torch_mangle_357.Conv2d = prim::GetAttr[name="conv1"](%_0.5)
  %weight.87 : Tensor = prim::GetAttr[name="weight"](%conv1.10)
  %bias.144 : Tensor? = prim::GetAttr[name="bias"](%conv1.10)
  %602 : int[] = prim::ListConstruct(%46, %46)
  %603 : int[] = prim::ListConstruct(%48, %48)
  %604 : int[] = prim::ListConstruct(%43, %43)
  %x.52 : Tensor = aten::conv2d(%x.20, %weight.87, %bias.144, %602, %603, %604, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:106:12
  %norm.29 : __torch__.detectron2.layers.batch_norm.___torch_mangle_346.FrozenBatchNorm2d = prim::GetAttr[name="norm"](%conv1.10)
  %607 : bool = prim::requires_grad(%x.52)
  %out.49 : Tensor = prim::If(%607) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:45:8
    block0():
      %weight.89 : Tensor = prim::GetAttr[name="weight"](%norm.29)
      %running_var.58 : Tensor = prim::GetAttr[name="running_var"](%norm.29)
      %eps.58 : float = prim::GetAttr[name="eps"](%norm.29)
      %612 : Tensor = aten::add(%running_var.58, %eps.58, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:35
      %613 : Tensor = aten::rsqrt(%612) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:35
      %scale.60 : Tensor = aten::mul(%weight.89, %613) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:20
      %bias.146 : Tensor = prim::GetAttr[name="bias"](%norm.29)
      %running_mean.58 : Tensor = prim::GetAttr[name="running_mean"](%norm.29)
      %617 : Tensor = aten::mul(%running_mean.58, %scale.60) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:49:31
      %bias.148 : Tensor = aten::sub(%bias.146, %617, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:49:19
      %619 : int[] = prim::ListConstruct(%43, %51, %43, %43)
      %scale.62 : Tensor = aten::reshape(%scale.60, %619) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:50:20
      %621 : int[] = prim::ListConstruct(%43, %51, %43, %43)
      %bias.150 : Tensor = aten::reshape(%bias.148, %621) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:51:19
      %out_dtype.30 : int = prim::dtype(%x.52)
      %624 : Tensor = aten::to(%scale.62, %out_dtype.30, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:23
      %625 : Tensor = aten::mul(%x.52, %624) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:19
      %626 : Tensor = aten::to(%bias.150, %out_dtype.30, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:45
      %627 : Tensor = aten::add(%625, %626, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:19
      -> (%627)
    block1():
      %running_mean.60 : Tensor = prim::GetAttr[name="running_mean"](%norm.29)
      %running_var.60 : Tensor = prim::GetAttr[name="running_var"](%norm.29)
      %weight.91 : Tensor = prim::GetAttr[name="weight"](%norm.29)
      %bias.152 : Tensor = prim::GetAttr[name="bias"](%norm.29)
      %eps.60 : float = prim::GetAttr[name="eps"](%norm.29)
      %633 : Tensor = aten::batch_norm(%x.52, %weight.91, %bias.152, %running_mean.60, %running_var.60, %44, %37, %eps.60, %55) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:2421:11
      -> (%633)
  %out.51 : Tensor = aten::relu_(%out.49) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\resnet.py:196:14
  %conv2.8 : __torch__.detectron2.layers.wrappers.___torch_mangle_358.Conv2d = prim::GetAttr[name="conv2"](%_0.5)
  %weight.93 : Tensor = prim::GetAttr[name="weight"](%conv2.8)
  %bias.154 : Tensor? = prim::GetAttr[name="bias"](%conv2.8)
  %638 : int[] = prim::ListConstruct(%43, %43)
  %639 : int[] = prim::ListConstruct(%43, %43)
  %640 : int[] = prim::ListConstruct(%43, %43)
  %x.54 : Tensor = aten::conv2d(%out.51, %weight.93, %bias.154, %638, %639, %640, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:106:12
  %norm.31 : __torch__.detectron2.layers.batch_norm.___torch_mangle_346.FrozenBatchNorm2d = prim::GetAttr[name="norm"](%conv2.8)
  %643 : bool = prim::requires_grad(%x.54)
  %out.53 : Tensor = prim::If(%643) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:45:8
    block0():
      %weight.95 : Tensor = prim::GetAttr[name="weight"](%norm.31)
      %running_var.62 : Tensor = prim::GetAttr[name="running_var"](%norm.31)
      %eps.62 : float = prim::GetAttr[name="eps"](%norm.31)
      %648 : Tensor = aten::add(%running_var.62, %eps.62, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:35
      %649 : Tensor = aten::rsqrt(%648) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:35
      %scale.64 : Tensor = aten::mul(%weight.95, %649) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:20
      %bias.156 : Tensor = prim::GetAttr[name="bias"](%norm.31)
      %running_mean.62 : Tensor = prim::GetAttr[name="running_mean"](%norm.31)
      %653 : Tensor = aten::mul(%running_mean.62, %scale.64) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:49:31
      %bias.158 : Tensor = aten::sub(%bias.156, %653, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:49:19
      %655 : int[] = prim::ListConstruct(%43, %51, %43, %43)
      %scale.66 : Tensor = aten::reshape(%scale.64, %655) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:50:20
      %657 : int[] = prim::ListConstruct(%43, %51, %43, %43)
      %bias.160 : Tensor = aten::reshape(%bias.158, %657) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:51:19
      %out_dtype.32 : int = prim::dtype(%x.54)
      %660 : Tensor = aten::to(%scale.66, %out_dtype.32, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:23
      %661 : Tensor = aten::mul(%x.54, %660) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:19
      %662 : Tensor = aten::to(%bias.160, %out_dtype.32, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:45
      %663 : Tensor = aten::add(%661, %662, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:19
      -> (%663)
    block1():
      %running_mean.64 : Tensor = prim::GetAttr[name="running_mean"](%norm.31)
      %running_var.64 : Tensor = prim::GetAttr[name="running_var"](%norm.31)
      %weight.97 : Tensor = prim::GetAttr[name="weight"](%norm.31)
      %bias.162 : Tensor = prim::GetAttr[name="bias"](%norm.31)
      %eps.64 : float = prim::GetAttr[name="eps"](%norm.31)
      %669 : Tensor = aten::batch_norm(%x.54, %weight.97, %bias.162, %running_mean.64, %running_var.64, %44, %37, %eps.64, %55) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:2421:11
      -> (%669)
  %out.55 : Tensor = aten::relu_(%out.53) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\resnet.py:199:14
  %conv3.8 : __torch__.detectron2.layers.wrappers.___torch_mangle_359.Conv2d = prim::GetAttr[name="conv3"](%_0.5)
  %weight.99 : Tensor = prim::GetAttr[name="weight"](%conv3.8)
  %bias.164 : Tensor? = prim::GetAttr[name="bias"](%conv3.8)
  %674 : int[] = prim::ListConstruct(%43, %43)
  %675 : int[] = prim::ListConstruct(%48, %48)
  %676 : int[] = prim::ListConstruct(%43, %43)
  %x.56 : Tensor = aten::conv2d(%out.55, %weight.99, %bias.164, %674, %675, %676, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:106:12
  %norm.33 : __torch__.detectron2.layers.batch_norm.___torch_mangle_346.FrozenBatchNorm2d = prim::GetAttr[name="norm"](%conv3.8)
  %679 : bool = prim::requires_grad(%x.56)
  %out.57 : Tensor = prim::If(%679) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:45:8
    block0():
      %weight.101 : Tensor = prim::GetAttr[name="weight"](%norm.33)
      %running_var.66 : Tensor = prim::GetAttr[name="running_var"](%norm.33)
      %eps.66 : float = prim::GetAttr[name="eps"](%norm.33)
      %684 : Tensor = aten::add(%running_var.66, %eps.66, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:35
      %685 : Tensor = aten::rsqrt(%684) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:35
      %scale.68 : Tensor = aten::mul(%weight.101, %685) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:20
      %bias.166 : Tensor = prim::GetAttr[name="bias"](%norm.33)
      %running_mean.66 : Tensor = prim::GetAttr[name="running_mean"](%norm.33)
      %689 : Tensor = aten::mul(%running_mean.66, %scale.68) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:49:31
      %bias.168 : Tensor = aten::sub(%bias.166, %689, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:49:19
      %691 : int[] = prim::ListConstruct(%43, %51, %43, %43)
      %scale.70 : Tensor = aten::reshape(%scale.68, %691) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:50:20
      %693 : int[] = prim::ListConstruct(%43, %51, %43, %43)
      %bias.170 : Tensor = aten::reshape(%bias.168, %693) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:51:19
      %out_dtype.34 : int = prim::dtype(%x.56)
      %696 : Tensor = aten::to(%scale.70, %out_dtype.34, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:23
      %697 : Tensor = aten::mul(%x.56, %696) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:19
      %698 : Tensor = aten::to(%bias.170, %out_dtype.34, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:45
      %699 : Tensor = aten::add(%697, %698, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:19
      -> (%699)
    block1():
      %running_mean.68 : Tensor = prim::GetAttr[name="running_mean"](%norm.33)
      %running_var.68 : Tensor = prim::GetAttr[name="running_var"](%norm.33)
      %weight.103 : Tensor = prim::GetAttr[name="weight"](%norm.33)
      %bias.172 : Tensor = prim::GetAttr[name="bias"](%norm.33)
      %eps.68 : float = prim::GetAttr[name="eps"](%norm.33)
      %705 : Tensor = aten::batch_norm(%x.56, %weight.103, %bias.172, %running_mean.68, %running_var.68, %44, %37, %eps.68, %55) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:2421:11
      -> (%705)
  %shortcut.8 : __torch__.detectron2.layers.wrappers.___torch_mangle_356.Conv2d = prim::GetAttr[name="shortcut"](%_0.5)
  %weight.105 : Tensor = prim::GetAttr[name="weight"](%shortcut.8)
  %bias.174 : Tensor? = prim::GetAttr[name="bias"](%shortcut.8)
  %709 : int[] = prim::ListConstruct(%46, %46)
  %710 : int[] = prim::ListConstruct(%48, %48)
  %711 : int[] = prim::ListConstruct(%43, %43)
  %x.58 : Tensor = aten::conv2d(%x.20, %weight.105, %bias.174, %709, %710, %711, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:106:12
  %norm.35 : __torch__.detectron2.layers.batch_norm.___torch_mangle_346.FrozenBatchNorm2d = prim::GetAttr[name="norm"](%shortcut.8)
  %714 : bool = prim::requires_grad(%x.58)
  %shortcut.10 : Tensor = prim::If(%714) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:45:8
    block0():
      %weight.107 : Tensor = prim::GetAttr[name="weight"](%norm.35)
      %running_var.70 : Tensor = prim::GetAttr[name="running_var"](%norm.35)
      %eps.70 : float = prim::GetAttr[name="eps"](%norm.35)
      %719 : Tensor = aten::add(%running_var.70, %eps.70, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:35
      %720 : Tensor = aten::rsqrt(%719) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:35
      %scale.72 : Tensor = aten::mul(%weight.107, %720) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:20
      %bias.176 : Tensor = prim::GetAttr[name="bias"](%norm.35)
      %running_mean.70 : Tensor = prim::GetAttr[name="running_mean"](%norm.35)
      %724 : Tensor = aten::mul(%running_mean.70, %scale.72) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:49:31
      %bias.178 : Tensor = aten::sub(%bias.176, %724, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:49:19
      %726 : int[] = prim::ListConstruct(%43, %51, %43, %43)
      %scale.74 : Tensor = aten::reshape(%scale.72, %726) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:50:20
      %728 : int[] = prim::ListConstruct(%43, %51, %43, %43)
      %bias.180 : Tensor = aten::reshape(%bias.178, %728) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:51:19
      %out_dtype.36 : int = prim::dtype(%x.58)
      %731 : Tensor = aten::to(%scale.74, %out_dtype.36, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:23
      %732 : Tensor = aten::mul(%x.58, %731) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:19
      %733 : Tensor = aten::to(%bias.180, %out_dtype.36, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:45
      %734 : Tensor = aten::add(%732, %733, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:19
      -> (%734)
    block1():
      %running_mean.72 : Tensor = prim::GetAttr[name="running_mean"](%norm.35)
      %running_var.72 : Tensor = prim::GetAttr[name="running_var"](%norm.35)
      %weight.109 : Tensor = prim::GetAttr[name="weight"](%norm.35)
      %bias.182 : Tensor = prim::GetAttr[name="bias"](%norm.35)
      %eps.72 : float = prim::GetAttr[name="eps"](%norm.35)
      %740 : Tensor = aten::batch_norm(%x.58, %weight.109, %bias.182, %running_mean.72, %running_var.72, %44, %37, %eps.72, %55) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:2421:11
      -> (%740)
  %out.59 : Tensor = aten::add_(%out.57, %shortcut.10, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\resnet.py:208:8
  %input.13 : Tensor = aten::relu_(%out.59) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\resnet.py:209:14
  %conv1.12 : __torch__.detectron2.layers.wrappers.___torch_mangle_361.Conv2d = prim::GetAttr[name="conv1"](%_1.5)
  %weight.111 : Tensor = prim::GetAttr[name="weight"](%conv1.12)
  %bias.184 : Tensor? = prim::GetAttr[name="bias"](%conv1.12)
  %746 : int[] = prim::ListConstruct(%43, %43)
  %747 : int[] = prim::ListConstruct(%48, %48)
  %748 : int[] = prim::ListConstruct(%43, %43)
  %x.60 : Tensor = aten::conv2d(%input.13, %weight.111, %bias.184, %746, %747, %748, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:106:12
  %norm.37 : __torch__.detectron2.layers.batch_norm.___torch_mangle_346.FrozenBatchNorm2d = prim::GetAttr[name="norm"](%conv1.12)
  %751 : bool = prim::requires_grad(%x.60)
  %out.61 : Tensor = prim::If(%751) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:45:8
    block0():
      %weight.113 : Tensor = prim::GetAttr[name="weight"](%norm.37)
      %running_var.74 : Tensor = prim::GetAttr[name="running_var"](%norm.37)
      %eps.74 : float = prim::GetAttr[name="eps"](%norm.37)
      %756 : Tensor = aten::add(%running_var.74, %eps.74, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:35
      %757 : Tensor = aten::rsqrt(%756) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:35
      %scale.76 : Tensor = aten::mul(%weight.113, %757) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:20
      %bias.186 : Tensor = prim::GetAttr[name="bias"](%norm.37)
      %running_mean.74 : Tensor = prim::GetAttr[name="running_mean"](%norm.37)
      %761 : Tensor = aten::mul(%running_mean.74, %scale.76) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:49:31
      %bias.188 : Tensor = aten::sub(%bias.186, %761, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:49:19
      %763 : int[] = prim::ListConstruct(%43, %51, %43, %43)
      %scale.78 : Tensor = aten::reshape(%scale.76, %763) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:50:20
      %765 : int[] = prim::ListConstruct(%43, %51, %43, %43)
      %bias.190 : Tensor = aten::reshape(%bias.188, %765) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:51:19
      %out_dtype.38 : int = prim::dtype(%x.60)
      %768 : Tensor = aten::to(%scale.78, %out_dtype.38, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:23
      %769 : Tensor = aten::mul(%x.60, %768) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:19
      %770 : Tensor = aten::to(%bias.190, %out_dtype.38, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:45
      %771 : Tensor = aten::add(%769, %770, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:19
      -> (%771)
    block1():
      %running_mean.76 : Tensor = prim::GetAttr[name="running_mean"](%norm.37)
      %running_var.76 : Tensor = prim::GetAttr[name="running_var"](%norm.37)
      %weight.115 : Tensor = prim::GetAttr[name="weight"](%norm.37)
      %bias.192 : Tensor = prim::GetAttr[name="bias"](%norm.37)
      %eps.76 : float = prim::GetAttr[name="eps"](%norm.37)
      %777 : Tensor = aten::batch_norm(%x.60, %weight.115, %bias.192, %running_mean.76, %running_var.76, %44, %37, %eps.76, %55) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:2421:11
      -> (%777)
  %out.63 : Tensor = aten::relu_(%out.61) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\resnet.py:196:14
  %conv2.10 : __torch__.detectron2.layers.wrappers.___torch_mangle_358.Conv2d = prim::GetAttr[name="conv2"](%_1.5)
  %weight.117 : Tensor = prim::GetAttr[name="weight"](%conv2.10)
  %bias.194 : Tensor? = prim::GetAttr[name="bias"](%conv2.10)
  %782 : int[] = prim::ListConstruct(%43, %43)
  %783 : int[] = prim::ListConstruct(%43, %43)
  %784 : int[] = prim::ListConstruct(%43, %43)
  %x.62 : Tensor = aten::conv2d(%out.63, %weight.117, %bias.194, %782, %783, %784, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:106:12
  %norm.39 : __torch__.detectron2.layers.batch_norm.___torch_mangle_346.FrozenBatchNorm2d = prim::GetAttr[name="norm"](%conv2.10)
  %787 : bool = prim::requires_grad(%x.62)
  %out.65 : Tensor = prim::If(%787) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:45:8
    block0():
      %weight.119 : Tensor = prim::GetAttr[name="weight"](%norm.39)
      %running_var.78 : Tensor = prim::GetAttr[name="running_var"](%norm.39)
      %eps.78 : float = prim::GetAttr[name="eps"](%norm.39)
      %792 : Tensor = aten::add(%running_var.78, %eps.78, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:35
      %793 : Tensor = aten::rsqrt(%792) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:35
      %scale.80 : Tensor = aten::mul(%weight.119, %793) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:20
      %bias.196 : Tensor = prim::GetAttr[name="bias"](%norm.39)
      %running_mean.78 : Tensor = prim::GetAttr[name="running_mean"](%norm.39)
      %797 : Tensor = aten::mul(%running_mean.78, %scale.80) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:49:31
      %bias.198 : Tensor = aten::sub(%bias.196, %797, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:49:19
      %799 : int[] = prim::ListConstruct(%43, %51, %43, %43)
      %scale.82 : Tensor = aten::reshape(%scale.80, %799) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:50:20
      %801 : int[] = prim::ListConstruct(%43, %51, %43, %43)
      %bias.200 : Tensor = aten::reshape(%bias.198, %801) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:51:19
      %out_dtype.40 : int = prim::dtype(%x.62)
      %804 : Tensor = aten::to(%scale.82, %out_dtype.40, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:23
      %805 : Tensor = aten::mul(%x.62, %804) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:19
      %806 : Tensor = aten::to(%bias.200, %out_dtype.40, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:45
      %807 : Tensor = aten::add(%805, %806, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:19
      -> (%807)
    block1():
      %running_mean.80 : Tensor = prim::GetAttr[name="running_mean"](%norm.39)
      %running_var.80 : Tensor = prim::GetAttr[name="running_var"](%norm.39)
      %weight.121 : Tensor = prim::GetAttr[name="weight"](%norm.39)
      %bias.202 : Tensor = prim::GetAttr[name="bias"](%norm.39)
      %eps.80 : float = prim::GetAttr[name="eps"](%norm.39)
      %813 : Tensor = aten::batch_norm(%x.62, %weight.121, %bias.202, %running_mean.80, %running_var.80, %44, %37, %eps.80, %55) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:2421:11
      -> (%813)
  %out.67 : Tensor = aten::relu_(%out.65) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\resnet.py:199:14
  %conv3.10 : __torch__.detectron2.layers.wrappers.___torch_mangle_359.Conv2d = prim::GetAttr[name="conv3"](%_1.5)
  %weight.123 : Tensor = prim::GetAttr[name="weight"](%conv3.10)
  %bias.204 : Tensor? = prim::GetAttr[name="bias"](%conv3.10)
  %818 : int[] = prim::ListConstruct(%43, %43)
  %819 : int[] = prim::ListConstruct(%48, %48)
  %820 : int[] = prim::ListConstruct(%43, %43)
  %x.64 : Tensor = aten::conv2d(%out.67, %weight.123, %bias.204, %818, %819, %820, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:106:12
  %norm.41 : __torch__.detectron2.layers.batch_norm.___torch_mangle_346.FrozenBatchNorm2d = prim::GetAttr[name="norm"](%conv3.10)
  %823 : bool = prim::requires_grad(%x.64)
  %out.69 : Tensor = prim::If(%823) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:45:8
    block0():
      %weight.125 : Tensor = prim::GetAttr[name="weight"](%norm.41)
      %running_var.82 : Tensor = prim::GetAttr[name="running_var"](%norm.41)
      %eps.82 : float = prim::GetAttr[name="eps"](%norm.41)
      %828 : Tensor = aten::add(%running_var.82, %eps.82, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:35
      %829 : Tensor = aten::rsqrt(%828) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:35
      %scale.84 : Tensor = aten::mul(%weight.125, %829) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:20
      %bias.206 : Tensor = prim::GetAttr[name="bias"](%norm.41)
      %running_mean.82 : Tensor = prim::GetAttr[name="running_mean"](%norm.41)
      %833 : Tensor = aten::mul(%running_mean.82, %scale.84) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:49:31
      %bias.208 : Tensor = aten::sub(%bias.206, %833, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:49:19
      %835 : int[] = prim::ListConstruct(%43, %51, %43, %43)
      %scale.86 : Tensor = aten::reshape(%scale.84, %835) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:50:20
      %837 : int[] = prim::ListConstruct(%43, %51, %43, %43)
      %bias.210 : Tensor = aten::reshape(%bias.208, %837) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:51:19
      %out_dtype.42 : int = prim::dtype(%x.64)
      %840 : Tensor = aten::to(%scale.86, %out_dtype.42, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:23
      %841 : Tensor = aten::mul(%x.64, %840) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:19
      %842 : Tensor = aten::to(%bias.210, %out_dtype.42, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:45
      %843 : Tensor = aten::add(%841, %842, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:19
      -> (%843)
    block1():
      %running_mean.84 : Tensor = prim::GetAttr[name="running_mean"](%norm.41)
      %running_var.84 : Tensor = prim::GetAttr[name="running_var"](%norm.41)
      %weight.127 : Tensor = prim::GetAttr[name="weight"](%norm.41)
      %bias.212 : Tensor = prim::GetAttr[name="bias"](%norm.41)
      %eps.84 : float = prim::GetAttr[name="eps"](%norm.41)
      %849 : Tensor = aten::batch_norm(%x.64, %weight.127, %bias.212, %running_mean.84, %running_var.84, %44, %37, %eps.84, %55) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:2421:11
      -> (%849)
  %out.71 : Tensor = aten::add_(%out.69, %input.13, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\resnet.py:208:8
  %input.15 : Tensor = aten::relu_(%out.71) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\resnet.py:209:14
  %conv1.14 : __torch__.detectron2.layers.wrappers.___torch_mangle_361.Conv2d = prim::GetAttr[name="conv1"](%_2.5)
  %weight.129 : Tensor = prim::GetAttr[name="weight"](%conv1.14)
  %bias.214 : Tensor? = prim::GetAttr[name="bias"](%conv1.14)
  %855 : int[] = prim::ListConstruct(%43, %43)
  %856 : int[] = prim::ListConstruct(%48, %48)
  %857 : int[] = prim::ListConstruct(%43, %43)
  %x.66 : Tensor = aten::conv2d(%input.15, %weight.129, %bias.214, %855, %856, %857, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:106:12
  %norm.43 : __torch__.detectron2.layers.batch_norm.___torch_mangle_346.FrozenBatchNorm2d = prim::GetAttr[name="norm"](%conv1.14)
  %860 : bool = prim::requires_grad(%x.66)
  %out.73 : Tensor = prim::If(%860) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:45:8
    block0():
      %weight.131 : Tensor = prim::GetAttr[name="weight"](%norm.43)
      %running_var.86 : Tensor = prim::GetAttr[name="running_var"](%norm.43)
      %eps.86 : float = prim::GetAttr[name="eps"](%norm.43)
      %865 : Tensor = aten::add(%running_var.86, %eps.86, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:35
      %866 : Tensor = aten::rsqrt(%865) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:35
      %scale.88 : Tensor = aten::mul(%weight.131, %866) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:20
      %bias.216 : Tensor = prim::GetAttr[name="bias"](%norm.43)
      %running_mean.86 : Tensor = prim::GetAttr[name="running_mean"](%norm.43)
      %870 : Tensor = aten::mul(%running_mean.86, %scale.88) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:49:31
      %bias.218 : Tensor = aten::sub(%bias.216, %870, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:49:19
      %872 : int[] = prim::ListConstruct(%43, %51, %43, %43)
      %scale.90 : Tensor = aten::reshape(%scale.88, %872) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:50:20
      %874 : int[] = prim::ListConstruct(%43, %51, %43, %43)
      %bias.220 : Tensor = aten::reshape(%bias.218, %874) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:51:19
      %out_dtype.44 : int = prim::dtype(%x.66)
      %877 : Tensor = aten::to(%scale.90, %out_dtype.44, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:23
      %878 : Tensor = aten::mul(%x.66, %877) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:19
      %879 : Tensor = aten::to(%bias.220, %out_dtype.44, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:45
      %880 : Tensor = aten::add(%878, %879, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:19
      -> (%880)
    block1():
      %running_mean.88 : Tensor = prim::GetAttr[name="running_mean"](%norm.43)
      %running_var.88 : Tensor = prim::GetAttr[name="running_var"](%norm.43)
      %weight.133 : Tensor = prim::GetAttr[name="weight"](%norm.43)
      %bias.222 : Tensor = prim::GetAttr[name="bias"](%norm.43)
      %eps.88 : float = prim::GetAttr[name="eps"](%norm.43)
      %886 : Tensor = aten::batch_norm(%x.66, %weight.133, %bias.222, %running_mean.88, %running_var.88, %44, %37, %eps.88, %55) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:2421:11
      -> (%886)
  %out.75 : Tensor = aten::relu_(%out.73) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\resnet.py:196:14
  %conv2.12 : __torch__.detectron2.layers.wrappers.___torch_mangle_358.Conv2d = prim::GetAttr[name="conv2"](%_2.5)
  %weight.135 : Tensor = prim::GetAttr[name="weight"](%conv2.12)
  %bias.224 : Tensor? = prim::GetAttr[name="bias"](%conv2.12)
  %891 : int[] = prim::ListConstruct(%43, %43)
  %892 : int[] = prim::ListConstruct(%43, %43)
  %893 : int[] = prim::ListConstruct(%43, %43)
  %x.68 : Tensor = aten::conv2d(%out.75, %weight.135, %bias.224, %891, %892, %893, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:106:12
  %norm.45 : __torch__.detectron2.layers.batch_norm.___torch_mangle_346.FrozenBatchNorm2d = prim::GetAttr[name="norm"](%conv2.12)
  %896 : bool = prim::requires_grad(%x.68)
  %out.77 : Tensor = prim::If(%896) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:45:8
    block0():
      %weight.137 : Tensor = prim::GetAttr[name="weight"](%norm.45)
      %running_var.90 : Tensor = prim::GetAttr[name="running_var"](%norm.45)
      %eps.90 : float = prim::GetAttr[name="eps"](%norm.45)
      %901 : Tensor = aten::add(%running_var.90, %eps.90, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:35
      %902 : Tensor = aten::rsqrt(%901) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:35
      %scale.92 : Tensor = aten::mul(%weight.137, %902) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:20
      %bias.226 : Tensor = prim::GetAttr[name="bias"](%norm.45)
      %running_mean.90 : Tensor = prim::GetAttr[name="running_mean"](%norm.45)
      %906 : Tensor = aten::mul(%running_mean.90, %scale.92) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:49:31
      %bias.228 : Tensor = aten::sub(%bias.226, %906, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:49:19
      %908 : int[] = prim::ListConstruct(%43, %51, %43, %43)
      %scale.94 : Tensor = aten::reshape(%scale.92, %908) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:50:20
      %910 : int[] = prim::ListConstruct(%43, %51, %43, %43)
      %bias.230 : Tensor = aten::reshape(%bias.228, %910) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:51:19
      %out_dtype.46 : int = prim::dtype(%x.68)
      %913 : Tensor = aten::to(%scale.94, %out_dtype.46, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:23
      %914 : Tensor = aten::mul(%x.68, %913) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:19
      %915 : Tensor = aten::to(%bias.230, %out_dtype.46, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:45
      %916 : Tensor = aten::add(%914, %915, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:19
      -> (%916)
    block1():
      %running_mean.92 : Tensor = prim::GetAttr[name="running_mean"](%norm.45)
      %running_var.92 : Tensor = prim::GetAttr[name="running_var"](%norm.45)
      %weight.139 : Tensor = prim::GetAttr[name="weight"](%norm.45)
      %bias.232 : Tensor = prim::GetAttr[name="bias"](%norm.45)
      %eps.92 : float = prim::GetAttr[name="eps"](%norm.45)
      %922 : Tensor = aten::batch_norm(%x.68, %weight.139, %bias.232, %running_mean.92, %running_var.92, %44, %37, %eps.92, %55) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:2421:11
      -> (%922)
  %out.79 : Tensor = aten::relu_(%out.77) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\resnet.py:199:14
  %conv3.12 : __torch__.detectron2.layers.wrappers.___torch_mangle_359.Conv2d = prim::GetAttr[name="conv3"](%_2.5)
  %weight.141 : Tensor = prim::GetAttr[name="weight"](%conv3.12)
  %bias.234 : Tensor? = prim::GetAttr[name="bias"](%conv3.12)
  %927 : int[] = prim::ListConstruct(%43, %43)
  %928 : int[] = prim::ListConstruct(%48, %48)
  %929 : int[] = prim::ListConstruct(%43, %43)
  %x.70 : Tensor = aten::conv2d(%out.79, %weight.141, %bias.234, %927, %928, %929, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:106:12
  %norm.47 : __torch__.detectron2.layers.batch_norm.___torch_mangle_346.FrozenBatchNorm2d = prim::GetAttr[name="norm"](%conv3.12)
  %932 : bool = prim::requires_grad(%x.70)
  %out.81 : Tensor = prim::If(%932) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:45:8
    block0():
      %weight.143 : Tensor = prim::GetAttr[name="weight"](%norm.47)
      %running_var.94 : Tensor = prim::GetAttr[name="running_var"](%norm.47)
      %eps.94 : float = prim::GetAttr[name="eps"](%norm.47)
      %937 : Tensor = aten::add(%running_var.94, %eps.94, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:35
      %938 : Tensor = aten::rsqrt(%937) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:35
      %scale.96 : Tensor = aten::mul(%weight.143, %938) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:20
      %bias.236 : Tensor = prim::GetAttr[name="bias"](%norm.47)
      %running_mean.94 : Tensor = prim::GetAttr[name="running_mean"](%norm.47)
      %942 : Tensor = aten::mul(%running_mean.94, %scale.96) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:49:31
      %bias.238 : Tensor = aten::sub(%bias.236, %942, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:49:19
      %944 : int[] = prim::ListConstruct(%43, %51, %43, %43)
      %scale.98 : Tensor = aten::reshape(%scale.96, %944) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:50:20
      %946 : int[] = prim::ListConstruct(%43, %51, %43, %43)
      %bias.240 : Tensor = aten::reshape(%bias.238, %946) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:51:19
      %out_dtype.48 : int = prim::dtype(%x.70)
      %949 : Tensor = aten::to(%scale.98, %out_dtype.48, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:23
      %950 : Tensor = aten::mul(%x.70, %949) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:19
      %951 : Tensor = aten::to(%bias.240, %out_dtype.48, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:45
      %952 : Tensor = aten::add(%950, %951, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:19
      -> (%952)
    block1():
      %running_mean.96 : Tensor = prim::GetAttr[name="running_mean"](%norm.47)
      %running_var.96 : Tensor = prim::GetAttr[name="running_var"](%norm.47)
      %weight.145 : Tensor = prim::GetAttr[name="weight"](%norm.47)
      %bias.242 : Tensor = prim::GetAttr[name="bias"](%norm.47)
      %eps.96 : float = prim::GetAttr[name="eps"](%norm.47)
      %958 : Tensor = aten::batch_norm(%x.70, %weight.145, %bias.242, %running_mean.96, %running_var.96, %44, %37, %eps.96, %55) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:2421:11
      -> (%958)
  %out.83 : Tensor = aten::add_(%out.81, %input.15, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\resnet.py:208:8
  %input.19 : Tensor = aten::relu_(%out.83) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\resnet.py:209:14
  %conv1.16 : __torch__.detectron2.layers.wrappers.___torch_mangle_361.Conv2d = prim::GetAttr[name="conv1"](%_3.3)
  %weight.147 : Tensor = prim::GetAttr[name="weight"](%conv1.16)
  %bias.244 : Tensor? = prim::GetAttr[name="bias"](%conv1.16)
  %964 : int[] = prim::ListConstruct(%43, %43)
  %965 : int[] = prim::ListConstruct(%48, %48)
  %966 : int[] = prim::ListConstruct(%43, %43)
  %x.76 : Tensor = aten::conv2d(%input.19, %weight.147, %bias.244, %964, %965, %966, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:106:12
  %norm.49 : __torch__.detectron2.layers.batch_norm.___torch_mangle_346.FrozenBatchNorm2d = prim::GetAttr[name="norm"](%conv1.16)
  %969 : bool = prim::requires_grad(%x.76)
  %out.85 : Tensor = prim::If(%969) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:45:8
    block0():
      %weight.149 : Tensor = prim::GetAttr[name="weight"](%norm.49)
      %running_var.98 : Tensor = prim::GetAttr[name="running_var"](%norm.49)
      %eps.98 : float = prim::GetAttr[name="eps"](%norm.49)
      %974 : Tensor = aten::add(%running_var.98, %eps.98, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:35
      %975 : Tensor = aten::rsqrt(%974) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:35
      %scale.100 : Tensor = aten::mul(%weight.149, %975) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:20
      %bias.246 : Tensor = prim::GetAttr[name="bias"](%norm.49)
      %running_mean.98 : Tensor = prim::GetAttr[name="running_mean"](%norm.49)
      %979 : Tensor = aten::mul(%running_mean.98, %scale.100) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:49:31
      %bias.248 : Tensor = aten::sub(%bias.246, %979, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:49:19
      %981 : int[] = prim::ListConstruct(%43, %51, %43, %43)
      %scale.102 : Tensor = aten::reshape(%scale.100, %981) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:50:20
      %983 : int[] = prim::ListConstruct(%43, %51, %43, %43)
      %bias.250 : Tensor = aten::reshape(%bias.248, %983) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:51:19
      %out_dtype.50 : int = prim::dtype(%x.76)
      %986 : Tensor = aten::to(%scale.102, %out_dtype.50, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:23
      %987 : Tensor = aten::mul(%x.76, %986) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:19
      %988 : Tensor = aten::to(%bias.250, %out_dtype.50, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:45
      %989 : Tensor = aten::add(%987, %988, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:19
      -> (%989)
    block1():
      %running_mean.100 : Tensor = prim::GetAttr[name="running_mean"](%norm.49)
      %running_var.100 : Tensor = prim::GetAttr[name="running_var"](%norm.49)
      %weight.151 : Tensor = prim::GetAttr[name="weight"](%norm.49)
      %bias.252 : Tensor = prim::GetAttr[name="bias"](%norm.49)
      %eps.100 : float = prim::GetAttr[name="eps"](%norm.49)
      %995 : Tensor = aten::batch_norm(%x.76, %weight.151, %bias.252, %running_mean.100, %running_var.100, %44, %37, %eps.100, %55) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:2421:11
      -> (%995)
  %out.87 : Tensor = aten::relu_(%out.85) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\resnet.py:196:14
  %conv2.14 : __torch__.detectron2.layers.wrappers.___torch_mangle_358.Conv2d = prim::GetAttr[name="conv2"](%_3.3)
  %weight.153 : Tensor = prim::GetAttr[name="weight"](%conv2.14)
  %bias.254 : Tensor? = prim::GetAttr[name="bias"](%conv2.14)
  %1000 : int[] = prim::ListConstruct(%43, %43)
  %1001 : int[] = prim::ListConstruct(%43, %43)
  %1002 : int[] = prim::ListConstruct(%43, %43)
  %x.78 : Tensor = aten::conv2d(%out.87, %weight.153, %bias.254, %1000, %1001, %1002, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:106:12
  %norm.51 : __torch__.detectron2.layers.batch_norm.___torch_mangle_346.FrozenBatchNorm2d = prim::GetAttr[name="norm"](%conv2.14)
  %1005 : bool = prim::requires_grad(%x.78)
  %out.89 : Tensor = prim::If(%1005) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:45:8
    block0():
      %weight.155 : Tensor = prim::GetAttr[name="weight"](%norm.51)
      %running_var.102 : Tensor = prim::GetAttr[name="running_var"](%norm.51)
      %eps.102 : float = prim::GetAttr[name="eps"](%norm.51)
      %1010 : Tensor = aten::add(%running_var.102, %eps.102, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:35
      %1011 : Tensor = aten::rsqrt(%1010) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:35
      %scale.104 : Tensor = aten::mul(%weight.155, %1011) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:20
      %bias.256 : Tensor = prim::GetAttr[name="bias"](%norm.51)
      %running_mean.102 : Tensor = prim::GetAttr[name="running_mean"](%norm.51)
      %1015 : Tensor = aten::mul(%running_mean.102, %scale.104) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:49:31
      %bias.258 : Tensor = aten::sub(%bias.256, %1015, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:49:19
      %1017 : int[] = prim::ListConstruct(%43, %51, %43, %43)
      %scale.106 : Tensor = aten::reshape(%scale.104, %1017) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:50:20
      %1019 : int[] = prim::ListConstruct(%43, %51, %43, %43)
      %bias.260 : Tensor = aten::reshape(%bias.258, %1019) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:51:19
      %out_dtype.52 : int = prim::dtype(%x.78)
      %1022 : Tensor = aten::to(%scale.106, %out_dtype.52, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:23
      %1023 : Tensor = aten::mul(%x.78, %1022) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:19
      %1024 : Tensor = aten::to(%bias.260, %out_dtype.52, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:45
      %1025 : Tensor = aten::add(%1023, %1024, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:19
      -> (%1025)
    block1():
      %running_mean.104 : Tensor = prim::GetAttr[name="running_mean"](%norm.51)
      %running_var.104 : Tensor = prim::GetAttr[name="running_var"](%norm.51)
      %weight.157 : Tensor = prim::GetAttr[name="weight"](%norm.51)
      %bias.262 : Tensor = prim::GetAttr[name="bias"](%norm.51)
      %eps.104 : float = prim::GetAttr[name="eps"](%norm.51)
      %1031 : Tensor = aten::batch_norm(%x.78, %weight.157, %bias.262, %running_mean.104, %running_var.104, %44, %37, %eps.104, %55) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:2421:11
      -> (%1031)
  %out.91 : Tensor = aten::relu_(%out.89) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\resnet.py:199:14
  %conv3.14 : __torch__.detectron2.layers.wrappers.___torch_mangle_359.Conv2d = prim::GetAttr[name="conv3"](%_3.3)
  %weight.159 : Tensor = prim::GetAttr[name="weight"](%conv3.14)
  %bias.264 : Tensor? = prim::GetAttr[name="bias"](%conv3.14)
  %1036 : int[] = prim::ListConstruct(%43, %43)
  %1037 : int[] = prim::ListConstruct(%48, %48)
  %1038 : int[] = prim::ListConstruct(%43, %43)
  %x.80 : Tensor = aten::conv2d(%out.91, %weight.159, %bias.264, %1036, %1037, %1038, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:106:12
  %norm.53 : __torch__.detectron2.layers.batch_norm.___torch_mangle_346.FrozenBatchNorm2d = prim::GetAttr[name="norm"](%conv3.14)
  %1041 : bool = prim::requires_grad(%x.80)
  %out.93 : Tensor = prim::If(%1041) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:45:8
    block0():
      %weight.161 : Tensor = prim::GetAttr[name="weight"](%norm.53)
      %running_var.106 : Tensor = prim::GetAttr[name="running_var"](%norm.53)
      %eps.106 : float = prim::GetAttr[name="eps"](%norm.53)
      %1046 : Tensor = aten::add(%running_var.106, %eps.106, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:35
      %1047 : Tensor = aten::rsqrt(%1046) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:35
      %scale.108 : Tensor = aten::mul(%weight.161, %1047) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:20
      %bias.266 : Tensor = prim::GetAttr[name="bias"](%norm.53)
      %running_mean.106 : Tensor = prim::GetAttr[name="running_mean"](%norm.53)
      %1051 : Tensor = aten::mul(%running_mean.106, %scale.108) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:49:31
      %bias.268 : Tensor = aten::sub(%bias.266, %1051, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:49:19
      %1053 : int[] = prim::ListConstruct(%43, %51, %43, %43)
      %scale.110 : Tensor = aten::reshape(%scale.108, %1053) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:50:20
      %1055 : int[] = prim::ListConstruct(%43, %51, %43, %43)
      %bias.270 : Tensor = aten::reshape(%bias.268, %1055) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:51:19
      %out_dtype.54 : int = prim::dtype(%x.80)
      %1058 : Tensor = aten::to(%scale.110, %out_dtype.54, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:23
      %1059 : Tensor = aten::mul(%x.80, %1058) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:19
      %1060 : Tensor = aten::to(%bias.270, %out_dtype.54, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:45
      %1061 : Tensor = aten::add(%1059, %1060, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:19
      -> (%1061)
    block1():
      %running_mean.108 : Tensor = prim::GetAttr[name="running_mean"](%norm.53)
      %running_var.108 : Tensor = prim::GetAttr[name="running_var"](%norm.53)
      %weight.163 : Tensor = prim::GetAttr[name="weight"](%norm.53)
      %bias.272 : Tensor = prim::GetAttr[name="bias"](%norm.53)
      %eps.108 : float = prim::GetAttr[name="eps"](%norm.53)
      %1067 : Tensor = aten::batch_norm(%x.80, %weight.163, %bias.272, %running_mean.108, %running_var.108, %44, %37, %eps.108, %55) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:2421:11
      -> (%1067)
  %out.95 : Tensor = aten::add_(%out.93, %input.19, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\resnet.py:208:8
  %x.42 : Tensor = aten::relu_(%out.95) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\resnet.py:209:14
  %_out_features.5 : str[] = prim::GetAttr[name="_out_features"](%bottom_up)
  %1071 : bool = aten::__contains__(%_out_features.5, %name.7) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\resnet.py:450:15
   = prim::If(%1071) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\resnet.py:450:12
    block0():
       = aten::_set_item(%bottom_up_features.1, %name.7, %x.42) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\resnet.py:451:16
      -> ()
    block1():
      -> ()
  %_0.7 : __torch__.detectron2.modeling.backbone.resnet.___torch_mangle_368.BottleneckBlock = prim::GetAttr[name="0"](%_2.1)
  %_1.7 : __torch__.detectron2.modeling.backbone.resnet.___torch_mangle_370.BottleneckBlock = prim::GetAttr[name="1"](%_2.1)
  %_2.7 : __torch__.detectron2.modeling.backbone.resnet.___torch_mangle_370.BottleneckBlock = prim::GetAttr[name="2"](%_2.1)
  %_3.4 : __torch__.detectron2.modeling.backbone.resnet.___torch_mangle_370.BottleneckBlock = prim::GetAttr[name="3"](%_2.1)
  %_4.1 : __torch__.detectron2.modeling.backbone.resnet.___torch_mangle_370.BottleneckBlock = prim::GetAttr[name="4"](%_2.1)
  %_5 : __torch__.detectron2.modeling.backbone.resnet.___torch_mangle_370.BottleneckBlock = prim::GetAttr[name="5"](%_2.1)
  %conv1.18 : __torch__.detectron2.layers.wrappers.___torch_mangle_365.Conv2d = prim::GetAttr[name="conv1"](%_0.7)
  %weight.165 : Tensor = prim::GetAttr[name="weight"](%conv1.18)
  %bias.274 : Tensor? = prim::GetAttr[name="bias"](%conv1.18)
  %1081 : int[] = prim::ListConstruct(%46, %46)
  %1082 : int[] = prim::ListConstruct(%48, %48)
  %1083 : int[] = prim::ListConstruct(%43, %43)
  %x.84 : Tensor = aten::conv2d(%x.42, %weight.165, %bias.274, %1081, %1082, %1083, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:106:12
  %norm.55 : __torch__.detectron2.layers.batch_norm.___torch_mangle_346.FrozenBatchNorm2d = prim::GetAttr[name="norm"](%conv1.18)
  %1086 : bool = prim::requires_grad(%x.84)
  %out.97 : Tensor = prim::If(%1086) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:45:8
    block0():
      %weight.167 : Tensor = prim::GetAttr[name="weight"](%norm.55)
      %running_var.110 : Tensor = prim::GetAttr[name="running_var"](%norm.55)
      %eps.110 : float = prim::GetAttr[name="eps"](%norm.55)
      %1091 : Tensor = aten::add(%running_var.110, %eps.110, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:35
      %1092 : Tensor = aten::rsqrt(%1091) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:35
      %scale.112 : Tensor = aten::mul(%weight.167, %1092) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:20
      %bias.276 : Tensor = prim::GetAttr[name="bias"](%norm.55)
      %running_mean.110 : Tensor = prim::GetAttr[name="running_mean"](%norm.55)
      %1096 : Tensor = aten::mul(%running_mean.110, %scale.112) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:49:31
      %bias.278 : Tensor = aten::sub(%bias.276, %1096, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:49:19
      %1098 : int[] = prim::ListConstruct(%43, %51, %43, %43)
      %scale.114 : Tensor = aten::reshape(%scale.112, %1098) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:50:20
      %1100 : int[] = prim::ListConstruct(%43, %51, %43, %43)
      %bias.280 : Tensor = aten::reshape(%bias.278, %1100) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:51:19
      %out_dtype.56 : int = prim::dtype(%x.84)
      %1103 : Tensor = aten::to(%scale.114, %out_dtype.56, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:23
      %1104 : Tensor = aten::mul(%x.84, %1103) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:19
      %1105 : Tensor = aten::to(%bias.280, %out_dtype.56, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:45
      %1106 : Tensor = aten::add(%1104, %1105, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:19
      -> (%1106)
    block1():
      %running_mean.112 : Tensor = prim::GetAttr[name="running_mean"](%norm.55)
      %running_var.112 : Tensor = prim::GetAttr[name="running_var"](%norm.55)
      %weight.169 : Tensor = prim::GetAttr[name="weight"](%norm.55)
      %bias.282 : Tensor = prim::GetAttr[name="bias"](%norm.55)
      %eps.112 : float = prim::GetAttr[name="eps"](%norm.55)
      %1112 : Tensor = aten::batch_norm(%x.84, %weight.169, %bias.282, %running_mean.112, %running_var.112, %44, %37, %eps.112, %55) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:2421:11
      -> (%1112)
  %out.99 : Tensor = aten::relu_(%out.97) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\resnet.py:196:14
  %conv2.16 : __torch__.detectron2.layers.wrappers.___torch_mangle_366.Conv2d = prim::GetAttr[name="conv2"](%_0.7)
  %weight.171 : Tensor = prim::GetAttr[name="weight"](%conv2.16)
  %bias.284 : Tensor? = prim::GetAttr[name="bias"](%conv2.16)
  %1117 : int[] = prim::ListConstruct(%43, %43)
  %1118 : int[] = prim::ListConstruct(%43, %43)
  %1119 : int[] = prim::ListConstruct(%43, %43)
  %x.86 : Tensor = aten::conv2d(%out.99, %weight.171, %bias.284, %1117, %1118, %1119, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:106:12
  %norm.57 : __torch__.detectron2.layers.batch_norm.___torch_mangle_346.FrozenBatchNorm2d = prim::GetAttr[name="norm"](%conv2.16)
  %1122 : bool = prim::requires_grad(%x.86)
  %out.101 : Tensor = prim::If(%1122) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:45:8
    block0():
      %weight.173 : Tensor = prim::GetAttr[name="weight"](%norm.57)
      %running_var.114 : Tensor = prim::GetAttr[name="running_var"](%norm.57)
      %eps.114 : float = prim::GetAttr[name="eps"](%norm.57)
      %1127 : Tensor = aten::add(%running_var.114, %eps.114, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:35
      %1128 : Tensor = aten::rsqrt(%1127) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:35
      %scale.116 : Tensor = aten::mul(%weight.173, %1128) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:20
      %bias.286 : Tensor = prim::GetAttr[name="bias"](%norm.57)
      %running_mean.114 : Tensor = prim::GetAttr[name="running_mean"](%norm.57)
      %1132 : Tensor = aten::mul(%running_mean.114, %scale.116) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:49:31
      %bias.288 : Tensor = aten::sub(%bias.286, %1132, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:49:19
      %1134 : int[] = prim::ListConstruct(%43, %51, %43, %43)
      %scale.118 : Tensor = aten::reshape(%scale.116, %1134) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:50:20
      %1136 : int[] = prim::ListConstruct(%43, %51, %43, %43)
      %bias.290 : Tensor = aten::reshape(%bias.288, %1136) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:51:19
      %out_dtype.58 : int = prim::dtype(%x.86)
      %1139 : Tensor = aten::to(%scale.118, %out_dtype.58, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:23
      %1140 : Tensor = aten::mul(%x.86, %1139) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:19
      %1141 : Tensor = aten::to(%bias.290, %out_dtype.58, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:45
      %1142 : Tensor = aten::add(%1140, %1141, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:19
      -> (%1142)
    block1():
      %running_mean.116 : Tensor = prim::GetAttr[name="running_mean"](%norm.57)
      %running_var.116 : Tensor = prim::GetAttr[name="running_var"](%norm.57)
      %weight.175 : Tensor = prim::GetAttr[name="weight"](%norm.57)
      %bias.292 : Tensor = prim::GetAttr[name="bias"](%norm.57)
      %eps.116 : float = prim::GetAttr[name="eps"](%norm.57)
      %1148 : Tensor = aten::batch_norm(%x.86, %weight.175, %bias.292, %running_mean.116, %running_var.116, %44, %37, %eps.116, %55) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:2421:11
      -> (%1148)
  %out.103 : Tensor = aten::relu_(%out.101) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\resnet.py:199:14
  %conv3.16 : __torch__.detectron2.layers.wrappers.___torch_mangle_367.Conv2d = prim::GetAttr[name="conv3"](%_0.7)
  %weight.177 : Tensor = prim::GetAttr[name="weight"](%conv3.16)
  %bias.294 : Tensor? = prim::GetAttr[name="bias"](%conv3.16)
  %1153 : int[] = prim::ListConstruct(%43, %43)
  %1154 : int[] = prim::ListConstruct(%48, %48)
  %1155 : int[] = prim::ListConstruct(%43, %43)
  %x.88 : Tensor = aten::conv2d(%out.103, %weight.177, %bias.294, %1153, %1154, %1155, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:106:12
  %norm.59 : __torch__.detectron2.layers.batch_norm.___torch_mangle_346.FrozenBatchNorm2d = prim::GetAttr[name="norm"](%conv3.16)
  %1158 : bool = prim::requires_grad(%x.88)
  %out.105 : Tensor = prim::If(%1158) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:45:8
    block0():
      %weight.179 : Tensor = prim::GetAttr[name="weight"](%norm.59)
      %running_var.118 : Tensor = prim::GetAttr[name="running_var"](%norm.59)
      %eps.118 : float = prim::GetAttr[name="eps"](%norm.59)
      %1163 : Tensor = aten::add(%running_var.118, %eps.118, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:35
      %1164 : Tensor = aten::rsqrt(%1163) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:35
      %scale.120 : Tensor = aten::mul(%weight.179, %1164) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:20
      %bias.296 : Tensor = prim::GetAttr[name="bias"](%norm.59)
      %running_mean.118 : Tensor = prim::GetAttr[name="running_mean"](%norm.59)
      %1168 : Tensor = aten::mul(%running_mean.118, %scale.120) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:49:31
      %bias.298 : Tensor = aten::sub(%bias.296, %1168, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:49:19
      %1170 : int[] = prim::ListConstruct(%43, %51, %43, %43)
      %scale.122 : Tensor = aten::reshape(%scale.120, %1170) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:50:20
      %1172 : int[] = prim::ListConstruct(%43, %51, %43, %43)
      %bias.300 : Tensor = aten::reshape(%bias.298, %1172) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:51:19
      %out_dtype.60 : int = prim::dtype(%x.88)
      %1175 : Tensor = aten::to(%scale.122, %out_dtype.60, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:23
      %1176 : Tensor = aten::mul(%x.88, %1175) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:19
      %1177 : Tensor = aten::to(%bias.300, %out_dtype.60, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:45
      %1178 : Tensor = aten::add(%1176, %1177, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:19
      -> (%1178)
    block1():
      %running_mean.120 : Tensor = prim::GetAttr[name="running_mean"](%norm.59)
      %running_var.120 : Tensor = prim::GetAttr[name="running_var"](%norm.59)
      %weight.181 : Tensor = prim::GetAttr[name="weight"](%norm.59)
      %bias.302 : Tensor = prim::GetAttr[name="bias"](%norm.59)
      %eps.120 : float = prim::GetAttr[name="eps"](%norm.59)
      %1184 : Tensor = aten::batch_norm(%x.88, %weight.181, %bias.302, %running_mean.120, %running_var.120, %44, %37, %eps.120, %55) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:2421:11
      -> (%1184)
  %shortcut.12 : __torch__.detectron2.layers.wrappers.___torch_mangle_364.Conv2d = prim::GetAttr[name="shortcut"](%_0.7)
  %weight.183 : Tensor = prim::GetAttr[name="weight"](%shortcut.12)
  %bias.304 : Tensor? = prim::GetAttr[name="bias"](%shortcut.12)
  %1188 : int[] = prim::ListConstruct(%46, %46)
  %1189 : int[] = prim::ListConstruct(%48, %48)
  %1190 : int[] = prim::ListConstruct(%43, %43)
  %x.90 : Tensor = aten::conv2d(%x.42, %weight.183, %bias.304, %1188, %1189, %1190, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:106:12
  %norm.61 : __torch__.detectron2.layers.batch_norm.___torch_mangle_346.FrozenBatchNorm2d = prim::GetAttr[name="norm"](%shortcut.12)
  %1193 : bool = prim::requires_grad(%x.90)
  %shortcut.14 : Tensor = prim::If(%1193) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:45:8
    block0():
      %weight.185 : Tensor = prim::GetAttr[name="weight"](%norm.61)
      %running_var.122 : Tensor = prim::GetAttr[name="running_var"](%norm.61)
      %eps.122 : float = prim::GetAttr[name="eps"](%norm.61)
      %1198 : Tensor = aten::add(%running_var.122, %eps.122, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:35
      %1199 : Tensor = aten::rsqrt(%1198) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:35
      %scale.124 : Tensor = aten::mul(%weight.185, %1199) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:20
      %bias.306 : Tensor = prim::GetAttr[name="bias"](%norm.61)
      %running_mean.122 : Tensor = prim::GetAttr[name="running_mean"](%norm.61)
      %1203 : Tensor = aten::mul(%running_mean.122, %scale.124) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:49:31
      %bias.308 : Tensor = aten::sub(%bias.306, %1203, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:49:19
      %1205 : int[] = prim::ListConstruct(%43, %51, %43, %43)
      %scale.126 : Tensor = aten::reshape(%scale.124, %1205) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:50:20
      %1207 : int[] = prim::ListConstruct(%43, %51, %43, %43)
      %bias.310 : Tensor = aten::reshape(%bias.308, %1207) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:51:19
      %out_dtype.62 : int = prim::dtype(%x.90)
      %1210 : Tensor = aten::to(%scale.126, %out_dtype.62, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:23
      %1211 : Tensor = aten::mul(%x.90, %1210) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:19
      %1212 : Tensor = aten::to(%bias.310, %out_dtype.62, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:45
      %1213 : Tensor = aten::add(%1211, %1212, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:19
      -> (%1213)
    block1():
      %running_mean.124 : Tensor = prim::GetAttr[name="running_mean"](%norm.61)
      %running_var.124 : Tensor = prim::GetAttr[name="running_var"](%norm.61)
      %weight.187 : Tensor = prim::GetAttr[name="weight"](%norm.61)
      %bias.312 : Tensor = prim::GetAttr[name="bias"](%norm.61)
      %eps.124 : float = prim::GetAttr[name="eps"](%norm.61)
      %1219 : Tensor = aten::batch_norm(%x.90, %weight.187, %bias.312, %running_mean.124, %running_var.124, %44, %37, %eps.124, %55) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:2421:11
      -> (%1219)
  %out.107 : Tensor = aten::add_(%out.105, %shortcut.14, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\resnet.py:208:8
  %input.23 : Tensor = aten::relu_(%out.107) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\resnet.py:209:14
  %conv1.20 : __torch__.detectron2.layers.wrappers.___torch_mangle_369.Conv2d = prim::GetAttr[name="conv1"](%_1.7)
  %weight.189 : Tensor = prim::GetAttr[name="weight"](%conv1.20)
  %bias.314 : Tensor? = prim::GetAttr[name="bias"](%conv1.20)
  %1225 : int[] = prim::ListConstruct(%43, %43)
  %1226 : int[] = prim::ListConstruct(%48, %48)
  %1227 : int[] = prim::ListConstruct(%43, %43)
  %x.92 : Tensor = aten::conv2d(%input.23, %weight.189, %bias.314, %1225, %1226, %1227, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:106:12
  %norm.63 : __torch__.detectron2.layers.batch_norm.___torch_mangle_346.FrozenBatchNorm2d = prim::GetAttr[name="norm"](%conv1.20)
  %1230 : bool = prim::requires_grad(%x.92)
  %out.109 : Tensor = prim::If(%1230) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:45:8
    block0():
      %weight.191 : Tensor = prim::GetAttr[name="weight"](%norm.63)
      %running_var.126 : Tensor = prim::GetAttr[name="running_var"](%norm.63)
      %eps.126 : float = prim::GetAttr[name="eps"](%norm.63)
      %1235 : Tensor = aten::add(%running_var.126, %eps.126, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:35
      %1236 : Tensor = aten::rsqrt(%1235) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:35
      %scale.128 : Tensor = aten::mul(%weight.191, %1236) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:20
      %bias.316 : Tensor = prim::GetAttr[name="bias"](%norm.63)
      %running_mean.126 : Tensor = prim::GetAttr[name="running_mean"](%norm.63)
      %1240 : Tensor = aten::mul(%running_mean.126, %scale.128) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:49:31
      %bias.318 : Tensor = aten::sub(%bias.316, %1240, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:49:19
      %1242 : int[] = prim::ListConstruct(%43, %51, %43, %43)
      %scale.130 : Tensor = aten::reshape(%scale.128, %1242) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:50:20
      %1244 : int[] = prim::ListConstruct(%43, %51, %43, %43)
      %bias.320 : Tensor = aten::reshape(%bias.318, %1244) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:51:19
      %out_dtype.64 : int = prim::dtype(%x.92)
      %1247 : Tensor = aten::to(%scale.130, %out_dtype.64, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:23
      %1248 : Tensor = aten::mul(%x.92, %1247) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:19
      %1249 : Tensor = aten::to(%bias.320, %out_dtype.64, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:45
      %1250 : Tensor = aten::add(%1248, %1249, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:19
      -> (%1250)
    block1():
      %running_mean.128 : Tensor = prim::GetAttr[name="running_mean"](%norm.63)
      %running_var.128 : Tensor = prim::GetAttr[name="running_var"](%norm.63)
      %weight.193 : Tensor = prim::GetAttr[name="weight"](%norm.63)
      %bias.322 : Tensor = prim::GetAttr[name="bias"](%norm.63)
      %eps.128 : float = prim::GetAttr[name="eps"](%norm.63)
      %1256 : Tensor = aten::batch_norm(%x.92, %weight.193, %bias.322, %running_mean.128, %running_var.128, %44, %37, %eps.128, %55) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:2421:11
      -> (%1256)
  %out.111 : Tensor = aten::relu_(%out.109) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\resnet.py:196:14
  %conv2.18 : __torch__.detectron2.layers.wrappers.___torch_mangle_366.Conv2d = prim::GetAttr[name="conv2"](%_1.7)
  %weight.195 : Tensor = prim::GetAttr[name="weight"](%conv2.18)
  %bias.324 : Tensor? = prim::GetAttr[name="bias"](%conv2.18)
  %1261 : int[] = prim::ListConstruct(%43, %43)
  %1262 : int[] = prim::ListConstruct(%43, %43)
  %1263 : int[] = prim::ListConstruct(%43, %43)
  %x.94 : Tensor = aten::conv2d(%out.111, %weight.195, %bias.324, %1261, %1262, %1263, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:106:12
  %norm.65 : __torch__.detectron2.layers.batch_norm.___torch_mangle_346.FrozenBatchNorm2d = prim::GetAttr[name="norm"](%conv2.18)
  %1266 : bool = prim::requires_grad(%x.94)
  %out.113 : Tensor = prim::If(%1266) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:45:8
    block0():
      %weight.197 : Tensor = prim::GetAttr[name="weight"](%norm.65)
      %running_var.130 : Tensor = prim::GetAttr[name="running_var"](%norm.65)
      %eps.130 : float = prim::GetAttr[name="eps"](%norm.65)
      %1271 : Tensor = aten::add(%running_var.130, %eps.130, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:35
      %1272 : Tensor = aten::rsqrt(%1271) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:35
      %scale.132 : Tensor = aten::mul(%weight.197, %1272) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:20
      %bias.326 : Tensor = prim::GetAttr[name="bias"](%norm.65)
      %running_mean.130 : Tensor = prim::GetAttr[name="running_mean"](%norm.65)
      %1276 : Tensor = aten::mul(%running_mean.130, %scale.132) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:49:31
      %bias.328 : Tensor = aten::sub(%bias.326, %1276, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:49:19
      %1278 : int[] = prim::ListConstruct(%43, %51, %43, %43)
      %scale.134 : Tensor = aten::reshape(%scale.132, %1278) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:50:20
      %1280 : int[] = prim::ListConstruct(%43, %51, %43, %43)
      %bias.330 : Tensor = aten::reshape(%bias.328, %1280) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:51:19
      %out_dtype.66 : int = prim::dtype(%x.94)
      %1283 : Tensor = aten::to(%scale.134, %out_dtype.66, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:23
      %1284 : Tensor = aten::mul(%x.94, %1283) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:19
      %1285 : Tensor = aten::to(%bias.330, %out_dtype.66, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:45
      %1286 : Tensor = aten::add(%1284, %1285, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:19
      -> (%1286)
    block1():
      %running_mean.132 : Tensor = prim::GetAttr[name="running_mean"](%norm.65)
      %running_var.132 : Tensor = prim::GetAttr[name="running_var"](%norm.65)
      %weight.199 : Tensor = prim::GetAttr[name="weight"](%norm.65)
      %bias.332 : Tensor = prim::GetAttr[name="bias"](%norm.65)
      %eps.132 : float = prim::GetAttr[name="eps"](%norm.65)
      %1292 : Tensor = aten::batch_norm(%x.94, %weight.199, %bias.332, %running_mean.132, %running_var.132, %44, %37, %eps.132, %55) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:2421:11
      -> (%1292)
  %out.115 : Tensor = aten::relu_(%out.113) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\resnet.py:199:14
  %conv3.18 : __torch__.detectron2.layers.wrappers.___torch_mangle_367.Conv2d = prim::GetAttr[name="conv3"](%_1.7)
  %weight.201 : Tensor = prim::GetAttr[name="weight"](%conv3.18)
  %bias.334 : Tensor? = prim::GetAttr[name="bias"](%conv3.18)
  %1297 : int[] = prim::ListConstruct(%43, %43)
  %1298 : int[] = prim::ListConstruct(%48, %48)
  %1299 : int[] = prim::ListConstruct(%43, %43)
  %x.96 : Tensor = aten::conv2d(%out.115, %weight.201, %bias.334, %1297, %1298, %1299, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:106:12
  %norm.67 : __torch__.detectron2.layers.batch_norm.___torch_mangle_346.FrozenBatchNorm2d = prim::GetAttr[name="norm"](%conv3.18)
  %1302 : bool = prim::requires_grad(%x.96)
  %out.117 : Tensor = prim::If(%1302) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:45:8
    block0():
      %weight.203 : Tensor = prim::GetAttr[name="weight"](%norm.67)
      %running_var.134 : Tensor = prim::GetAttr[name="running_var"](%norm.67)
      %eps.134 : float = prim::GetAttr[name="eps"](%norm.67)
      %1307 : Tensor = aten::add(%running_var.134, %eps.134, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:35
      %1308 : Tensor = aten::rsqrt(%1307) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:35
      %scale.136 : Tensor = aten::mul(%weight.203, %1308) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:20
      %bias.336 : Tensor = prim::GetAttr[name="bias"](%norm.67)
      %running_mean.134 : Tensor = prim::GetAttr[name="running_mean"](%norm.67)
      %1312 : Tensor = aten::mul(%running_mean.134, %scale.136) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:49:31
      %bias.338 : Tensor = aten::sub(%bias.336, %1312, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:49:19
      %1314 : int[] = prim::ListConstruct(%43, %51, %43, %43)
      %scale.138 : Tensor = aten::reshape(%scale.136, %1314) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:50:20
      %1316 : int[] = prim::ListConstruct(%43, %51, %43, %43)
      %bias.340 : Tensor = aten::reshape(%bias.338, %1316) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:51:19
      %out_dtype.68 : int = prim::dtype(%x.96)
      %1319 : Tensor = aten::to(%scale.138, %out_dtype.68, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:23
      %1320 : Tensor = aten::mul(%x.96, %1319) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:19
      %1321 : Tensor = aten::to(%bias.340, %out_dtype.68, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:45
      %1322 : Tensor = aten::add(%1320, %1321, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:19
      -> (%1322)
    block1():
      %running_mean.136 : Tensor = prim::GetAttr[name="running_mean"](%norm.67)
      %running_var.136 : Tensor = prim::GetAttr[name="running_var"](%norm.67)
      %weight.205 : Tensor = prim::GetAttr[name="weight"](%norm.67)
      %bias.342 : Tensor = prim::GetAttr[name="bias"](%norm.67)
      %eps.136 : float = prim::GetAttr[name="eps"](%norm.67)
      %1328 : Tensor = aten::batch_norm(%x.96, %weight.205, %bias.342, %running_mean.136, %running_var.136, %44, %37, %eps.136, %55) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:2421:11
      -> (%1328)
  %out.119 : Tensor = aten::add_(%out.117, %input.23, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\resnet.py:208:8
  %input.25 : Tensor = aten::relu_(%out.119) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\resnet.py:209:14
  %conv1.5 : __torch__.detectron2.layers.wrappers.___torch_mangle_369.Conv2d = prim::GetAttr[name="conv1"](%_2.7)
  %weight.40 : Tensor = prim::GetAttr[name="weight"](%conv1.5)
  %bias.67 : Tensor? = prim::GetAttr[name="bias"](%conv1.5)
  %1334 : int[] = prim::ListConstruct(%43, %43)
  %1335 : int[] = prim::ListConstruct(%48, %48)
  %1336 : int[] = prim::ListConstruct(%43, %43)
  %x.19 : Tensor = aten::conv2d(%input.25, %weight.40, %bias.67, %1334, %1335, %1336, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:106:12
  %norm.14 : __torch__.detectron2.layers.batch_norm.___torch_mangle_346.FrozenBatchNorm2d = prim::GetAttr[name="norm"](%conv1.5)
  %1339 : bool = prim::requires_grad(%x.19)
  %out.36 : Tensor = prim::If(%1339) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:45:8
    block0():
      %weight.42 : Tensor = prim::GetAttr[name="weight"](%norm.14)
      %running_var.27 : Tensor = prim::GetAttr[name="running_var"](%norm.14)
      %eps.27 : float = prim::GetAttr[name="eps"](%norm.14)
      %1344 : Tensor = aten::add(%running_var.27, %eps.27, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:35
      %1345 : Tensor = aten::rsqrt(%1344) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:35
      %scale.31 : Tensor = aten::mul(%weight.42, %1345) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:20
      %bias.69 : Tensor = prim::GetAttr[name="bias"](%norm.14)
      %running_mean.27 : Tensor = prim::GetAttr[name="running_mean"](%norm.14)
      %1349 : Tensor = aten::mul(%running_mean.27, %scale.31) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:49:31
      %bias.71 : Tensor = aten::sub(%bias.69, %1349, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:49:19
      %1351 : int[] = prim::ListConstruct(%43, %51, %43, %43)
      %scale.33 : Tensor = aten::reshape(%scale.31, %1351) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:50:20
      %1353 : int[] = prim::ListConstruct(%43, %51, %43, %43)
      %bias.73 : Tensor = aten::reshape(%bias.71, %1353) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:51:19
      %out_dtype.15 : int = prim::dtype(%x.19)
      %1356 : Tensor = aten::to(%scale.33, %out_dtype.15, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:23
      %1357 : Tensor = aten::mul(%x.19, %1356) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:19
      %1358 : Tensor = aten::to(%bias.73, %out_dtype.15, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:45
      %1359 : Tensor = aten::add(%1357, %1358, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:19
      -> (%1359)
    block1():
      %running_mean.29 : Tensor = prim::GetAttr[name="running_mean"](%norm.14)
      %running_var.29 : Tensor = prim::GetAttr[name="running_var"](%norm.14)
      %weight.44 : Tensor = prim::GetAttr[name="weight"](%norm.14)
      %bias.75 : Tensor = prim::GetAttr[name="bias"](%norm.14)
      %eps.29 : float = prim::GetAttr[name="eps"](%norm.14)
      %1365 : Tensor = aten::batch_norm(%x.19, %weight.44, %bias.75, %running_mean.29, %running_var.29, %44, %37, %eps.29, %55) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:2421:11
      -> (%1365)
  %out.38 : Tensor = aten::relu_(%out.36) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\resnet.py:196:14
  %conv2.5 : __torch__.detectron2.layers.wrappers.___torch_mangle_366.Conv2d = prim::GetAttr[name="conv2"](%_2.7)
  %weight.46 : Tensor = prim::GetAttr[name="weight"](%conv2.5)
  %bias.77 : Tensor? = prim::GetAttr[name="bias"](%conv2.5)
  %1370 : int[] = prim::ListConstruct(%43, %43)
  %1371 : int[] = prim::ListConstruct(%43, %43)
  %1372 : int[] = prim::ListConstruct(%43, %43)
  %x.21 : Tensor = aten::conv2d(%out.38, %weight.46, %bias.77, %1370, %1371, %1372, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:106:12
  %norm.16 : __torch__.detectron2.layers.batch_norm.___torch_mangle_346.FrozenBatchNorm2d = prim::GetAttr[name="norm"](%conv2.5)
  %1375 : bool = prim::requires_grad(%x.21)
  %out.40 : Tensor = prim::If(%1375) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:45:8
    block0():
      %weight.48 : Tensor = prim::GetAttr[name="weight"](%norm.16)
      %running_var.31 : Tensor = prim::GetAttr[name="running_var"](%norm.16)
      %eps.31 : float = prim::GetAttr[name="eps"](%norm.16)
      %1380 : Tensor = aten::add(%running_var.31, %eps.31, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:35
      %1381 : Tensor = aten::rsqrt(%1380) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:35
      %scale.35 : Tensor = aten::mul(%weight.48, %1381) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:20
      %bias.79 : Tensor = prim::GetAttr[name="bias"](%norm.16)
      %running_mean.31 : Tensor = prim::GetAttr[name="running_mean"](%norm.16)
      %1385 : Tensor = aten::mul(%running_mean.31, %scale.35) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:49:31
      %bias.81 : Tensor = aten::sub(%bias.79, %1385, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:49:19
      %1387 : int[] = prim::ListConstruct(%43, %51, %43, %43)
      %scale.37 : Tensor = aten::reshape(%scale.35, %1387) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:50:20
      %1389 : int[] = prim::ListConstruct(%43, %51, %43, %43)
      %bias.83 : Tensor = aten::reshape(%bias.81, %1389) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:51:19
      %out_dtype.17 : int = prim::dtype(%x.21)
      %1392 : Tensor = aten::to(%scale.37, %out_dtype.17, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:23
      %1393 : Tensor = aten::mul(%x.21, %1392) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:19
      %1394 : Tensor = aten::to(%bias.83, %out_dtype.17, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:45
      %1395 : Tensor = aten::add(%1393, %1394, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:19
      -> (%1395)
    block1():
      %running_mean.33 : Tensor = prim::GetAttr[name="running_mean"](%norm.16)
      %running_var.33 : Tensor = prim::GetAttr[name="running_var"](%norm.16)
      %weight.50 : Tensor = prim::GetAttr[name="weight"](%norm.16)
      %bias.85 : Tensor = prim::GetAttr[name="bias"](%norm.16)
      %eps.33 : float = prim::GetAttr[name="eps"](%norm.16)
      %1401 : Tensor = aten::batch_norm(%x.21, %weight.50, %bias.85, %running_mean.33, %running_var.33, %44, %37, %eps.33, %55) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:2421:11
      -> (%1401)
  %out.42 : Tensor = aten::relu_(%out.40) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\resnet.py:199:14
  %conv3.5 : __torch__.detectron2.layers.wrappers.___torch_mangle_367.Conv2d = prim::GetAttr[name="conv3"](%_2.7)
  %weight.52 : Tensor = prim::GetAttr[name="weight"](%conv3.5)
  %bias.87 : Tensor? = prim::GetAttr[name="bias"](%conv3.5)
  %1406 : int[] = prim::ListConstruct(%43, %43)
  %1407 : int[] = prim::ListConstruct(%48, %48)
  %1408 : int[] = prim::ListConstruct(%43, %43)
  %x.23 : Tensor = aten::conv2d(%out.42, %weight.52, %bias.87, %1406, %1407, %1408, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:106:12
  %norm.18 : __torch__.detectron2.layers.batch_norm.___torch_mangle_346.FrozenBatchNorm2d = prim::GetAttr[name="norm"](%conv3.5)
  %1411 : bool = prim::requires_grad(%x.23)
  %out.44 : Tensor = prim::If(%1411) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:45:8
    block0():
      %weight.54 : Tensor = prim::GetAttr[name="weight"](%norm.18)
      %running_var.35 : Tensor = prim::GetAttr[name="running_var"](%norm.18)
      %eps.35 : float = prim::GetAttr[name="eps"](%norm.18)
      %1416 : Tensor = aten::add(%running_var.35, %eps.35, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:35
      %1417 : Tensor = aten::rsqrt(%1416) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:35
      %scale.39 : Tensor = aten::mul(%weight.54, %1417) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:20
      %bias.89 : Tensor = prim::GetAttr[name="bias"](%norm.18)
      %running_mean.35 : Tensor = prim::GetAttr[name="running_mean"](%norm.18)
      %1421 : Tensor = aten::mul(%running_mean.35, %scale.39) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:49:31
      %bias.91 : Tensor = aten::sub(%bias.89, %1421, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:49:19
      %1423 : int[] = prim::ListConstruct(%43, %51, %43, %43)
      %scale.41 : Tensor = aten::reshape(%scale.39, %1423) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:50:20
      %1425 : int[] = prim::ListConstruct(%43, %51, %43, %43)
      %bias.93 : Tensor = aten::reshape(%bias.91, %1425) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:51:19
      %out_dtype.19 : int = prim::dtype(%x.23)
      %1428 : Tensor = aten::to(%scale.41, %out_dtype.19, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:23
      %1429 : Tensor = aten::mul(%x.23, %1428) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:19
      %1430 : Tensor = aten::to(%bias.93, %out_dtype.19, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:45
      %1431 : Tensor = aten::add(%1429, %1430, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:19
      -> (%1431)
    block1():
      %running_mean.37 : Tensor = prim::GetAttr[name="running_mean"](%norm.18)
      %running_var.37 : Tensor = prim::GetAttr[name="running_var"](%norm.18)
      %weight.56 : Tensor = prim::GetAttr[name="weight"](%norm.18)
      %bias.95 : Tensor = prim::GetAttr[name="bias"](%norm.18)
      %eps.37 : float = prim::GetAttr[name="eps"](%norm.18)
      %1437 : Tensor = aten::batch_norm(%x.23, %weight.56, %bias.95, %running_mean.37, %running_var.37, %44, %37, %eps.37, %55) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:2421:11
      -> (%1437)
  %out.46 : Tensor = aten::add_(%out.44, %input.25, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\resnet.py:208:8
  %input.22 : Tensor = aten::relu_(%out.46) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\resnet.py:209:14
  %conv1.7 : __torch__.detectron2.layers.wrappers.___torch_mangle_369.Conv2d = prim::GetAttr[name="conv1"](%_3.4)
  %weight.58 : Tensor = prim::GetAttr[name="weight"](%conv1.7)
  %bias.97 : Tensor? = prim::GetAttr[name="bias"](%conv1.7)
  %1443 : int[] = prim::ListConstruct(%43, %43)
  %1444 : int[] = prim::ListConstruct(%48, %48)
  %1445 : int[] = prim::ListConstruct(%43, %43)
  %x.25 : Tensor = aten::conv2d(%input.22, %weight.58, %bias.97, %1443, %1444, %1445, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:106:12
  %norm.20 : __torch__.detectron2.layers.batch_norm.___torch_mangle_346.FrozenBatchNorm2d = prim::GetAttr[name="norm"](%conv1.7)
  %1448 : bool = prim::requires_grad(%x.25)
  %out.48 : Tensor = prim::If(%1448) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:45:8
    block0():
      %weight.60 : Tensor = prim::GetAttr[name="weight"](%norm.20)
      %running_var.39 : Tensor = prim::GetAttr[name="running_var"](%norm.20)
      %eps.39 : float = prim::GetAttr[name="eps"](%norm.20)
      %1453 : Tensor = aten::add(%running_var.39, %eps.39, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:35
      %1454 : Tensor = aten::rsqrt(%1453) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:35
      %scale.43 : Tensor = aten::mul(%weight.60, %1454) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:20
      %bias.99 : Tensor = prim::GetAttr[name="bias"](%norm.20)
      %running_mean.39 : Tensor = prim::GetAttr[name="running_mean"](%norm.20)
      %1458 : Tensor = aten::mul(%running_mean.39, %scale.43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:49:31
      %bias.101 : Tensor = aten::sub(%bias.99, %1458, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:49:19
      %1460 : int[] = prim::ListConstruct(%43, %51, %43, %43)
      %scale.45 : Tensor = aten::reshape(%scale.43, %1460) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:50:20
      %1462 : int[] = prim::ListConstruct(%43, %51, %43, %43)
      %bias.103 : Tensor = aten::reshape(%bias.101, %1462) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:51:19
      %out_dtype.21 : int = prim::dtype(%x.25)
      %1465 : Tensor = aten::to(%scale.45, %out_dtype.21, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:23
      %1466 : Tensor = aten::mul(%x.25, %1465) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:19
      %1467 : Tensor = aten::to(%bias.103, %out_dtype.21, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:45
      %1468 : Tensor = aten::add(%1466, %1467, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:19
      -> (%1468)
    block1():
      %running_mean.41 : Tensor = prim::GetAttr[name="running_mean"](%norm.20)
      %running_var.41 : Tensor = prim::GetAttr[name="running_var"](%norm.20)
      %weight.62 : Tensor = prim::GetAttr[name="weight"](%norm.20)
      %bias.105 : Tensor = prim::GetAttr[name="bias"](%norm.20)
      %eps.41 : float = prim::GetAttr[name="eps"](%norm.20)
      %1474 : Tensor = aten::batch_norm(%x.25, %weight.62, %bias.105, %running_mean.41, %running_var.41, %44, %37, %eps.41, %55) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:2421:11
      -> (%1474)
  %out.50 : Tensor = aten::relu_(%out.48) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\resnet.py:196:14
  %conv2.7 : __torch__.detectron2.layers.wrappers.___torch_mangle_366.Conv2d = prim::GetAttr[name="conv2"](%_3.4)
  %weight.64 : Tensor = prim::GetAttr[name="weight"](%conv2.7)
  %bias.107 : Tensor? = prim::GetAttr[name="bias"](%conv2.7)
  %1479 : int[] = prim::ListConstruct(%43, %43)
  %1480 : int[] = prim::ListConstruct(%43, %43)
  %1481 : int[] = prim::ListConstruct(%43, %43)
  %x.27 : Tensor = aten::conv2d(%out.50, %weight.64, %bias.107, %1479, %1480, %1481, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:106:12
  %norm.22 : __torch__.detectron2.layers.batch_norm.___torch_mangle_346.FrozenBatchNorm2d = prim::GetAttr[name="norm"](%conv2.7)
  %1484 : bool = prim::requires_grad(%x.27)
  %out.52 : Tensor = prim::If(%1484) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:45:8
    block0():
      %weight.66 : Tensor = prim::GetAttr[name="weight"](%norm.22)
      %running_var.43 : Tensor = prim::GetAttr[name="running_var"](%norm.22)
      %eps.43 : float = prim::GetAttr[name="eps"](%norm.22)
      %1489 : Tensor = aten::add(%running_var.43, %eps.43, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:35
      %1490 : Tensor = aten::rsqrt(%1489) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:35
      %scale.47 : Tensor = aten::mul(%weight.66, %1490) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:20
      %bias.109 : Tensor = prim::GetAttr[name="bias"](%norm.22)
      %running_mean.43 : Tensor = prim::GetAttr[name="running_mean"](%norm.22)
      %1494 : Tensor = aten::mul(%running_mean.43, %scale.47) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:49:31
      %bias.111 : Tensor = aten::sub(%bias.109, %1494, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:49:19
      %1496 : int[] = prim::ListConstruct(%43, %51, %43, %43)
      %scale.49 : Tensor = aten::reshape(%scale.47, %1496) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:50:20
      %1498 : int[] = prim::ListConstruct(%43, %51, %43, %43)
      %bias.113 : Tensor = aten::reshape(%bias.111, %1498) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:51:19
      %out_dtype.23 : int = prim::dtype(%x.27)
      %1501 : Tensor = aten::to(%scale.49, %out_dtype.23, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:23
      %1502 : Tensor = aten::mul(%x.27, %1501) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:19
      %1503 : Tensor = aten::to(%bias.113, %out_dtype.23, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:45
      %1504 : Tensor = aten::add(%1502, %1503, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:19
      -> (%1504)
    block1():
      %running_mean.45 : Tensor = prim::GetAttr[name="running_mean"](%norm.22)
      %running_var.45 : Tensor = prim::GetAttr[name="running_var"](%norm.22)
      %weight.68 : Tensor = prim::GetAttr[name="weight"](%norm.22)
      %bias.115 : Tensor = prim::GetAttr[name="bias"](%norm.22)
      %eps.45 : float = prim::GetAttr[name="eps"](%norm.22)
      %1510 : Tensor = aten::batch_norm(%x.27, %weight.68, %bias.115, %running_mean.45, %running_var.45, %44, %37, %eps.45, %55) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:2421:11
      -> (%1510)
  %out.54 : Tensor = aten::relu_(%out.52) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\resnet.py:199:14
  %conv3.7 : __torch__.detectron2.layers.wrappers.___torch_mangle_367.Conv2d = prim::GetAttr[name="conv3"](%_3.4)
  %weight.70 : Tensor = prim::GetAttr[name="weight"](%conv3.7)
  %bias.117 : Tensor? = prim::GetAttr[name="bias"](%conv3.7)
  %1515 : int[] = prim::ListConstruct(%43, %43)
  %1516 : int[] = prim::ListConstruct(%48, %48)
  %1517 : int[] = prim::ListConstruct(%43, %43)
  %x.29 : Tensor = aten::conv2d(%out.54, %weight.70, %bias.117, %1515, %1516, %1517, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:106:12
  %norm.24 : __torch__.detectron2.layers.batch_norm.___torch_mangle_346.FrozenBatchNorm2d = prim::GetAttr[name="norm"](%conv3.7)
  %1520 : bool = prim::requires_grad(%x.29)
  %out.56 : Tensor = prim::If(%1520) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:45:8
    block0():
      %weight.72 : Tensor = prim::GetAttr[name="weight"](%norm.24)
      %running_var.47 : Tensor = prim::GetAttr[name="running_var"](%norm.24)
      %eps.47 : float = prim::GetAttr[name="eps"](%norm.24)
      %1525 : Tensor = aten::add(%running_var.47, %eps.47, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:35
      %1526 : Tensor = aten::rsqrt(%1525) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:35
      %scale.51 : Tensor = aten::mul(%weight.72, %1526) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:20
      %bias.119 : Tensor = prim::GetAttr[name="bias"](%norm.24)
      %running_mean.47 : Tensor = prim::GetAttr[name="running_mean"](%norm.24)
      %1530 : Tensor = aten::mul(%running_mean.47, %scale.51) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:49:31
      %bias.121 : Tensor = aten::sub(%bias.119, %1530, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:49:19
      %1532 : int[] = prim::ListConstruct(%43, %51, %43, %43)
      %scale.53 : Tensor = aten::reshape(%scale.51, %1532) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:50:20
      %1534 : int[] = prim::ListConstruct(%43, %51, %43, %43)
      %bias.123 : Tensor = aten::reshape(%bias.121, %1534) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:51:19
      %out_dtype.25 : int = prim::dtype(%x.29)
      %1537 : Tensor = aten::to(%scale.53, %out_dtype.25, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:23
      %1538 : Tensor = aten::mul(%x.29, %1537) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:19
      %1539 : Tensor = aten::to(%bias.123, %out_dtype.25, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:45
      %1540 : Tensor = aten::add(%1538, %1539, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:19
      -> (%1540)
    block1():
      %running_mean.49 : Tensor = prim::GetAttr[name="running_mean"](%norm.24)
      %running_var.49 : Tensor = prim::GetAttr[name="running_var"](%norm.24)
      %weight.74 : Tensor = prim::GetAttr[name="weight"](%norm.24)
      %bias.125 : Tensor = prim::GetAttr[name="bias"](%norm.24)
      %eps.49 : float = prim::GetAttr[name="eps"](%norm.24)
      %1546 : Tensor = aten::batch_norm(%x.29, %weight.74, %bias.125, %running_mean.49, %running_var.49, %44, %37, %eps.49, %55) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:2421:11
      -> (%1546)
  %out.58 : Tensor = aten::add_(%out.56, %input.22, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\resnet.py:208:8
  %input.17 : Tensor = aten::relu_(%out.58) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\resnet.py:209:14
  %conv1.9 : __torch__.detectron2.layers.wrappers.___torch_mangle_369.Conv2d = prim::GetAttr[name="conv1"](%_4.1)
  %weight.76 : Tensor = prim::GetAttr[name="weight"](%conv1.9)
  %bias.127 : Tensor? = prim::GetAttr[name="bias"](%conv1.9)
  %1552 : int[] = prim::ListConstruct(%43, %43)
  %1553 : int[] = prim::ListConstruct(%48, %48)
  %1554 : int[] = prim::ListConstruct(%43, %43)
  %x.31 : Tensor = aten::conv2d(%input.17, %weight.76, %bias.127, %1552, %1553, %1554, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:106:12
  %norm.26 : __torch__.detectron2.layers.batch_norm.___torch_mangle_346.FrozenBatchNorm2d = prim::GetAttr[name="norm"](%conv1.9)
  %1557 : bool = prim::requires_grad(%x.31)
  %out.60 : Tensor = prim::If(%1557) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:45:8
    block0():
      %weight.78 : Tensor = prim::GetAttr[name="weight"](%norm.26)
      %running_var.51 : Tensor = prim::GetAttr[name="running_var"](%norm.26)
      %eps.51 : float = prim::GetAttr[name="eps"](%norm.26)
      %1562 : Tensor = aten::add(%running_var.51, %eps.51, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:35
      %1563 : Tensor = aten::rsqrt(%1562) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:35
      %scale.55 : Tensor = aten::mul(%weight.78, %1563) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:20
      %bias.129 : Tensor = prim::GetAttr[name="bias"](%norm.26)
      %running_mean.51 : Tensor = prim::GetAttr[name="running_mean"](%norm.26)
      %1567 : Tensor = aten::mul(%running_mean.51, %scale.55) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:49:31
      %bias.131 : Tensor = aten::sub(%bias.129, %1567, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:49:19
      %1569 : int[] = prim::ListConstruct(%43, %51, %43, %43)
      %scale.57 : Tensor = aten::reshape(%scale.55, %1569) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:50:20
      %1571 : int[] = prim::ListConstruct(%43, %51, %43, %43)
      %bias.133 : Tensor = aten::reshape(%bias.131, %1571) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:51:19
      %out_dtype.27 : int = prim::dtype(%x.31)
      %1574 : Tensor = aten::to(%scale.57, %out_dtype.27, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:23
      %1575 : Tensor = aten::mul(%x.31, %1574) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:19
      %1576 : Tensor = aten::to(%bias.133, %out_dtype.27, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:45
      %1577 : Tensor = aten::add(%1575, %1576, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:19
      -> (%1577)
    block1():
      %running_mean.53 : Tensor = prim::GetAttr[name="running_mean"](%norm.26)
      %running_var.53 : Tensor = prim::GetAttr[name="running_var"](%norm.26)
      %weight.80 : Tensor = prim::GetAttr[name="weight"](%norm.26)
      %bias.135 : Tensor = prim::GetAttr[name="bias"](%norm.26)
      %eps.53 : float = prim::GetAttr[name="eps"](%norm.26)
      %1583 : Tensor = aten::batch_norm(%x.31, %weight.80, %bias.135, %running_mean.53, %running_var.53, %44, %37, %eps.53, %55) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:2421:11
      -> (%1583)
  %out.62 : Tensor = aten::relu_(%out.60) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\resnet.py:196:14
  %conv2.9 : __torch__.detectron2.layers.wrappers.___torch_mangle_366.Conv2d = prim::GetAttr[name="conv2"](%_4.1)
  %weight.82 : Tensor = prim::GetAttr[name="weight"](%conv2.9)
  %bias.137 : Tensor? = prim::GetAttr[name="bias"](%conv2.9)
  %1588 : int[] = prim::ListConstruct(%43, %43)
  %1589 : int[] = prim::ListConstruct(%43, %43)
  %1590 : int[] = prim::ListConstruct(%43, %43)
  %x.33 : Tensor = aten::conv2d(%out.62, %weight.82, %bias.137, %1588, %1589, %1590, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:106:12
  %norm.28 : __torch__.detectron2.layers.batch_norm.___torch_mangle_346.FrozenBatchNorm2d = prim::GetAttr[name="norm"](%conv2.9)
  %1593 : bool = prim::requires_grad(%x.33)
  %out.64 : Tensor = prim::If(%1593) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:45:8
    block0():
      %weight.84 : Tensor = prim::GetAttr[name="weight"](%norm.28)
      %running_var.55 : Tensor = prim::GetAttr[name="running_var"](%norm.28)
      %eps.55 : float = prim::GetAttr[name="eps"](%norm.28)
      %1598 : Tensor = aten::add(%running_var.55, %eps.55, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:35
      %1599 : Tensor = aten::rsqrt(%1598) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:35
      %scale.59 : Tensor = aten::mul(%weight.84, %1599) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:20
      %bias.139 : Tensor = prim::GetAttr[name="bias"](%norm.28)
      %running_mean.55 : Tensor = prim::GetAttr[name="running_mean"](%norm.28)
      %1603 : Tensor = aten::mul(%running_mean.55, %scale.59) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:49:31
      %bias.141 : Tensor = aten::sub(%bias.139, %1603, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:49:19
      %1605 : int[] = prim::ListConstruct(%43, %51, %43, %43)
      %scale.61 : Tensor = aten::reshape(%scale.59, %1605) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:50:20
      %1607 : int[] = prim::ListConstruct(%43, %51, %43, %43)
      %bias.143 : Tensor = aten::reshape(%bias.141, %1607) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:51:19
      %out_dtype.29 : int = prim::dtype(%x.33)
      %1610 : Tensor = aten::to(%scale.61, %out_dtype.29, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:23
      %1611 : Tensor = aten::mul(%x.33, %1610) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:19
      %1612 : Tensor = aten::to(%bias.143, %out_dtype.29, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:45
      %1613 : Tensor = aten::add(%1611, %1612, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:19
      -> (%1613)
    block1():
      %running_mean.57 : Tensor = prim::GetAttr[name="running_mean"](%norm.28)
      %running_var.57 : Tensor = prim::GetAttr[name="running_var"](%norm.28)
      %weight.86 : Tensor = prim::GetAttr[name="weight"](%norm.28)
      %bias.145 : Tensor = prim::GetAttr[name="bias"](%norm.28)
      %eps.57 : float = prim::GetAttr[name="eps"](%norm.28)
      %1619 : Tensor = aten::batch_norm(%x.33, %weight.86, %bias.145, %running_mean.57, %running_var.57, %44, %37, %eps.57, %55) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:2421:11
      -> (%1619)
  %out.66 : Tensor = aten::relu_(%out.64) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\resnet.py:199:14
  %conv3.9 : __torch__.detectron2.layers.wrappers.___torch_mangle_367.Conv2d = prim::GetAttr[name="conv3"](%_4.1)
  %weight.88 : Tensor = prim::GetAttr[name="weight"](%conv3.9)
  %bias.147 : Tensor? = prim::GetAttr[name="bias"](%conv3.9)
  %1624 : int[] = prim::ListConstruct(%43, %43)
  %1625 : int[] = prim::ListConstruct(%48, %48)
  %1626 : int[] = prim::ListConstruct(%43, %43)
  %x.35 : Tensor = aten::conv2d(%out.66, %weight.88, %bias.147, %1624, %1625, %1626, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:106:12
  %norm.30 : __torch__.detectron2.layers.batch_norm.___torch_mangle_346.FrozenBatchNorm2d = prim::GetAttr[name="norm"](%conv3.9)
  %1629 : bool = prim::requires_grad(%x.35)
  %out.68 : Tensor = prim::If(%1629) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:45:8
    block0():
      %weight.90 : Tensor = prim::GetAttr[name="weight"](%norm.30)
      %running_var.59 : Tensor = prim::GetAttr[name="running_var"](%norm.30)
      %eps.59 : float = prim::GetAttr[name="eps"](%norm.30)
      %1634 : Tensor = aten::add(%running_var.59, %eps.59, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:35
      %1635 : Tensor = aten::rsqrt(%1634) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:35
      %scale.63 : Tensor = aten::mul(%weight.90, %1635) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:20
      %bias.149 : Tensor = prim::GetAttr[name="bias"](%norm.30)
      %running_mean.59 : Tensor = prim::GetAttr[name="running_mean"](%norm.30)
      %1639 : Tensor = aten::mul(%running_mean.59, %scale.63) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:49:31
      %bias.151 : Tensor = aten::sub(%bias.149, %1639, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:49:19
      %1641 : int[] = prim::ListConstruct(%43, %51, %43, %43)
      %scale.65 : Tensor = aten::reshape(%scale.63, %1641) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:50:20
      %1643 : int[] = prim::ListConstruct(%43, %51, %43, %43)
      %bias.153 : Tensor = aten::reshape(%bias.151, %1643) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:51:19
      %out_dtype.31 : int = prim::dtype(%x.35)
      %1646 : Tensor = aten::to(%scale.65, %out_dtype.31, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:23
      %1647 : Tensor = aten::mul(%x.35, %1646) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:19
      %1648 : Tensor = aten::to(%bias.153, %out_dtype.31, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:45
      %1649 : Tensor = aten::add(%1647, %1648, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:19
      -> (%1649)
    block1():
      %running_mean.61 : Tensor = prim::GetAttr[name="running_mean"](%norm.30)
      %running_var.61 : Tensor = prim::GetAttr[name="running_var"](%norm.30)
      %weight.92 : Tensor = prim::GetAttr[name="weight"](%norm.30)
      %bias.155 : Tensor = prim::GetAttr[name="bias"](%norm.30)
      %eps.61 : float = prim::GetAttr[name="eps"](%norm.30)
      %1655 : Tensor = aten::batch_norm(%x.35, %weight.92, %bias.155, %running_mean.61, %running_var.61, %44, %37, %eps.61, %55) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:2421:11
      -> (%1655)
  %out.70 : Tensor = aten::add_(%out.68, %input.17, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\resnet.py:208:8
  %input.21 : Tensor = aten::relu_(%out.70) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\resnet.py:209:14
  %conv1.22 : __torch__.detectron2.layers.wrappers.___torch_mangle_369.Conv2d = prim::GetAttr[name="conv1"](%_5)
  %weight.207 : Tensor = prim::GetAttr[name="weight"](%conv1.22)
  %bias.344 : Tensor? = prim::GetAttr[name="bias"](%conv1.22)
  %1661 : int[] = prim::ListConstruct(%43, %43)
  %1662 : int[] = prim::ListConstruct(%48, %48)
  %1663 : int[] = prim::ListConstruct(%43, %43)
  %x.98 : Tensor = aten::conv2d(%input.21, %weight.207, %bias.344, %1661, %1662, %1663, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:106:12
  %norm.69 : __torch__.detectron2.layers.batch_norm.___torch_mangle_346.FrozenBatchNorm2d = prim::GetAttr[name="norm"](%conv1.22)
  %1666 : bool = prim::requires_grad(%x.98)
  %out.121 : Tensor = prim::If(%1666) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:45:8
    block0():
      %weight.209 : Tensor = prim::GetAttr[name="weight"](%norm.69)
      %running_var.138 : Tensor = prim::GetAttr[name="running_var"](%norm.69)
      %eps.138 : float = prim::GetAttr[name="eps"](%norm.69)
      %1671 : Tensor = aten::add(%running_var.138, %eps.138, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:35
      %1672 : Tensor = aten::rsqrt(%1671) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:35
      %scale.140 : Tensor = aten::mul(%weight.209, %1672) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:20
      %bias.346 : Tensor = prim::GetAttr[name="bias"](%norm.69)
      %running_mean.138 : Tensor = prim::GetAttr[name="running_mean"](%norm.69)
      %1676 : Tensor = aten::mul(%running_mean.138, %scale.140) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:49:31
      %bias.348 : Tensor = aten::sub(%bias.346, %1676, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:49:19
      %1678 : int[] = prim::ListConstruct(%43, %51, %43, %43)
      %scale.142 : Tensor = aten::reshape(%scale.140, %1678) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:50:20
      %1680 : int[] = prim::ListConstruct(%43, %51, %43, %43)
      %bias.350 : Tensor = aten::reshape(%bias.348, %1680) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:51:19
      %out_dtype.70 : int = prim::dtype(%x.98)
      %1683 : Tensor = aten::to(%scale.142, %out_dtype.70, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:23
      %1684 : Tensor = aten::mul(%x.98, %1683) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:19
      %1685 : Tensor = aten::to(%bias.350, %out_dtype.70, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:45
      %1686 : Tensor = aten::add(%1684, %1685, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:19
      -> (%1686)
    block1():
      %running_mean.140 : Tensor = prim::GetAttr[name="running_mean"](%norm.69)
      %running_var.140 : Tensor = prim::GetAttr[name="running_var"](%norm.69)
      %weight.211 : Tensor = prim::GetAttr[name="weight"](%norm.69)
      %bias.352 : Tensor = prim::GetAttr[name="bias"](%norm.69)
      %eps.140 : float = prim::GetAttr[name="eps"](%norm.69)
      %1692 : Tensor = aten::batch_norm(%x.98, %weight.211, %bias.352, %running_mean.140, %running_var.140, %44, %37, %eps.140, %55) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:2421:11
      -> (%1692)
  %out.123 : Tensor = aten::relu_(%out.121) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\resnet.py:196:14
  %conv2.20 : __torch__.detectron2.layers.wrappers.___torch_mangle_366.Conv2d = prim::GetAttr[name="conv2"](%_5)
  %weight.213 : Tensor = prim::GetAttr[name="weight"](%conv2.20)
  %bias.354 : Tensor? = prim::GetAttr[name="bias"](%conv2.20)
  %1697 : int[] = prim::ListConstruct(%43, %43)
  %1698 : int[] = prim::ListConstruct(%43, %43)
  %1699 : int[] = prim::ListConstruct(%43, %43)
  %x.100 : Tensor = aten::conv2d(%out.123, %weight.213, %bias.354, %1697, %1698, %1699, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:106:12
  %norm.71 : __torch__.detectron2.layers.batch_norm.___torch_mangle_346.FrozenBatchNorm2d = prim::GetAttr[name="norm"](%conv2.20)
  %1702 : bool = prim::requires_grad(%x.100)
  %out.125 : Tensor = prim::If(%1702) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:45:8
    block0():
      %weight.215 : Tensor = prim::GetAttr[name="weight"](%norm.71)
      %running_var.142 : Tensor = prim::GetAttr[name="running_var"](%norm.71)
      %eps.142 : float = prim::GetAttr[name="eps"](%norm.71)
      %1707 : Tensor = aten::add(%running_var.142, %eps.142, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:35
      %1708 : Tensor = aten::rsqrt(%1707) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:35
      %scale.144 : Tensor = aten::mul(%weight.215, %1708) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:20
      %bias.356 : Tensor = prim::GetAttr[name="bias"](%norm.71)
      %running_mean.142 : Tensor = prim::GetAttr[name="running_mean"](%norm.71)
      %1712 : Tensor = aten::mul(%running_mean.142, %scale.144) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:49:31
      %bias.358 : Tensor = aten::sub(%bias.356, %1712, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:49:19
      %1714 : int[] = prim::ListConstruct(%43, %51, %43, %43)
      %scale.146 : Tensor = aten::reshape(%scale.144, %1714) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:50:20
      %1716 : int[] = prim::ListConstruct(%43, %51, %43, %43)
      %bias.360 : Tensor = aten::reshape(%bias.358, %1716) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:51:19
      %out_dtype.72 : int = prim::dtype(%x.100)
      %1719 : Tensor = aten::to(%scale.146, %out_dtype.72, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:23
      %1720 : Tensor = aten::mul(%x.100, %1719) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:19
      %1721 : Tensor = aten::to(%bias.360, %out_dtype.72, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:45
      %1722 : Tensor = aten::add(%1720, %1721, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:19
      -> (%1722)
    block1():
      %running_mean.144 : Tensor = prim::GetAttr[name="running_mean"](%norm.71)
      %running_var.144 : Tensor = prim::GetAttr[name="running_var"](%norm.71)
      %weight.217 : Tensor = prim::GetAttr[name="weight"](%norm.71)
      %bias.362 : Tensor = prim::GetAttr[name="bias"](%norm.71)
      %eps.144 : float = prim::GetAttr[name="eps"](%norm.71)
      %1728 : Tensor = aten::batch_norm(%x.100, %weight.217, %bias.362, %running_mean.144, %running_var.144, %44, %37, %eps.144, %55) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:2421:11
      -> (%1728)
  %out.127 : Tensor = aten::relu_(%out.125) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\resnet.py:199:14
  %conv3.20 : __torch__.detectron2.layers.wrappers.___torch_mangle_367.Conv2d = prim::GetAttr[name="conv3"](%_5)
  %weight.219 : Tensor = prim::GetAttr[name="weight"](%conv3.20)
  %bias.364 : Tensor? = prim::GetAttr[name="bias"](%conv3.20)
  %1733 : int[] = prim::ListConstruct(%43, %43)
  %1734 : int[] = prim::ListConstruct(%48, %48)
  %1735 : int[] = prim::ListConstruct(%43, %43)
  %x.102 : Tensor = aten::conv2d(%out.127, %weight.219, %bias.364, %1733, %1734, %1735, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:106:12
  %norm.73 : __torch__.detectron2.layers.batch_norm.___torch_mangle_346.FrozenBatchNorm2d = prim::GetAttr[name="norm"](%conv3.20)
  %1738 : bool = prim::requires_grad(%x.102)
  %out.129 : Tensor = prim::If(%1738) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:45:8
    block0():
      %weight.221 : Tensor = prim::GetAttr[name="weight"](%norm.73)
      %running_var.146 : Tensor = prim::GetAttr[name="running_var"](%norm.73)
      %eps.146 : float = prim::GetAttr[name="eps"](%norm.73)
      %1743 : Tensor = aten::add(%running_var.146, %eps.146, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:35
      %1744 : Tensor = aten::rsqrt(%1743) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:35
      %scale.148 : Tensor = aten::mul(%weight.221, %1744) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:20
      %bias.366 : Tensor = prim::GetAttr[name="bias"](%norm.73)
      %running_mean.146 : Tensor = prim::GetAttr[name="running_mean"](%norm.73)
      %1748 : Tensor = aten::mul(%running_mean.146, %scale.148) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:49:31
      %bias.368 : Tensor = aten::sub(%bias.366, %1748, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:49:19
      %1750 : int[] = prim::ListConstruct(%43, %51, %43, %43)
      %scale.150 : Tensor = aten::reshape(%scale.148, %1750) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:50:20
      %1752 : int[] = prim::ListConstruct(%43, %51, %43, %43)
      %bias.370 : Tensor = aten::reshape(%bias.368, %1752) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:51:19
      %out_dtype.74 : int = prim::dtype(%x.102)
      %1755 : Tensor = aten::to(%scale.150, %out_dtype.74, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:23
      %1756 : Tensor = aten::mul(%x.102, %1755) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:19
      %1757 : Tensor = aten::to(%bias.370, %out_dtype.74, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:45
      %1758 : Tensor = aten::add(%1756, %1757, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:19
      -> (%1758)
    block1():
      %running_mean.148 : Tensor = prim::GetAttr[name="running_mean"](%norm.73)
      %running_var.148 : Tensor = prim::GetAttr[name="running_var"](%norm.73)
      %weight.223 : Tensor = prim::GetAttr[name="weight"](%norm.73)
      %bias.372 : Tensor = prim::GetAttr[name="bias"](%norm.73)
      %eps.148 : float = prim::GetAttr[name="eps"](%norm.73)
      %1764 : Tensor = aten::batch_norm(%x.102, %weight.223, %bias.372, %running_mean.148, %running_var.148, %44, %37, %eps.148, %55) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:2421:11
      -> (%1764)
  %out.131 : Tensor = aten::add_(%out.129, %input.21, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\resnet.py:208:8
  %x.72 : Tensor = aten::relu_(%out.131) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\resnet.py:209:14
  %_out_features.7 : str[] = prim::GetAttr[name="_out_features"](%bottom_up)
  %1768 : bool = aten::__contains__(%_out_features.7, %name.13) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\resnet.py:450:15
   = prim::If(%1768) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\resnet.py:450:12
    block0():
       = aten::_set_item(%bottom_up_features.1, %name.13, %x.72) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\resnet.py:451:16
      -> ()
    block1():
      -> ()
  %_0.6 : __torch__.detectron2.modeling.backbone.resnet.___torch_mangle_376.BottleneckBlock = prim::GetAttr[name="0"](%_3.1)
  %_1.2 : __torch__.detectron2.modeling.backbone.resnet.___torch_mangle_378.BottleneckBlock = prim::GetAttr[name="1"](%_3.1)
  %_2.2 : __torch__.detectron2.modeling.backbone.resnet.___torch_mangle_378.BottleneckBlock = prim::GetAttr[name="2"](%_3.1)
  %conv1.1 : __torch__.detectron2.layers.wrappers.___torch_mangle_373.Conv2d = prim::GetAttr[name="conv1"](%_0.6)
  %weight.118 : Tensor = prim::GetAttr[name="weight"](%conv1.1)
  %bias.5 : Tensor? = prim::GetAttr[name="bias"](%conv1.1)
  %1775 : int[] = prim::ListConstruct(%46, %46)
  %1776 : int[] = prim::ListConstruct(%48, %48)
  %1777 : int[] = prim::ListConstruct(%43, %43)
  %x.61 : Tensor = aten::conv2d(%x.72, %weight.118, %bias.5, %1775, %1776, %1777, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:106:12
  %norm.2 : __torch__.detectron2.layers.batch_norm.___torch_mangle_346.FrozenBatchNorm2d = prim::GetAttr[name="norm"](%conv1.1)
  %1780 : bool = prim::requires_grad(%x.61)
  %out.2 : Tensor = prim::If(%1780) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:45:8
    block0():
      %weight.6 : Tensor = prim::GetAttr[name="weight"](%norm.2)
      %running_var.3 : Tensor = prim::GetAttr[name="running_var"](%norm.2)
      %eps.3 : float = prim::GetAttr[name="eps"](%norm.2)
      %1785 : Tensor = aten::add(%running_var.3, %eps.3, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:35
      %1786 : Tensor = aten::rsqrt(%1785) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:35
      %scale.3 : Tensor = aten::mul(%weight.6, %1786) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:20
      %bias.9 : Tensor = prim::GetAttr[name="bias"](%norm.2)
      %running_mean.3 : Tensor = prim::GetAttr[name="running_mean"](%norm.2)
      %1790 : Tensor = aten::mul(%running_mean.3, %scale.3) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:49:31
      %bias.11 : Tensor = aten::sub(%bias.9, %1790, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:49:19
      %1792 : int[] = prim::ListConstruct(%43, %51, %43, %43)
      %scale.9 : Tensor = aten::reshape(%scale.3, %1792) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:50:20
      %1794 : int[] = prim::ListConstruct(%43, %51, %43, %43)
      %bias.13 : Tensor = aten::reshape(%bias.11, %1794) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:51:19
      %out_dtype.3 : int = prim::dtype(%x.61)
      %1797 : Tensor = aten::to(%scale.9, %out_dtype.3, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:23
      %1798 : Tensor = aten::mul(%x.61, %1797) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:19
      %1799 : Tensor = aten::to(%bias.13, %out_dtype.3, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:45
      %1800 : Tensor = aten::add(%1798, %1799, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:19
      -> (%1800)
    block1():
      %running_mean.5 : Tensor = prim::GetAttr[name="running_mean"](%norm.2)
      %running_var.5 : Tensor = prim::GetAttr[name="running_var"](%norm.2)
      %weight.8 : Tensor = prim::GetAttr[name="weight"](%norm.2)
      %bias.15 : Tensor = prim::GetAttr[name="bias"](%norm.2)
      %eps.5 : float = prim::GetAttr[name="eps"](%norm.2)
      %1806 : Tensor = aten::batch_norm(%x.61, %weight.8, %bias.15, %running_mean.5, %running_var.5, %44, %37, %eps.5, %55) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:2421:11
      -> (%1806)
  %out.6 : Tensor = aten::relu_(%out.2) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\resnet.py:196:14
  %conv2.1 : __torch__.detectron2.layers.wrappers.___torch_mangle_374.Conv2d = prim::GetAttr[name="conv2"](%_0.6)
  %weight.10 : Tensor = prim::GetAttr[name="weight"](%conv2.1)
  %bias.17 : Tensor? = prim::GetAttr[name="bias"](%conv2.1)
  %1811 : int[] = prim::ListConstruct(%43, %43)
  %1812 : int[] = prim::ListConstruct(%43, %43)
  %1813 : int[] = prim::ListConstruct(%43, %43)
  %x.55 : Tensor = aten::conv2d(%out.6, %weight.10, %bias.17, %1811, %1812, %1813, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:106:12
  %norm.4 : __torch__.detectron2.layers.batch_norm.___torch_mangle_346.FrozenBatchNorm2d = prim::GetAttr[name="norm"](%conv2.1)
  %1816 : bool = prim::requires_grad(%x.55)
  %out.10 : Tensor = prim::If(%1816) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:45:8
    block0():
      %weight.12 : Tensor = prim::GetAttr[name="weight"](%norm.4)
      %running_var.7 : Tensor = prim::GetAttr[name="running_var"](%norm.4)
      %eps.7 : float = prim::GetAttr[name="eps"](%norm.4)
      %1821 : Tensor = aten::add(%running_var.7, %eps.7, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:35
      %1822 : Tensor = aten::rsqrt(%1821) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:35
      %scale.11 : Tensor = aten::mul(%weight.12, %1822) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:20
      %bias.19 : Tensor = prim::GetAttr[name="bias"](%norm.4)
      %running_mean.7 : Tensor = prim::GetAttr[name="running_mean"](%norm.4)
      %1826 : Tensor = aten::mul(%running_mean.7, %scale.11) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:49:31
      %bias.21 : Tensor = aten::sub(%bias.19, %1826, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:49:19
      %1828 : int[] = prim::ListConstruct(%43, %51, %43, %43)
      %scale.13 : Tensor = aten::reshape(%scale.11, %1828) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:50:20
      %1830 : int[] = prim::ListConstruct(%43, %51, %43, %43)
      %bias.23 : Tensor = aten::reshape(%bias.21, %1830) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:51:19
      %out_dtype.5 : int = prim::dtype(%x.55)
      %1833 : Tensor = aten::to(%scale.13, %out_dtype.5, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:23
      %1834 : Tensor = aten::mul(%x.55, %1833) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:19
      %1835 : Tensor = aten::to(%bias.23, %out_dtype.5, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:45
      %1836 : Tensor = aten::add(%1834, %1835, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:19
      -> (%1836)
    block1():
      %running_mean.9 : Tensor = prim::GetAttr[name="running_mean"](%norm.4)
      %running_var.9 : Tensor = prim::GetAttr[name="running_var"](%norm.4)
      %weight.14 : Tensor = prim::GetAttr[name="weight"](%norm.4)
      %bias.25 : Tensor = prim::GetAttr[name="bias"](%norm.4)
      %eps.9 : float = prim::GetAttr[name="eps"](%norm.4)
      %1842 : Tensor = aten::batch_norm(%x.55, %weight.14, %bias.25, %running_mean.9, %running_var.9, %44, %37, %eps.9, %55) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:2421:11
      -> (%1842)
  %out.14 : Tensor = aten::relu_(%out.10) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\resnet.py:199:14
  %conv3.1 : __torch__.detectron2.layers.wrappers.___torch_mangle_375.Conv2d = prim::GetAttr[name="conv3"](%_0.6)
  %weight.15 : Tensor = prim::GetAttr[name="weight"](%conv3.1)
  %bias.24 : Tensor? = prim::GetAttr[name="bias"](%conv3.1)
  %1847 : int[] = prim::ListConstruct(%43, %43)
  %1848 : int[] = prim::ListConstruct(%48, %48)
  %1849 : int[] = prim::ListConstruct(%43, %43)
  %x.49 : Tensor = aten::conv2d(%out.14, %weight.15, %bias.24, %1847, %1848, %1849, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:106:12
  %norm.5 : __torch__.detectron2.layers.batch_norm.___torch_mangle_346.FrozenBatchNorm2d = prim::GetAttr[name="norm"](%conv3.1)
  %1852 : bool = prim::requires_grad(%x.49)
  %out.18 : Tensor = prim::If(%1852) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:45:8
    block0():
      %weight.17 : Tensor = prim::GetAttr[name="weight"](%norm.5)
      %running_var.10 : Tensor = prim::GetAttr[name="running_var"](%norm.5)
      %eps.10 : float = prim::GetAttr[name="eps"](%norm.5)
      %1857 : Tensor = aten::add(%running_var.10, %eps.10, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:35
      %1858 : Tensor = aten::rsqrt(%1857) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:35
      %scale.14 : Tensor = aten::mul(%weight.17, %1858) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:20
      %bias.26 : Tensor = prim::GetAttr[name="bias"](%norm.5)
      %running_mean.10 : Tensor = prim::GetAttr[name="running_mean"](%norm.5)
      %1862 : Tensor = aten::mul(%running_mean.10, %scale.14) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:49:31
      %bias.28 : Tensor = aten::sub(%bias.26, %1862, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:49:19
      %1864 : int[] = prim::ListConstruct(%43, %51, %43, %43)
      %scale.16 : Tensor = aten::reshape(%scale.14, %1864) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:50:20
      %1866 : int[] = prim::ListConstruct(%43, %51, %43, %43)
      %bias.30 : Tensor = aten::reshape(%bias.28, %1866) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:51:19
      %out_dtype.6 : int = prim::dtype(%x.49)
      %1869 : Tensor = aten::to(%scale.16, %out_dtype.6, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:23
      %1870 : Tensor = aten::mul(%x.49, %1869) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:19
      %1871 : Tensor = aten::to(%bias.30, %out_dtype.6, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:45
      %1872 : Tensor = aten::add(%1870, %1871, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:19
      -> (%1872)
    block1():
      %running_mean.12 : Tensor = prim::GetAttr[name="running_mean"](%norm.5)
      %running_var.12 : Tensor = prim::GetAttr[name="running_var"](%norm.5)
      %weight.19 : Tensor = prim::GetAttr[name="weight"](%norm.5)
      %bias.32 : Tensor = prim::GetAttr[name="bias"](%norm.5)
      %eps.12 : float = prim::GetAttr[name="eps"](%norm.5)
      %1878 : Tensor = aten::batch_norm(%x.49, %weight.19, %bias.32, %running_mean.12, %running_var.12, %44, %37, %eps.12, %55) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:2421:11
      -> (%1878)
  %shortcut.3 : __torch__.detectron2.layers.wrappers.___torch_mangle_372.Conv2d = prim::GetAttr[name="shortcut"](%_0.6)
  %weight.16 : Tensor = prim::GetAttr[name="weight"](%shortcut.3)
  %bias.27 : Tensor? = prim::GetAttr[name="bias"](%shortcut.3)
  %1882 : int[] = prim::ListConstruct(%46, %46)
  %1883 : int[] = prim::ListConstruct(%48, %48)
  %1884 : int[] = prim::ListConstruct(%43, %43)
  %x.11 : Tensor = aten::conv2d(%x.72, %weight.16, %bias.27, %1882, %1883, %1884, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:106:12
  %norm.6 : __torch__.detectron2.layers.batch_norm.___torch_mangle_346.FrozenBatchNorm2d = prim::GetAttr[name="norm"](%shortcut.3)
  %1887 : bool = prim::requires_grad(%x.11)
  %shortcut.5 : Tensor = prim::If(%1887) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:45:8
    block0():
      %weight.18 : Tensor = prim::GetAttr[name="weight"](%norm.6)
      %running_var.11 : Tensor = prim::GetAttr[name="running_var"](%norm.6)
      %eps.11 : float = prim::GetAttr[name="eps"](%norm.6)
      %1892 : Tensor = aten::add(%running_var.11, %eps.11, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:35
      %1893 : Tensor = aten::rsqrt(%1892) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:35
      %scale.15 : Tensor = aten::mul(%weight.18, %1893) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:20
      %bias.29 : Tensor = prim::GetAttr[name="bias"](%norm.6)
      %running_mean.11 : Tensor = prim::GetAttr[name="running_mean"](%norm.6)
      %1897 : Tensor = aten::mul(%running_mean.11, %scale.15) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:49:31
      %bias.31 : Tensor = aten::sub(%bias.29, %1897, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:49:19
      %1899 : int[] = prim::ListConstruct(%43, %51, %43, %43)
      %scale.17 : Tensor = aten::reshape(%scale.15, %1899) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:50:20
      %1901 : int[] = prim::ListConstruct(%43, %51, %43, %43)
      %bias.33 : Tensor = aten::reshape(%bias.31, %1901) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:51:19
      %out_dtype.7 : int = prim::dtype(%x.11)
      %1904 : Tensor = aten::to(%scale.17, %out_dtype.7, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:23
      %1905 : Tensor = aten::mul(%x.11, %1904) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:19
      %1906 : Tensor = aten::to(%bias.33, %out_dtype.7, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:45
      %1907 : Tensor = aten::add(%1905, %1906, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:19
      -> (%1907)
    block1():
      %running_mean.13 : Tensor = prim::GetAttr[name="running_mean"](%norm.6)
      %running_var.13 : Tensor = prim::GetAttr[name="running_var"](%norm.6)
      %weight.20 : Tensor = prim::GetAttr[name="weight"](%norm.6)
      %bias.35 : Tensor = prim::GetAttr[name="bias"](%norm.6)
      %eps.13 : float = prim::GetAttr[name="eps"](%norm.6)
      %1913 : Tensor = aten::batch_norm(%x.11, %weight.20, %bias.35, %running_mean.13, %running_var.13, %44, %37, %eps.13, %55) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:2421:11
      -> (%1913)
  %out.22 : Tensor = aten::add_(%out.18, %shortcut.5, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\resnet.py:208:8
  %input.5 : Tensor = aten::relu_(%out.22) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\resnet.py:209:14
  %conv1.3 : __torch__.detectron2.layers.wrappers.___torch_mangle_377.Conv2d = prim::GetAttr[name="conv1"](%_1.2)
  %weight.22 : Tensor = prim::GetAttr[name="weight"](%conv1.3)
  %bias.37 : Tensor? = prim::GetAttr[name="bias"](%conv1.3)
  %1919 : int[] = prim::ListConstruct(%43, %43)
  %1920 : int[] = prim::ListConstruct(%48, %48)
  %1921 : int[] = prim::ListConstruct(%43, %43)
  %x.57 : Tensor = aten::conv2d(%input.5, %weight.22, %bias.37, %1919, %1920, %1921, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:106:12
  %norm.8 : __torch__.detectron2.layers.batch_norm.___torch_mangle_346.FrozenBatchNorm2d = prim::GetAttr[name="norm"](%conv1.3)
  %1924 : bool = prim::requires_grad(%x.57)
  %out.24 : Tensor = prim::If(%1924) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:45:8
    block0():
      %weight.24 : Tensor = prim::GetAttr[name="weight"](%norm.8)
      %running_var.15 : Tensor = prim::GetAttr[name="running_var"](%norm.8)
      %eps.15 : float = prim::GetAttr[name="eps"](%norm.8)
      %1929 : Tensor = aten::add(%running_var.15, %eps.15, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:35
      %1930 : Tensor = aten::rsqrt(%1929) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:35
      %scale.19 : Tensor = aten::mul(%weight.24, %1930) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:20
      %bias.39 : Tensor = prim::GetAttr[name="bias"](%norm.8)
      %running_mean.15 : Tensor = prim::GetAttr[name="running_mean"](%norm.8)
      %1934 : Tensor = aten::mul(%running_mean.15, %scale.19) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:49:31
      %bias.41 : Tensor = aten::sub(%bias.39, %1934, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:49:19
      %1936 : int[] = prim::ListConstruct(%43, %51, %43, %43)
      %scale.21 : Tensor = aten::reshape(%scale.19, %1936) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:50:20
      %1938 : int[] = prim::ListConstruct(%43, %51, %43, %43)
      %bias.43 : Tensor = aten::reshape(%bias.41, %1938) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:51:19
      %out_dtype.9 : int = prim::dtype(%x.57)
      %1941 : Tensor = aten::to(%scale.21, %out_dtype.9, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:23
      %1942 : Tensor = aten::mul(%x.57, %1941) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:19
      %1943 : Tensor = aten::to(%bias.43, %out_dtype.9, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:45
      %1944 : Tensor = aten::add(%1942, %1943, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:19
      -> (%1944)
    block1():
      %running_mean.17 : Tensor = prim::GetAttr[name="running_mean"](%norm.8)
      %running_var.17 : Tensor = prim::GetAttr[name="running_var"](%norm.8)
      %weight.26 : Tensor = prim::GetAttr[name="weight"](%norm.8)
      %bias.45 : Tensor = prim::GetAttr[name="bias"](%norm.8)
      %eps.17 : float = prim::GetAttr[name="eps"](%norm.8)
      %1950 : Tensor = aten::batch_norm(%x.57, %weight.26, %bias.45, %running_mean.17, %running_var.17, %44, %37, %eps.17, %55) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:2421:11
      -> (%1950)
  %out.26 : Tensor = aten::relu_(%out.24) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\resnet.py:196:14
  %conv2.3 : __torch__.detectron2.layers.wrappers.___torch_mangle_374.Conv2d = prim::GetAttr[name="conv2"](%_1.2)
  %weight.28 : Tensor = prim::GetAttr[name="weight"](%conv2.3)
  %bias.47 : Tensor? = prim::GetAttr[name="bias"](%conv2.3)
  %1955 : int[] = prim::ListConstruct(%43, %43)
  %1956 : int[] = prim::ListConstruct(%43, %43)
  %1957 : int[] = prim::ListConstruct(%43, %43)
  %x.15 : Tensor = aten::conv2d(%out.26, %weight.28, %bias.47, %1955, %1956, %1957, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:106:12
  %norm.10 : __torch__.detectron2.layers.batch_norm.___torch_mangle_346.FrozenBatchNorm2d = prim::GetAttr[name="norm"](%conv2.3)
  %1960 : bool = prim::requires_grad(%x.15)
  %out.28 : Tensor = prim::If(%1960) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:45:8
    block0():
      %weight.30 : Tensor = prim::GetAttr[name="weight"](%norm.10)
      %running_var.19 : Tensor = prim::GetAttr[name="running_var"](%norm.10)
      %eps.19 : float = prim::GetAttr[name="eps"](%norm.10)
      %1965 : Tensor = aten::add(%running_var.19, %eps.19, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:35
      %1966 : Tensor = aten::rsqrt(%1965) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:35
      %scale.23 : Tensor = aten::mul(%weight.30, %1966) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:20
      %bias.49 : Tensor = prim::GetAttr[name="bias"](%norm.10)
      %running_mean.19 : Tensor = prim::GetAttr[name="running_mean"](%norm.10)
      %1970 : Tensor = aten::mul(%running_mean.19, %scale.23) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:49:31
      %bias.51 : Tensor = aten::sub(%bias.49, %1970, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:49:19
      %1972 : int[] = prim::ListConstruct(%43, %51, %43, %43)
      %scale.25 : Tensor = aten::reshape(%scale.23, %1972) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:50:20
      %1974 : int[] = prim::ListConstruct(%43, %51, %43, %43)
      %bias.53 : Tensor = aten::reshape(%bias.51, %1974) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:51:19
      %out_dtype.11 : int = prim::dtype(%x.15)
      %1977 : Tensor = aten::to(%scale.25, %out_dtype.11, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:23
      %1978 : Tensor = aten::mul(%x.15, %1977) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:19
      %1979 : Tensor = aten::to(%bias.53, %out_dtype.11, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:45
      %1980 : Tensor = aten::add(%1978, %1979, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:19
      -> (%1980)
    block1():
      %running_mean.21 : Tensor = prim::GetAttr[name="running_mean"](%norm.10)
      %running_var.21 : Tensor = prim::GetAttr[name="running_var"](%norm.10)
      %weight.32 : Tensor = prim::GetAttr[name="weight"](%norm.10)
      %bias.55 : Tensor = prim::GetAttr[name="bias"](%norm.10)
      %eps.21 : float = prim::GetAttr[name="eps"](%norm.10)
      %1986 : Tensor = aten::batch_norm(%x.15, %weight.32, %bias.55, %running_mean.21, %running_var.21, %44, %37, %eps.21, %55) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:2421:11
      -> (%1986)
  %out.30 : Tensor = aten::relu_(%out.28) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\resnet.py:199:14
  %conv3.3 : __torch__.detectron2.layers.wrappers.___torch_mangle_375.Conv2d = prim::GetAttr[name="conv3"](%_1.2)
  %weight.34 : Tensor = prim::GetAttr[name="weight"](%conv3.3)
  %bias.57 : Tensor? = prim::GetAttr[name="bias"](%conv3.3)
  %1991 : int[] = prim::ListConstruct(%43, %43)
  %1992 : int[] = prim::ListConstruct(%48, %48)
  %1993 : int[] = prim::ListConstruct(%43, %43)
  %x.59 : Tensor = aten::conv2d(%out.30, %weight.34, %bias.57, %1991, %1992, %1993, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:106:12
  %norm.12 : __torch__.detectron2.layers.batch_norm.___torch_mangle_346.FrozenBatchNorm2d = prim::GetAttr[name="norm"](%conv3.3)
  %1996 : bool = prim::requires_grad(%x.59)
  %out.32 : Tensor = prim::If(%1996) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:45:8
    block0():
      %weight.36 : Tensor = prim::GetAttr[name="weight"](%norm.12)
      %running_var.23 : Tensor = prim::GetAttr[name="running_var"](%norm.12)
      %eps.23 : float = prim::GetAttr[name="eps"](%norm.12)
      %2001 : Tensor = aten::add(%running_var.23, %eps.23, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:35
      %2002 : Tensor = aten::rsqrt(%2001) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:35
      %scale.27 : Tensor = aten::mul(%weight.36, %2002) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:20
      %bias.59 : Tensor = prim::GetAttr[name="bias"](%norm.12)
      %running_mean.23 : Tensor = prim::GetAttr[name="running_mean"](%norm.12)
      %2006 : Tensor = aten::mul(%running_mean.23, %scale.27) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:49:31
      %bias.61 : Tensor = aten::sub(%bias.59, %2006, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:49:19
      %2008 : int[] = prim::ListConstruct(%43, %51, %43, %43)
      %scale.29 : Tensor = aten::reshape(%scale.27, %2008) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:50:20
      %2010 : int[] = prim::ListConstruct(%43, %51, %43, %43)
      %bias.63 : Tensor = aten::reshape(%bias.61, %2010) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:51:19
      %out_dtype.13 : int = prim::dtype(%x.59)
      %2013 : Tensor = aten::to(%scale.29, %out_dtype.13, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:23
      %2014 : Tensor = aten::mul(%x.59, %2013) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:19
      %2015 : Tensor = aten::to(%bias.63, %out_dtype.13, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:45
      %2016 : Tensor = aten::add(%2014, %2015, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:19
      -> (%2016)
    block1():
      %running_mean.25 : Tensor = prim::GetAttr[name="running_mean"](%norm.12)
      %running_var.25 : Tensor = prim::GetAttr[name="running_var"](%norm.12)
      %weight.38 : Tensor = prim::GetAttr[name="weight"](%norm.12)
      %bias.65 : Tensor = prim::GetAttr[name="bias"](%norm.12)
      %eps.25 : float = prim::GetAttr[name="eps"](%norm.12)
      %2022 : Tensor = aten::batch_norm(%x.59, %weight.38, %bias.65, %running_mean.25, %running_var.25, %44, %37, %eps.25, %55) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:2421:11
      -> (%2022)
  %out.34 : Tensor = aten::add_(%out.32, %input.5, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\resnet.py:208:8
  %input.9 : Tensor = aten::relu_(%out.34) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\resnet.py:209:14
  %conv1 : __torch__.detectron2.layers.wrappers.___torch_mangle_377.Conv2d = prim::GetAttr[name="conv1"](%_2.2)
  %weight.112 : Tensor = prim::GetAttr[name="weight"](%conv1)
  %bias.181 : Tensor? = prim::GetAttr[name="bias"](%conv1)
  %2028 : int[] = prim::ListConstruct(%43, %43)
  %2029 : int[] = prim::ListConstruct(%48, %48)
  %2030 : int[] = prim::ListConstruct(%43, %43)
  %x.51 : Tensor = aten::conv2d(%input.9, %weight.112, %bias.181, %2028, %2029, %2030, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:106:12
  %norm.1 : __torch__.detectron2.layers.batch_norm.___torch_mangle_346.FrozenBatchNorm2d = prim::GetAttr[name="norm"](%conv1)
  %2033 : bool = prim::requires_grad(%x.51)
  %out.1 : Tensor = prim::If(%2033) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:45:8
    block0():
      %weight.5 : Tensor = prim::GetAttr[name="weight"](%norm.1)
      %running_var.2 : Tensor = prim::GetAttr[name="running_var"](%norm.1)
      %eps.2 : float = prim::GetAttr[name="eps"](%norm.1)
      %2038 : Tensor = aten::add(%running_var.2, %eps.2, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:35
      %2039 : Tensor = aten::rsqrt(%2038) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:35
      %scale.2 : Tensor = aten::mul(%weight.5, %2039) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:20
      %bias.6 : Tensor = prim::GetAttr[name="bias"](%norm.1)
      %running_mean.2 : Tensor = prim::GetAttr[name="running_mean"](%norm.1)
      %2043 : Tensor = aten::mul(%running_mean.2, %scale.2) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:49:31
      %bias.8 : Tensor = aten::sub(%bias.6, %2043, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:49:19
      %2045 : int[] = prim::ListConstruct(%43, %51, %43, %43)
      %scale.8 : Tensor = aten::reshape(%scale.2, %2045) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:50:20
      %2047 : int[] = prim::ListConstruct(%43, %51, %43, %43)
      %bias.10 : Tensor = aten::reshape(%bias.8, %2047) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:51:19
      %out_dtype.2 : int = prim::dtype(%x.51)
      %2050 : Tensor = aten::to(%scale.8, %out_dtype.2, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:23
      %2051 : Tensor = aten::mul(%x.51, %2050) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:19
      %2052 : Tensor = aten::to(%bias.10, %out_dtype.2, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:45
      %2053 : Tensor = aten::add(%2051, %2052, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:19
      -> (%2053)
    block1():
      %running_mean.4 : Tensor = prim::GetAttr[name="running_mean"](%norm.1)
      %running_var.4 : Tensor = prim::GetAttr[name="running_var"](%norm.1)
      %weight.7 : Tensor = prim::GetAttr[name="weight"](%norm.1)
      %bias.12 : Tensor = prim::GetAttr[name="bias"](%norm.1)
      %eps.4 : float = prim::GetAttr[name="eps"](%norm.1)
      %2059 : Tensor = aten::batch_norm(%x.51, %weight.7, %bias.12, %running_mean.4, %running_var.4, %44, %37, %eps.4, %55) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:2421:11
      -> (%2059)
  %out.5 : Tensor = aten::relu_(%out.1) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\resnet.py:196:14
  %conv2 : __torch__.detectron2.layers.wrappers.___torch_mangle_374.Conv2d = prim::GetAttr[name="conv2"](%_2.2)
  %weight.9 : Tensor = prim::GetAttr[name="weight"](%conv2)
  %bias.14 : Tensor? = prim::GetAttr[name="bias"](%conv2)
  %2064 : int[] = prim::ListConstruct(%43, %43)
  %2065 : int[] = prim::ListConstruct(%43, %43)
  %2066 : int[] = prim::ListConstruct(%43, %43)
  %x.47 : Tensor = aten::conv2d(%out.5, %weight.9, %bias.14, %2064, %2065, %2066, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:106:12
  %norm.3 : __torch__.detectron2.layers.batch_norm.___torch_mangle_346.FrozenBatchNorm2d = prim::GetAttr[name="norm"](%conv2)
  %2069 : bool = prim::requires_grad(%x.47)
  %out.9 : Tensor = prim::If(%2069) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:45:8
    block0():
      %weight.11 : Tensor = prim::GetAttr[name="weight"](%norm.3)
      %running_var.6 : Tensor = prim::GetAttr[name="running_var"](%norm.3)
      %eps.6 : float = prim::GetAttr[name="eps"](%norm.3)
      %2074 : Tensor = aten::add(%running_var.6, %eps.6, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:35
      %2075 : Tensor = aten::rsqrt(%2074) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:35
      %scale.10 : Tensor = aten::mul(%weight.11, %2075) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:20
      %bias.16 : Tensor = prim::GetAttr[name="bias"](%norm.3)
      %running_mean.6 : Tensor = prim::GetAttr[name="running_mean"](%norm.3)
      %2079 : Tensor = aten::mul(%running_mean.6, %scale.10) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:49:31
      %bias.18 : Tensor = aten::sub(%bias.16, %2079, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:49:19
      %2081 : int[] = prim::ListConstruct(%43, %51, %43, %43)
      %scale.12 : Tensor = aten::reshape(%scale.10, %2081) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:50:20
      %2083 : int[] = prim::ListConstruct(%43, %51, %43, %43)
      %bias.20 : Tensor = aten::reshape(%bias.18, %2083) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:51:19
      %out_dtype.4 : int = prim::dtype(%x.47)
      %2086 : Tensor = aten::to(%scale.12, %out_dtype.4, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:23
      %2087 : Tensor = aten::mul(%x.47, %2086) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:19
      %2088 : Tensor = aten::to(%bias.20, %out_dtype.4, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:45
      %2089 : Tensor = aten::add(%2087, %2088, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:19
      -> (%2089)
    block1():
      %running_mean.8 : Tensor = prim::GetAttr[name="running_mean"](%norm.3)
      %running_var.8 : Tensor = prim::GetAttr[name="running_var"](%norm.3)
      %weight.13 : Tensor = prim::GetAttr[name="weight"](%norm.3)
      %bias.22 : Tensor = prim::GetAttr[name="bias"](%norm.3)
      %eps.8 : float = prim::GetAttr[name="eps"](%norm.3)
      %2095 : Tensor = aten::batch_norm(%x.47, %weight.13, %bias.22, %running_mean.8, %running_var.8, %44, %37, %eps.8, %55) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:2421:11
      -> (%2095)
  %out.13 : Tensor = aten::relu_(%out.9) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\resnet.py:199:14
  %conv3 : __torch__.detectron2.layers.wrappers.___torch_mangle_375.Conv2d = prim::GetAttr[name="conv3"](%_2.2)
  %weight.116 : Tensor = prim::GetAttr[name="weight"](%conv3)
  %bias.179 : Tensor? = prim::GetAttr[name="bias"](%conv3)
  %2100 : int[] = prim::ListConstruct(%43, %43)
  %2101 : int[] = prim::ListConstruct(%48, %48)
  %2102 : int[] = prim::ListConstruct(%43, %43)
  %x.53 : Tensor = aten::conv2d(%out.13, %weight.116, %bias.179, %2100, %2101, %2102, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:106:12
  %norm : __torch__.detectron2.layers.batch_norm.___torch_mangle_346.FrozenBatchNorm2d = prim::GetAttr[name="norm"](%conv3)
  %2105 : bool = prim::requires_grad(%x.53)
  %out.17 : Tensor = prim::If(%2105) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:45:8
    block0():
      %weight.110 : Tensor = prim::GetAttr[name="weight"](%norm)
      %running_var.1 : Tensor = prim::GetAttr[name="running_var"](%norm)
      %eps.1 : float = prim::GetAttr[name="eps"](%norm)
      %2110 : Tensor = aten::add(%running_var.1, %eps.1, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:35
      %2111 : Tensor = aten::rsqrt(%2110) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:35
      %scale.1 : Tensor = aten::mul(%weight.110, %2111) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:48:20
      %bias.173 : Tensor = prim::GetAttr[name="bias"](%norm)
      %running_mean.1 : Tensor = prim::GetAttr[name="running_mean"](%norm)
      %2115 : Tensor = aten::mul(%running_mean.1, %scale.1) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:49:31
      %bias.175 : Tensor = aten::sub(%bias.173, %2115, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:49:19
      %2117 : int[] = prim::ListConstruct(%43, %51, %43, %43)
      %scale.7 : Tensor = aten::reshape(%scale.1, %2117) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:50:20
      %2119 : int[] = prim::ListConstruct(%43, %51, %43, %43)
      %bias.7 : Tensor = aten::reshape(%bias.175, %2119) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:51:19
      %out_dtype.1 : int = prim::dtype(%x.53)
      %2122 : Tensor = aten::to(%scale.7, %out_dtype.1, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:23
      %2123 : Tensor = aten::mul(%x.53, %2122) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:19
      %2124 : Tensor = aten::to(%bias.7, %out_dtype.1, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:45
      %2125 : Tensor = aten::add(%2123, %2124, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\batch_norm.py:53:19
      -> (%2125)
    block1():
      %running_mean : Tensor = prim::GetAttr[name="running_mean"](%norm)
      %running_var : Tensor = prim::GetAttr[name="running_var"](%norm)
      %weight.94 : Tensor = prim::GetAttr[name="weight"](%norm)
      %bias.157 : Tensor = prim::GetAttr[name="bias"](%norm)
      %eps : float = prim::GetAttr[name="eps"](%norm)
      %2131 : Tensor = aten::batch_norm(%x.53, %weight.94, %bias.157, %running_mean, %running_var, %44, %37, %eps, %55) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:2421:11
      -> (%2131)
  %out.21 : Tensor = aten::add_(%out.17, %input.9, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\resnet.py:208:8
  %x.74 : Tensor = aten::relu_(%out.21) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\resnet.py:209:14
  %_out_features : str[] = prim::GetAttr[name="_out_features"](%bottom_up)
  %2135 : bool = aten::__contains__(%_out_features, %name.19) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\resnet.py:450:15
   = prim::If(%2135) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\resnet.py:450:12
    block0():
       = aten::_set_item(%bottom_up_features.1, %name.19, %x.74) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\resnet.py:451:16
      -> ()
    block1():
      -> ()
  %results.1 : Tensor[] = prim::ListConstruct()
  %lateral_convs.1 : __torch__.torch.nn.modules.container.___torch_mangle_386.ModuleList = prim::GetAttr[name="lateral_convs"](%backbone.1)
  %_0.2 : __torch__.detectron2.layers.wrappers.___torch_mangle_382.Conv2d = prim::GetAttr[name="0"](%lateral_convs.1)
  %in_features.1 : (str, str, str, str) = prim::GetAttr[name="in_features"](%backbone.1)
  %2140 : str = prim::TupleIndex(%in_features.1, %51)
  %2141 : Tensor = aten::__getitem__(%bottom_up_features.1, %2140) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\fpn.py:128:46
  %weight.96 : Tensor = prim::GetAttr[name="weight"](%_0.2)
  %bias.159 : Tensor? = prim::GetAttr[name="bias"](%_0.2)
  %2144 : int[] = prim::ListConstruct(%43, %43)
  %2145 : int[] = prim::ListConstruct(%48, %48)
  %2146 : int[] = prim::ListConstruct(%43, %43)
  %prev_features.1 : Tensor = aten::conv2d(%2141, %weight.96, %bias.159, %2144, %2145, %2146, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:106:12
  %output_convs.1 : __torch__.torch.nn.modules.container.___torch_mangle_388.ModuleList = prim::GetAttr[name="output_convs"](%backbone.1)
  %_0.4 : __torch__.detectron2.layers.wrappers.___torch_mangle_387.Conv2d = prim::GetAttr[name="0"](%output_convs.1)
  %weight.98 : Tensor = prim::GetAttr[name="weight"](%_0.4)
  %bias.161 : Tensor? = prim::GetAttr[name="bias"](%_0.4)
  %2152 : int[] = prim::ListConstruct(%43, %43)
  %2153 : int[] = prim::ListConstruct(%43, %43)
  %2154 : int[] = prim::ListConstruct(%43, %43)
  %x.14 : Tensor = aten::conv2d(%prev_features.1, %weight.98, %bias.161, %2152, %2153, %2154, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:106:12
  %2156 : Tensor[] = aten::append(%results.1, %x.14) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\fpn.py:129:8
  %lateral_convs : __torch__.torch.nn.modules.container.___torch_mangle_386.ModuleList = prim::GetAttr[name="lateral_convs"](%backbone.1)
  %_1.6 : __torch__.detectron2.layers.wrappers.___torch_mangle_383.Conv2d = prim::GetAttr[name="1"](%lateral_convs)
  %_2.6 : __torch__.detectron2.layers.wrappers.___torch_mangle_384.Conv2d = prim::GetAttr[name="2"](%lateral_convs)
  %_3.5 : __torch__.detectron2.layers.wrappers.___torch_mangle_385.Conv2d = prim::GetAttr[name="3"](%lateral_convs)
  %output_convs : __torch__.torch.nn.modules.container.___torch_mangle_388.ModuleList = prim::GetAttr[name="output_convs"](%backbone.1)
  %_1.8 : __torch__.detectron2.layers.wrappers.___torch_mangle_387.Conv2d = prim::GetAttr[name="1"](%output_convs)
  %_2.8 : __torch__.detectron2.layers.wrappers.___torch_mangle_387.Conv2d = prim::GetAttr[name="2"](%output_convs)
  %_3.2 : __torch__.detectron2.layers.wrappers.___torch_mangle_387.Conv2d = prim::GetAttr[name="3"](%output_convs)
  %in_features.5 : (str, str, str, str) = prim::GetAttr[name="in_features"](%backbone.1)
  %features.9 : str = prim::TupleIndex(%in_features.5, %50)
  %features.13 : Tensor = aten::__getitem__(%bottom_up_features.1, %features.9) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\fpn.py:139:27
  %scale_factors.80 : float[] = prim::ListConstruct()
   = prim::Loop(%46, %55) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:3859:28
    block0(%2169 : int):
      %2170 : float[] = aten::append(%scale_factors.80, %35) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:3859:28
      -> (%55)
  %2171 : Tensor = aten::upsample_nearest2d(%prev_features.1, %54, %scale_factors.80) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:3891:15
  %weight.100 : Tensor = prim::GetAttr[name="weight"](%_1.6)
  %bias.163 : Tensor? = prim::GetAttr[name="bias"](%_1.6)
  %2174 : int[] = prim::ListConstruct(%43, %43)
  %2175 : int[] = prim::ListConstruct(%48, %48)
  %2176 : int[] = prim::ListConstruct(%43, %43)
  %lateral_features.5 : Tensor = aten::conv2d(%features.13, %weight.100, %bias.163, %2174, %2175, %2176, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:106:12
  %prev_features.37 : Tensor = aten::add(%lateral_features.5, %2171, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\fpn.py:142:32
  %weight.102 : Tensor = prim::GetAttr[name="weight"](%_1.8)
  %bias.165 : Tensor? = prim::GetAttr[name="bias"](%_1.8)
  %2181 : int[] = prim::ListConstruct(%43, %43)
  %2182 : int[] = prim::ListConstruct(%43, %43)
  %2183 : int[] = prim::ListConstruct(%43, %43)
  %x.26 : Tensor = aten::conv2d(%prev_features.37, %weight.102, %bias.165, %2181, %2182, %2183, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:106:12
   = aten::insert(%results.1, %48, %x.26) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\fpn.py:145:16
  %in_features.7 : (str, str, str, str) = prim::GetAttr[name="in_features"](%backbone.1)
  %features.17 : str = prim::TupleIndex(%in_features.7, %33)
  %features.21 : Tensor = aten::__getitem__(%bottom_up_features.1, %features.17) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\fpn.py:139:27
  %2188 : Tensor = prim::Uninitialized()
  %2189 : int = aten::dim(%prev_features.37) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:3822:10
  %dim.4 : int = aten::sub(%2189, %46) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:3822:10
  %scale_factors.94 : float[] = prim::ListConstruct()
   = prim::Loop(%dim.4, %55) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:3859:28
    block0(%2192 : int):
      %2193 : float[] = aten::append(%scale_factors.94, %35) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:3859:28
      -> (%55)
  %2194 : int = aten::dim(%prev_features.37) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:3888:7
  %2195 : bool = aten::eq(%2194, %36) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:3888:7
  %top_down_features.9 : Tensor = prim::If(%2195) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:3888:4
    block0():
      %2197 : Tensor = aten::upsample_nearest1d(%prev_features.37, %54, %scale_factors.94) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:3889:15
      -> (%2197)
    block1():
      %2198 : int = aten::dim(%prev_features.37) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:3890:7
      %2199 : bool = aten::eq(%2198, %53) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:3890:7
      %2200 : Tensor = prim::If(%2199) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:3890:4
        block0():
          %2201 : Tensor = aten::upsample_nearest2d(%prev_features.37, %54, %scale_factors.94) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:3891:15
          -> (%2201)
        block1():
          %2202 : int = aten::dim(%prev_features.37) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:3892:7
          %2203 : bool = aten::eq(%2202, %40) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:3892:7
          %2204 : Tensor = prim::If(%2203) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:3892:4
            block0():
              %2205 : Tensor = aten::upsample_nearest3d(%prev_features.37, %54, %scale_factors.94) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:3893:15
              -> (%2205)
            block1():
              %2206 : int = aten::dim(%prev_features.37) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:3945:27
              %2207 : str = aten::format(%41, %2206, %34) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:3943:8
               = prim::RaiseException(%2207, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:3942:4
              -> (%2188)
          -> (%2204)
      -> (%2200)
  %weight.104 : Tensor = prim::GetAttr[name="weight"](%_2.6)
  %bias.167 : Tensor? = prim::GetAttr[name="bias"](%_2.6)
  %2210 : int[] = prim::ListConstruct(%43, %43)
  %2211 : int[] = prim::ListConstruct(%48, %48)
  %2212 : int[] = prim::ListConstruct(%43, %43)
  %lateral_features.9 : Tensor = aten::conv2d(%features.21, %weight.104, %bias.167, %2210, %2211, %2212, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:106:12
  %prev_features.67 : Tensor = aten::add(%lateral_features.9, %top_down_features.9, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\fpn.py:142:32
  %weight.106 : Tensor = prim::GetAttr[name="weight"](%_2.8)
  %bias.169 : Tensor? = prim::GetAttr[name="bias"](%_2.8)
  %2217 : int[] = prim::ListConstruct(%43, %43)
  %2218 : int[] = prim::ListConstruct(%43, %43)
  %2219 : int[] = prim::ListConstruct(%43, %43)
  %x.37 : Tensor = aten::conv2d(%prev_features.67, %weight.106, %bias.169, %2217, %2218, %2219, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:106:12
   = aten::insert(%results.1, %48, %x.37) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\fpn.py:145:16
  %in_features.2 : (str, str, str, str) = prim::GetAttr[name="in_features"](%backbone.1)
  %features.25 : str = prim::TupleIndex(%in_features.2, %32)
  %features.29 : Tensor = aten::__getitem__(%bottom_up_features.1, %features.25) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\fpn.py:139:27
  %2224 : Tensor = prim::Uninitialized()
  %2225 : int = aten::dim(%prev_features.67) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:3822:10
  %dim.1 : int = aten::sub(%2225, %46) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:3822:10
  %scale_factors.3 : float[] = prim::ListConstruct()
   = prim::Loop(%dim.1, %55) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:3859:28
    block0(%2228 : int):
      %2229 : float[] = aten::append(%scale_factors.3, %35) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:3859:28
      -> (%55)
  %2230 : int = aten::dim(%prev_features.67) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:3888:7
  %2231 : bool = aten::eq(%2230, %36) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:3888:7
  %top_down_features.13 : Tensor = prim::If(%2231) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:3888:4
    block0():
      %2233 : Tensor = aten::upsample_nearest1d(%prev_features.67, %54, %scale_factors.3) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:3889:15
      -> (%2233)
    block1():
      %2234 : int = aten::dim(%prev_features.67) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:3890:7
      %2235 : bool = aten::eq(%2234, %53) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:3890:7
      %2236 : Tensor = prim::If(%2235) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:3890:4
        block0():
          %2237 : Tensor = aten::upsample_nearest2d(%prev_features.67, %54, %scale_factors.3) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:3891:15
          -> (%2237)
        block1():
          %2238 : int = aten::dim(%prev_features.67) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:3892:7
          %2239 : bool = aten::eq(%2238, %40) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:3892:7
          %2240 : Tensor = prim::If(%2239) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:3892:4
            block0():
              %2241 : Tensor = aten::upsample_nearest3d(%prev_features.67, %54, %scale_factors.3) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:3893:15
              -> (%2241)
            block1():
              %2242 : int = aten::dim(%prev_features.67) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:3945:27
              %2243 : str = aten::format(%41, %2242, %34) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:3943:8
               = prim::RaiseException(%2243, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:3942:4
              -> (%2224)
          -> (%2240)
      -> (%2236)
  %weight.108 : Tensor = prim::GetAttr[name="weight"](%_3.5)
  %bias.171 : Tensor? = prim::GetAttr[name="bias"](%_3.5)
  %2246 : int[] = prim::ListConstruct(%43, %43)
  %2247 : int[] = prim::ListConstruct(%48, %48)
  %2248 : int[] = prim::ListConstruct(%43, %43)
  %lateral_features.13 : Tensor = aten::conv2d(%features.29, %weight.108, %bias.171, %2246, %2247, %2248, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:106:12
  %prev_features.97 : Tensor = aten::add(%lateral_features.13, %top_down_features.13, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\fpn.py:142:32
  %weight.114 : Tensor = prim::GetAttr[name="weight"](%_3.2)
  %bias.177 : Tensor? = prim::GetAttr[name="bias"](%_3.2)
  %2253 : int[] = prim::ListConstruct(%43, %43)
  %2254 : int[] = prim::ListConstruct(%43, %43)
  %2255 : int[] = prim::ListConstruct(%43, %43)
  %x.43 : Tensor = aten::conv2d(%prev_features.97, %weight.114, %bias.177, %2253, %2254, %2255, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:106:12
   = aten::insert(%results.1, %48, %x.43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\fpn.py:145:16
  %top_block.3 : __torch__.detectron2.modeling.backbone.fpn.___torch_mangle_345.LastLevelMaxPool = prim::GetAttr[name="top_block"](%backbone.1)
  %in_feature.1 : str = prim::GetAttr[name="in_feature"](%top_block.3)
  %2259 : bool = aten::__contains__(%bottom_up_features.1, %in_feature.1) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\fpn.py:148:15
  %top_block_in_feature : Tensor = prim::If(%2259) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\fpn.py:148:12
    block0():
      %top_block.5 : __torch__.detectron2.modeling.backbone.fpn.___torch_mangle_345.LastLevelMaxPool = prim::GetAttr[name="top_block"](%backbone.1)
      %in_feature.3 : str = prim::GetAttr[name="in_feature"](%top_block.5)
      %top_block_in_feature.1 : Tensor = aten::__getitem__(%bottom_up_features.1, %in_feature.3) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\fpn.py:149:39
      -> (%top_block_in_feature.1)
    block1():
      %_out_features.2 : str[] = prim::GetAttr[name="_out_features"](%backbone.1)
      %top_block.7 : __torch__.detectron2.modeling.backbone.fpn.___torch_mangle_345.LastLevelMaxPool = prim::GetAttr[name="top_block"](%backbone.1)
      %in_feature : str = prim::GetAttr[name="in_feature"](%top_block.7)
      %2267 : int = aten::index(%_out_features.2, %in_feature) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\fpn.py:151:47
      %top_block_in_feature.3 : Tensor = aten::__getitem__(%results.1, %2267) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\fpn.py:151:39
      -> (%top_block_in_feature.3)
  %2269 : int[] = prim::ListConstruct(%43, %43)
  %2270 : int[] = prim::ListConstruct(%46, %46)
  %2271 : int[] = prim::ListConstruct(%48, %48)
  %2272 : int[] = prim::ListConstruct(%43, %43)
  %2273 : Tensor = aten::max_pool2d(%top_block_in_feature, %2269, %2270, %2271, %2272, %44) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:797:11
  %2274 : Tensor[] = prim::ListConstruct(%2273)
   = aten::extend(%results.1, %2274) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\fpn.py:152:12
  %_out_features.4 : str[] = prim::GetAttr[name="_out_features"](%backbone.1)
  %2276 : int = aten::len(%_out_features.4) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\fpn.py:153:15
  %2277 : int = aten::len(%results.1) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\fpn.py:153:42
  %2278 : bool = aten::eq(%2276, %2277) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\fpn.py:153:15
   = prim::If(%2278) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\fpn.py:153:8
    block0():
      -> ()
    block1():
       = prim::RaiseException(%49, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\fpn.py:153:8
      -> ()
  %features.1 : Dict(str, Tensor) = prim::DictConstruct()
  %_out_features.6 : str[] = prim::GetAttr[name="_out_features"](%backbone.1)
  %2281 : int = aten::len(%_out_features.6) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\fpn.py:154:15
  %2282 : int = aten::len(%results.1) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\fpn.py:154:15
  %2283 : int[] = prim::ListConstruct(%2281, %2282)
  %2284 : int = prim::min(%2283) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\fpn.py:154:15
   = prim::Loop(%2284, %55) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\fpn.py:154:15
    block0(%2285 : int):
      %f.2 : str = aten::__getitem__(%_out_features.6, %2285) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\fpn.py:154:15
      %res.2 : Tensor = aten::__getitem__(%results.1, %2285) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\fpn.py:154:15
       = aten::_set_item(%features.1, %f.2, %res.2) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\backbone\fpn.py:154:15
      -> (%55)
  %2288 : bool = aten::__is__(%3, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\meta_arch\rcnn.py:202:11
  %results : __torch__.detectron2.export.torchscript_patch11.ScriptedInstances11[] = prim::If(%2288) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\meta_arch\rcnn.py:202:8
    block0():
      %proposal_generator : __torch__.detectron2.modeling.proposal_generator.rpn.___torch_mangle_397.RPN = prim::GetAttr[name="proposal_generator"](%model)
      %features.6 : Tensor[] = prim::ListConstruct()
      %in_features : str[] = prim::GetAttr[name="in_features"](%proposal_generator)
      %2293 : int = aten::len(%in_features) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\proposal_generator\rpn.py:451:19
       = prim::Loop(%2293, %55) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\proposal_generator\rpn.py:451:19
        block0(%2294 : int):
          %f.4 : str = aten::__getitem__(%in_features, %2294) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\proposal_generator\rpn.py:451:19
          %2296 : Tensor = aten::__getitem__(%features.1, %f.4) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\proposal_generator\rpn.py:451:20
          %2297 : Tensor[] = aten::append(%features.6, %2296) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\proposal_generator\rpn.py:451:19
          -> (%55)
      %anchor_generator.1 : __torch__.detectron2.modeling.anchor_generator.___torch_mangle_396.DefaultAnchorGenerator = prim::GetAttr[name="anchor_generator"](%proposal_generator)
      %grid_sizes.1 : int[][] = prim::ListConstruct()
      %2300 : int = aten::len(%features.6) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\anchor_generator.py:225:21
       = prim::Loop(%2300, %55) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\anchor_generator.py:225:21
        block0(%2301 : int):
          %feature_map.1 : Tensor = aten::__getitem__(%features.6, %2301) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\anchor_generator.py:225:21
          %2303 : int[] = aten::size(%feature_map.1) # <string>:13:9
          %2304 : int[] = aten::slice(%2303, %50, %54, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\anchor_generator.py:225:22
          %2305 : int[][] = aten::append(%grid_sizes.1, %2304) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\anchor_generator.py:225:21
          -> (%55)
      %anchors_over_all_feature_maps.1 : Tensor[] = prim::ListConstruct()
      %buffers.1 : Tensor[] = prim::ListConstruct()
      %cell_anchors : __torch__.detectron2.modeling.anchor_generator.___torch_mangle_395.BufferList = prim::GetAttr[name="cell_anchors"](%anchor_generator.1)
      %_0 : Tensor = prim::GetAttr[name="0"](%cell_anchors)
      %_1 : Tensor = prim::GetAttr[name="1"](%cell_anchors)
      %_2 : Tensor = prim::GetAttr[name="2"](%cell_anchors)
      %_3 : Tensor = prim::GetAttr[name="3"](%cell_anchors)
      %_4 : Tensor = prim::GetAttr[name="4"](%cell_anchors)
      %2314 : Tensor[] = aten::append(%buffers.1, %_0) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\anchor_generator.py:168:38
      %2315 : Tensor[] = aten::append(%buffers.1, %_1) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\anchor_generator.py:168:38
      %2316 : Tensor[] = aten::append(%buffers.1, %_2) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\anchor_generator.py:168:38
      %2317 : Tensor[] = aten::append(%buffers.1, %_3) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\anchor_generator.py:168:38
      %2318 : Tensor[] = aten::append(%buffers.1, %_4) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\anchor_generator.py:168:38
      %strides : int[] = prim::GetAttr[name="strides"](%anchor_generator.1)
      %2320 : int = aten::len(%grid_sizes.1) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\anchor_generator.py:169:8
      %2321 : int = aten::len(%strides) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\anchor_generator.py:169:8
      %2322 : int = aten::len(%buffers.1) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\anchor_generator.py:169:8
      %2323 : int[] = prim::ListConstruct(%2320, %2321, %2322)
      %2324 : int = prim::min(%2323) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\anchor_generator.py:169:8
       = prim::Loop(%2324, %55) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\anchor_generator.py:169:8
        block0(%2325 : int):
          %size.1 : int[] = aten::__getitem__(%grid_sizes.1, %2325) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\anchor_generator.py:169:8
          %stride.1 : int = aten::__getitem__(%strides, %2325) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\anchor_generator.py:169:8
          %base_anchors.1 : Tensor = aten::__getitem__(%buffers.1, %2325) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\anchor_generator.py:169:8
          %offset : float = prim::GetAttr[name="offset"](%anchor_generator.1)
          %2330 : Device = prim::device(%base_anchors.1)
          %grid_height.1 : int, %grid_width.1 : int = prim::ListUnpack(%size.1)
          %2333 : float = aten::mul(%offset, %stride.1) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\anchor_generator.py:42:8
          %2334 : int = aten::mul(%grid_width.1, %stride.1) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\anchor_generator.py:42:25
          %shifts_x.1 : Tensor = aten::arange(%2333, %2334, %stride.1, %22, %54, %2330, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\anchor_generator.py:41:15
          %2336 : float = aten::mul(%offset, %stride.1) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\anchor_generator.py:45:8
          %2337 : int = aten::mul(%grid_height.1, %stride.1) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\anchor_generator.py:45:25
          %shifts_y.1 : Tensor = aten::arange(%2336, %2337, %stride.1, %22, %54, %2330, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\anchor_generator.py:44:15
          %2339 : Tensor[] = prim::ListConstruct(%shifts_y.1, %shifts_x.1)
          %2340 : Tensor[] = aten::meshgrid(%2339) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\anchor_generator.py:48:23
          %shift_y.1 : Tensor, %shift_x.1 : Tensor = prim::ListUnpack(%2340)
          %2343 : int[] = prim::ListConstruct(%51)
          %shift_x.5 : Tensor = aten::reshape(%shift_x.1, %2343) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\anchor_generator.py:49:14
          %2345 : int[] = prim::ListConstruct(%51)
          %shift_y.5 : Tensor = aten::reshape(%shift_y.1, %2345) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\anchor_generator.py:50:14
          %2347 : (Tensor, Tensor) = prim::TupleConstruct(%shift_x.5, %shift_y.5)
          %shift_x.2 : Tensor, %shift_y.2 : Tensor = prim::TupleUnpack(%2347)
          %2350 : Tensor[] = prim::ListConstruct(%shift_x.2, %shift_y.2, %shift_x.2, %shift_y.2)
          %shifts.1 : Tensor = aten::stack(%2350, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\anchor_generator.py:171:21
          %2352 : int[] = prim::ListConstruct(%51, %43, %53)
          %2353 : Tensor = aten::view(%shifts.1, %2352) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\anchor_generator.py:173:28
          %2354 : int[] = prim::ListConstruct(%43, %51, %53)
          %2355 : Tensor = aten::view(%base_anchors.1, %2354) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\anchor_generator.py:173:52
          %2356 : Tensor = aten::add(%2353, %2355, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\anchor_generator.py:173:28
          %2357 : int[] = prim::ListConstruct(%51, %53)
          %2358 : Tensor = aten::reshape(%2356, %2357) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\anchor_generator.py:173:28
          %2359 : Tensor[] = aten::append(%anchors_over_all_feature_maps.1, %2358) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\anchor_generator.py:173:12
          -> (%55)
      %anchors.1 : __torch__.detectron2.structures.boxes.Boxes[] = prim::ListConstruct()
      %2361 : int = aten::len(%anchors_over_all_feature_maps.1) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\anchor_generator.py:227:15
       = prim::Loop(%2361, %55) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\anchor_generator.py:227:15
        block0(%2362 : int):
          %x.4 : Tensor = aten::__getitem__(%anchors_over_all_feature_maps.1, %2362) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\anchor_generator.py:227:15
          %2364 : __torch__.detectron2.structures.boxes.Boxes = prim::CreateObject()
          %device.3 : Device = prim::device(%x.4)
          %tensor.31 : Tensor = aten::as_tensor(%x.4, %22, %device.3) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:148:17
          %2367 : int = aten::numel(%tensor.31) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:149:11
          %2368 : bool = aten::eq(%2367, %48) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:149:11
          %tensor.35 : Tensor = prim::If(%2368) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:149:8
            block0():
              %2370 : int[] = prim::ListConstruct(%51, %53)
              %2371 : Tensor = aten::reshape(%tensor.31, %2370) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:152:21
              %tensor.37 : Tensor = aten::to(%2371, %device.3, %22, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:152:21
              -> (%tensor.37)
            block1():
              -> (%tensor.31)
          %2373 : int = aten::dim(%tensor.35) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:153:15
          %2374 : bool = aten::eq(%2373, %46) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:153:15
          %2375 : bool = prim::If(%2374) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:153:15
            block0():
              %2376 : int = aten::size(%tensor.35, %51) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:153:37
              %2377 : bool = aten::eq(%2376, %53) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:153:37
              -> (%2377)
            block1():
              -> (%44)
           = prim::If(%2375) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:153:8
            block0():
              -> ()
            block1():
              %2378 : int[] = aten::size(%tensor.35) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:153:59
              %2379 : str = aten::str(%2378) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:153:8
              %2380 : str = aten::add(%49, %2379) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:153:8
               = prim::RaiseException(%2380, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:153:8
              -> ()
           = prim::SetAttr[name="tensor"](%2364, %tensor.35)
          %2381 : __torch__.detectron2.structures.boxes.Boxes[] = aten::append(%anchors.1, %2364) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\anchor_generator.py:227:15
          -> (%55)
      %rpn_head : __torch__.detectron2.modeling.proposal_generator.rpn.___torch_mangle_394.StandardRPNHead = prim::GetAttr[name="rpn_head"](%proposal_generator)
      %pred_objectness_logits.1 : Tensor[] = prim::ListConstruct()
      %pred_anchor_deltas.1 : Tensor[] = prim::ListConstruct()
      %2385 : int = aten::len(%features.6) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\proposal_generator\rpn.py:173:8
       = prim::Loop(%2385, %55) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\proposal_generator\rpn.py:173:8
        block0(%2386 : int):
          %x.65 : Tensor = aten::__getitem__(%features.6, %2386) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\proposal_generator\rpn.py:173:8
          %conv : __torch__.detectron2.layers.wrappers.___torch_mangle_391.Conv2d = prim::GetAttr[name="conv"](%rpn_head)
          %weight.120 : Tensor = prim::GetAttr[name="weight"](%conv)
          %bias.183 : Tensor? = prim::GetAttr[name="bias"](%conv)
          %2391 : int[] = prim::ListConstruct(%43, %43)
          %2392 : int[] = prim::ListConstruct(%43, %43)
          %2393 : int[] = prim::ListConstruct(%43, %43)
          %x.67 : Tensor = aten::conv2d(%x.65, %weight.120, %bias.183, %2391, %2392, %2393, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:106:12
          %t.4 : Tensor = aten::relu(%x.67) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:1442:17
          %objectness_logits : __torch__.torch.nn.modules.conv.___torch_mangle_392.Conv2d = prim::GetAttr[name="objectness_logits"](%rpn_head)
          %weight.3 : Tensor = prim::GetAttr[name="weight"](%objectness_logits)
          %bias.3 : Tensor? = prim::GetAttr[name="bias"](%objectness_logits)
          %2399 : int[] = prim::ListConstruct(%43, %43)
          %2400 : int[] = prim::ListConstruct(%48, %48)
          %2401 : int[] = prim::ListConstruct(%43, %43)
          %2402 : Tensor = aten::conv2d(%t.4, %weight.3, %bias.3, %2399, %2400, %2401, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\modules\conv.py:443:15
          %2403 : Tensor[] = aten::append(%pred_objectness_logits.1, %2402) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\proposal_generator\rpn.py:175:12
          %anchor_deltas : __torch__.torch.nn.modules.conv.___torch_mangle_393.Conv2d = prim::GetAttr[name="anchor_deltas"](%rpn_head)
          %weight.122 : Tensor = prim::GetAttr[name="weight"](%anchor_deltas)
          %bias.185 : Tensor? = prim::GetAttr[name="bias"](%anchor_deltas)
          %2407 : int[] = prim::ListConstruct(%43, %43)
          %2408 : int[] = prim::ListConstruct(%48, %48)
          %2409 : int[] = prim::ListConstruct(%43, %43)
          %2410 : Tensor = aten::conv2d(%t.4, %weight.122, %bias.185, %2407, %2408, %2409, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\modules\conv.py:443:15
          %2411 : Tensor[] = aten::append(%pred_anchor_deltas.1, %2410) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\proposal_generator\rpn.py:176:12
          -> (%55)
      %2412 : (Tensor[], Tensor[]) = prim::TupleConstruct(%pred_objectness_logits.1, %pred_anchor_deltas.1)
      %pred_objectness_logits.2 : Tensor[], %pred_anchor_deltas.2 : Tensor[] = prim::TupleUnpack(%2412)
      %pred_objectness_logits.5 : Tensor[] = prim::ListConstruct()
      %2416 : int = aten::len(%pred_objectness_logits.2) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\proposal_generator\rpn.py:456:33
       = prim::Loop(%2416, %55) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\proposal_generator\rpn.py:456:33
        block0(%2417 : int):
          %score.1 : Tensor = aten::__getitem__(%pred_objectness_logits.2, %2417) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\proposal_generator\rpn.py:456:33
          %2419 : int[] = prim::ListConstruct(%48, %46, %36, %43)
          %2420 : Tensor = aten::permute(%score.1, %2419) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\proposal_generator\rpn.py:458:12
          %2421 : Tensor = aten::flatten(%2420, %43, %51) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\proposal_generator\rpn.py:458:12
          %2422 : Tensor[] = aten::append(%pred_objectness_logits.5, %2421) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\proposal_generator\rpn.py:456:33
          -> (%55)
      %pred_anchor_deltas.5 : Tensor[] = prim::ListConstruct()
      %2424 : int = aten::len(%pred_anchor_deltas.2) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\proposal_generator\rpn.py:461:29
       = prim::Loop(%2424, %55) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\proposal_generator\rpn.py:461:29
        block0(%2425 : int):
          %x.63 : Tensor = aten::__getitem__(%pred_anchor_deltas.2, %2425) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\proposal_generator\rpn.py:461:29
          %2427 : int[] = aten::size(%x.63) # <string>:13:9
          %2428 : int = aten::__getitem__(%2427, %48) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\proposal_generator\rpn.py:463:19
          %2429 : int[] = aten::size(%x.63) # <string>:13:9
          %2430 : int = aten::__getitem__(%2429, %50) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\proposal_generator\rpn.py:463:66
          %2431 : int[] = aten::size(%x.63) # <string>:13:9
          %2432 : int = aten::__getitem__(%2431, %51) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\proposal_generator\rpn.py:463:79
          %2433 : int[] = prim::ListConstruct(%2428, %51, %53, %2430, %2432)
          %2434 : Tensor = aten::view(%x.63, %2433) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\proposal_generator\rpn.py:463:12
          %2435 : int[] = prim::ListConstruct(%48, %36, %53, %43, %46)
          %2436 : Tensor = aten::permute(%2434, %2435) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\proposal_generator\rpn.py:463:12
          %2437 : Tensor = aten::flatten(%2436, %43, %50) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\proposal_generator\rpn.py:463:12
          %2438 : Tensor[] = aten::append(%pred_anchor_deltas.5, %2437) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\proposal_generator\rpn.py:461:29
          -> (%55)
      %losses.1 : Dict(str, Tensor) = prim::DictConstruct()
      %image_sizes : (int, int)[] = prim::GetAttr[name="image_sizes"](%images.2)
      %2441 : __torch__.torch.autograd.grad_mode.no_grad = prim::CreateObject()
       = prim::SetAttr[name="prev"](%2441, %44)
      %2442 : NoneType = prim::Enter(%2441)
      %2443 : Tensor = aten::__getitem__(%pred_anchor_deltas.5, %48) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\proposal_generator\rpn.py:522:12
      %2444 : int[] = aten::size(%2443) # <string>:13:9
      %N.1 : int = aten::__getitem__(%2444, %48) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\proposal_generator\rpn.py:522:12
      %pred_proposals.1 : Tensor[] = prim::ListConstruct()
      %2447 : int = aten::len(%anchors.1) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\proposal_generator\rpn.py:525:8
      %2448 : int = aten::len(%pred_anchor_deltas.5) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\proposal_generator\rpn.py:525:8
      %2449 : int[] = prim::ListConstruct(%2447, %2448)
      %2450 : int = prim::min(%2449) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\proposal_generator\rpn.py:525:8
       = prim::Loop(%2450, %55) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\proposal_generator\rpn.py:525:8
        block0(%2451 : int):
          %anchors_i.1 : __torch__.detectron2.structures.boxes.Boxes = aten::__getitem__(%anchors.1, %2451) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\proposal_generator\rpn.py:525:8
          %pred_anchor_deltas_i.1 : Tensor = aten::__getitem__(%pred_anchor_deltas.5, %2451) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\proposal_generator\rpn.py:525:8
          %tensor.6 : Tensor = prim::GetAttr[name="tensor"](%anchors_i.1)
          %B.1 : int = aten::size(%tensor.6, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\proposal_generator\rpn.py:526:16
          %2456 : int[] = prim::ListConstruct(%51, %B.1)
          %pred_anchor_deltas_i.5 : Tensor = aten::reshape(%pred_anchor_deltas_i.1, %2456) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\proposal_generator\rpn.py:527:35
          %tensor.8 : Tensor = prim::GetAttr[name="tensor"](%anchors_i.1)
          %2459 : Tensor = aten::unsqueeze(%tensor.8, %48) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\proposal_generator\rpn.py:529:24
          %2460 : int[] = prim::ListConstruct(%N.1, %51, %51)
          %2461 : Tensor = aten::expand(%2459, %2460, %44) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\proposal_generator\rpn.py:529:24
          %2462 : int[] = prim::ListConstruct(%51, %B.1)
          %anchors_i.7 : Tensor = aten::reshape(%2461, %2462) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\proposal_generator\rpn.py:529:24
          %box2box_transform : __torch__.detectron2.modeling.box_regression.Box2BoxTransform = prim::GetAttr[name="box2box_transform"](%proposal_generator)
          %deltas.6 : Tensor = aten::to(%pred_anchor_deltas_i.5, %22, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:88:17
          %2466 : int = prim::dtype(%deltas.6)
          %boxes.6 : Tensor = aten::to(%anchors_i.7, %2466, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:89:16
          %2468 : Tensor = aten::slice(%boxes.6, %48, %54, %54, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:91:17
          %2469 : Tensor = aten::select(%2468, %43, %46) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:91:17
          %2470 : Tensor = aten::slice(%boxes.6, %48, %54, %54, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:91:31
          %2471 : Tensor = aten::select(%2470, %43, %48) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:91:31
          %widths.2 : Tensor = aten::sub(%2469, %2471, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:91:17
          %2473 : Tensor = aten::slice(%boxes.6, %48, %54, %54, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:92:18
          %2474 : Tensor = aten::select(%2473, %43, %36) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:92:18
          %2475 : Tensor = aten::slice(%boxes.6, %48, %54, %54, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:92:32
          %2476 : Tensor = aten::select(%2475, %43, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:92:32
          %heights.2 : Tensor = aten::sub(%2474, %2476, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:92:18
          %2478 : Tensor = aten::slice(%boxes.6, %48, %54, %54, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:93:16
          %2479 : Tensor = aten::select(%2478, %43, %48) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:93:16
          %2480 : Tensor = aten::mul(%widths.2, %31) # <string>:3:9
          %ctr_x.2 : Tensor = aten::add(%2479, %2480, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:93:16
          %2482 : Tensor = aten::slice(%boxes.6, %48, %54, %54, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:94:16
          %2483 : Tensor = aten::select(%2482, %43, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:94:16
          %2484 : Tensor = aten::mul(%heights.2, %31) # <string>:3:9
          %ctr_y.2 : Tensor = aten::add(%2483, %2484, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:94:16
          %weights.1 : (float, float, float, float) = prim::GetAttr[name="weights"](%box2box_transform)
          %wx.2 : float, %wy.2 : float, %ww.2 : float, %wh.2 : float = prim::TupleUnpack(%weights.1)
          %2491 : Tensor = aten::slice(%deltas.6, %48, %54, %54, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:97:13
          %2492 : Tensor = aten::slice(%2491, %43, %48, %54, %53) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:97:13
          %dx.2 : Tensor = aten::div(%2492, %wx.2) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:97:13
          %2494 : Tensor = aten::slice(%deltas.6, %48, %54, %54, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:98:13
          %2495 : Tensor = aten::slice(%2494, %43, %43, %54, %53) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:98:13
          %dy.2 : Tensor = aten::div(%2495, %wy.2) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:98:13
          %2497 : Tensor = aten::slice(%deltas.6, %48, %54, %54, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:99:13
          %2498 : Tensor = aten::slice(%2497, %43, %46, %54, %53) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:99:13
          %dw.2 : Tensor = aten::div(%2498, %ww.2) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:99:13
          %2500 : Tensor = aten::slice(%deltas.6, %48, %54, %54, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:100:13
          %2501 : Tensor = aten::slice(%2500, %43, %36, %54, %53) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:100:13
          %dh.2 : Tensor = aten::div(%2501, %wh.2) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:100:13
          %scale_clamp.2 : float = prim::GetAttr[name="scale_clamp"](%box2box_transform)
          %dw.6 : Tensor = aten::clamp(%dw.2, %54, %scale_clamp.2) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:103:13
          %scale_clamp.4 : float = prim::GetAttr[name="scale_clamp"](%box2box_transform)
          %dh.6 : Tensor = aten::clamp(%dh.2, %54, %scale_clamp.4) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:104:13
          %2507 : Tensor = aten::slice(%widths.2, %48, %54, %54, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:106:26
          %2508 : Tensor = aten::unsqueeze(%2507, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:106:26
          %2509 : Tensor = aten::mul(%dx.2, %2508) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:106:21
          %2510 : Tensor = aten::slice(%ctr_x.2, %48, %54, %54, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:106:44
          %2511 : Tensor = aten::unsqueeze(%2510, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:106:44
          %pred_ctr_x.2 : Tensor = aten::add(%2509, %2511, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:106:21
          %2513 : Tensor = aten::slice(%heights.2, %48, %54, %54, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:107:26
          %2514 : Tensor = aten::unsqueeze(%2513, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:107:26
          %2515 : Tensor = aten::mul(%dy.2, %2514) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:107:21
          %2516 : Tensor = aten::slice(%ctr_y.2, %48, %54, %54, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:107:45
          %2517 : Tensor = aten::unsqueeze(%2516, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:107:45
          %pred_ctr_y.2 : Tensor = aten::add(%2515, %2517, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:107:21
          %2519 : Tensor = aten::exp(%dw.6) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:108:17
          %2520 : Tensor = aten::slice(%widths.2, %48, %54, %54, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:108:33
          %2521 : Tensor = aten::unsqueeze(%2520, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:108:33
          %pred_w.2 : Tensor = aten::mul(%2519, %2521) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:108:17
          %2523 : Tensor = aten::exp(%dh.6) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:109:17
          %2524 : Tensor = aten::slice(%heights.2, %48, %54, %54, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:109:33
          %2525 : Tensor = aten::unsqueeze(%2524, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:109:33
          %pred_h.2 : Tensor = aten::mul(%2523, %2525) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:109:17
          %2527 : Tensor = aten::mul(%pred_w.2, %31) # <string>:3:9
          %x1.3 : Tensor = aten::sub(%pred_ctr_x.2, %2527, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:111:13
          %2529 : Tensor = aten::mul(%pred_h.2, %31) # <string>:3:9
          %y1.3 : Tensor = aten::sub(%pred_ctr_y.2, %2529, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:112:13
          %2531 : Tensor = aten::mul(%pred_w.2, %31) # <string>:3:9
          %x2.3 : Tensor = aten::add(%pred_ctr_x.2, %2531, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:113:13
          %2533 : Tensor = aten::mul(%pred_h.2, %31) # <string>:3:9
          %y2.3 : Tensor = aten::add(%pred_ctr_y.2, %2533, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:114:13
          %2535 : Tensor[] = prim::ListConstruct(%x1.3, %y1.3, %x2.3, %y2.3)
          %pred_boxes.2 : Tensor = aten::stack(%2535, %51) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:115:21
          %2537 : int[] = aten::size(%deltas.6) # <string>:13:9
          %proposals_i.2 : Tensor = aten::reshape(%pred_boxes.2, %2537) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:116:15
          %2539 : int[] = prim::ListConstruct(%N.1, %51, %B.1)
          %2540 : Tensor = aten::view(%proposals_i.2, %2539) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\proposal_generator\rpn.py:532:29
          %2541 : Tensor[] = aten::append(%pred_proposals.1, %2540) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\proposal_generator\rpn.py:532:12
          -> (%55)
      %nms_thresh : float = prim::GetAttr[name="nms_thresh"](%proposal_generator)
      %pre_nms_topk : Dict(bool, int) = prim::GetAttr[name="pre_nms_topk"](%proposal_generator)
      %2544 : int = aten::__getitem__(%pre_nms_topk, %44) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\proposal_generator\rpn.py:508:16
      %post_nms_topk : Dict(bool, int) = prim::GetAttr[name="post_nms_topk"](%proposal_generator)
      %2546 : int = aten::__getitem__(%post_nms_topk, %44) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\proposal_generator\rpn.py:509:16
      %min_box_size : float = prim::GetAttr[name="min_box_size"](%proposal_generator)
      %num_images.1 : int = aten::len(%image_sizes) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\proposal_generator\proposal_utils.py:60:17
      %2549 : Tensor = aten::__getitem__(%pred_proposals.1, %48) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\proposal_generator\proposal_utils.py:61:13
      %device.5 : Device = prim::device(%2549)
      %topk_scores.1 : Tensor[] = prim::ListConstruct()
      %topk_proposals.1 : Tensor[] = prim::ListConstruct()
      %level_ids.1 : Tensor[] = prim::ListConstruct()
      %batch_idx.1 : Tensor = aten::arange(%num_images.1, %54, %54, %device.5, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\proposal_generator\proposal_utils.py:67:16
      %2555 : int = aten::len(%pred_proposals.1) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\proposal_generator\proposal_utils.py:68:4
      %2556 : int = aten::len(%pred_objectness_logits.5) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\proposal_generator\proposal_utils.py:68:4
      %2557 : int[] = prim::ListConstruct(%23, %2555, %2556)
      %2558 : int = prim::min(%2557) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\proposal_generator\proposal_utils.py:68:4
       = prim::Loop(%2558, %55) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\proposal_generator\proposal_utils.py:68:4
        block0(%level_id.1 : int):
          %proposals_i.1 : Tensor = aten::__getitem__(%pred_proposals.1, %level_id.1) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\proposal_generator\proposal_utils.py:68:4
          %logits_i.1 : Tensor = aten::__getitem__(%pred_objectness_logits.5, %level_id.1) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\proposal_generator\proposal_utils.py:68:4
          %2562 : int[] = aten::size(%logits_i.1) # <string>:13:9
          %Hi_Wi_A.1 : int = aten::__getitem__(%2562, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\proposal_generator\proposal_utils.py:69:18
          %num_proposals_i.1 : int = prim::min(%Hi_Wi_A.1, %2544) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\proposal_generator\proposal_utils.py:73:30
          %topk_scores_i.1 : Tensor, %topk_idx.1 : Tensor = aten::topk(%logits_i.1, %num_proposals_i.1, %43, %55, %55) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\proposal_generator\proposal_utils.py:75:34
          %2567 : Tensor = aten::slice(%batch_idx.1, %48, %54, %54, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\proposal_generator\proposal_utils.py:78:39
          %2568 : Tensor = aten::unsqueeze(%2567, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\proposal_generator\proposal_utils.py:78:39
          %2569 : Tensor?[] = prim::ListConstruct(%2568, %topk_idx.1)
          %topk_proposals_i.1 : Tensor = aten::index(%proposals_i.1, %2569) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\proposal_generator\proposal_utils.py:78:27
          %2571 : Tensor[] = aten::append(%topk_proposals.1, %topk_proposals_i.1) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\proposal_generator\proposal_utils.py:80:8
          %2572 : Tensor[] = aten::append(%topk_scores.1, %topk_scores_i.1) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\proposal_generator\proposal_utils.py:81:8
          %2573 : int[] = prim::ListConstruct(%num_proposals_i.1)
          %2574 : Tensor = aten::full(%2573, %level_id.1, %53, %54, %device.5, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\proposal_generator\proposal_utils.py:82:25
          %2575 : Tensor[] = aten::append(%level_ids.1, %2574) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\proposal_generator\proposal_utils.py:82:8
          -> (%55)
      %2576 : int = aten::len(%topk_scores.1) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:43:7
      %2577 : bool = aten::eq(%2576, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:43:7
      %topk_scores.7 : Tensor = prim::If(%2577) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:43:4
        block0():
          %2579 : Tensor = aten::__getitem__(%topk_scores.1, %48) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:44:15
          -> (%2579)
        block1():
          %2580 : Tensor = aten::cat(%topk_scores.1, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:45:11
          -> (%2580)
      %2581 : int = aten::len(%topk_proposals.1) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:43:7
      %2582 : bool = aten::eq(%2581, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:43:7
      %topk_proposals.7 : Tensor = prim::If(%2582) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:43:4
        block0():
          %2584 : Tensor = aten::__getitem__(%topk_proposals.1, %48) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:44:15
          -> (%2584)
        block1():
          %2585 : Tensor = aten::cat(%topk_proposals.1, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:45:11
          -> (%2585)
      %2586 : int = aten::len(%level_ids.1) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:43:7
      %2587 : bool = aten::eq(%2586, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:43:7
      %level_ids.7 : Tensor = prim::If(%2587) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:43:4
        block0():
          %2589 : Tensor = aten::__getitem__(%level_ids.1, %48) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:44:15
          -> (%2589)
        block1():
          %2590 : Tensor = aten::cat(%level_ids.1, %48) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:45:11
          -> (%2590)
      %proposals.1 : __torch__.detectron2.export.torchscript_patch11.ScriptedInstances11[] = prim::ListConstruct()
      %2592 : int = aten::len(%image_sizes) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\proposal_generator\proposal_utils.py:91:4
      %2593 : int[] = prim::ListConstruct(%23, %2592)
      %2594 : int = prim::min(%2593) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\proposal_generator\proposal_utils.py:91:4
       = prim::Loop(%2594, %55) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\proposal_generator\proposal_utils.py:91:4
        block0(%n.1 : int):
          %image_size.1 : (int, int) = aten::__getitem__(%image_sizes, %n.1) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\proposal_generator\proposal_utils.py:91:4
          %2597 : Tensor = aten::select(%topk_proposals.7, %48, %n.1) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\proposal_generator\proposal_utils.py:92:22
          %boxes.4 : __torch__.detectron2.structures.boxes.Boxes = prim::CreateObject()
          %device.11 : Device = prim::device(%2597)
          %tensor.39 : Tensor = aten::as_tensor(%2597, %22, %device.11) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:148:17
          %2601 : int = aten::numel(%tensor.39) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:149:11
          %2602 : bool = aten::eq(%2601, %48) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:149:11
          %tensor.41 : Tensor = prim::If(%2602) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:149:8
            block0():
              %2604 : int[] = prim::ListConstruct(%51, %53)
              %2605 : Tensor = aten::reshape(%tensor.39, %2604) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:152:21
              %tensor.53 : Tensor = aten::to(%2605, %device.11, %22, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:152:21
              -> (%tensor.53)
            block1():
              -> (%tensor.39)
          %2607 : int = aten::dim(%tensor.41) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:153:15
          %2608 : bool = aten::eq(%2607, %46) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:153:15
          %2609 : bool = prim::If(%2608) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:153:15
            block0():
              %2610 : int = aten::size(%tensor.41, %51) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:153:37
              %2611 : bool = aten::eq(%2610, %53) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:153:37
              -> (%2611)
            block1():
              -> (%44)
           = prim::If(%2609) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:153:8
            block0():
              -> ()
            block1():
              %2612 : int[] = aten::size(%tensor.41) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:153:59
              %2613 : str = aten::str(%2612) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:153:8
              %2614 : str = aten::add(%49, %2613) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:153:8
               = prim::RaiseException(%2614, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:153:8
              -> ()
           = prim::SetAttr[name="tensor"](%boxes.4, %tensor.41)
          %scores_per_img.1 : Tensor = aten::select(%topk_scores.7, %48, %n.1) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\proposal_generator\proposal_utils.py:93:25
          %tensor.4 : Tensor = prim::GetAttr[name="tensor"](%boxes.4)
          %2617 : Tensor = aten::isfinite(%tensor.4) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\proposal_generator\proposal_utils.py:96:21
          %2618 : Tensor = aten::all(%2617, %43, %44) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\proposal_generator\proposal_utils.py:96:21
          %2619 : Tensor = aten::isfinite(%scores_per_img.1) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\proposal_generator\proposal_utils.py:96:63
          %valid_mask.2 : Tensor = aten::__and__(%2618, %2619) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\proposal_generator\proposal_utils.py:96:21
          %2621 : Tensor = aten::all(%valid_mask.2) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\proposal_generator\proposal_utils.py:97:15
          %2622 : bool = aten::Bool(%2621) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\proposal_generator\proposal_utils.py:97:15
          %2623 : bool = aten::__not__(%2622) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\proposal_generator\proposal_utils.py:97:11
          %boxes.43 : __torch__.detectron2.structures.boxes.Boxes, %scores_per_img.37 : Tensor, %lvl.31 : Tensor = prim::If(%2623) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\proposal_generator\proposal_utils.py:97:8
            block0():
              %tensor.26 : Tensor = prim::GetAttr[name="tensor"](%boxes.4)
              %2628 : Tensor?[] = prim::ListConstruct(%valid_mask.2)
              %b.2 : Tensor = aten::index(%tensor.26, %2628) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:233:12
              %2630 : int = aten::dim(%b.2) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:234:15
              %2631 : bool = aten::eq(%2630, %46) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:234:15
               = prim::If(%2631) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:234:8
                block0():
                  -> ()
                block1():
                  %2632 : str = aten::format(%24, %valid_mask.2) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:234:29
                  %2633 : str = aten::add(%49, %2632) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:234:8
                   = prim::RaiseException(%2633, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:234:8
                  -> ()
              %boxes.9 : __torch__.detectron2.structures.boxes.Boxes = prim::CreateObject()
              %device.6 : Device = prim::device(%b.2)
              %tensor.43 : Tensor = aten::as_tensor(%b.2, %22, %device.6) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:148:17
              %2637 : int = aten::numel(%tensor.43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:149:11
              %2638 : bool = aten::eq(%2637, %48) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:149:11
              %tensor.27 : Tensor = prim::If(%2638) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:149:8
                block0():
                  %2640 : int[] = prim::ListConstruct(%51, %53)
                  %2641 : Tensor = aten::reshape(%tensor.43, %2640) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:152:21
                  %tensor.32 : Tensor = aten::to(%2641, %device.6, %22, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:152:21
                  -> (%tensor.32)
                block1():
                  -> (%tensor.43)
              %2643 : int = aten::dim(%tensor.27) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:153:15
              %2644 : bool = aten::eq(%2643, %46) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:153:15
              %2645 : bool = prim::If(%2644) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:153:15
                block0():
                  %2646 : int = aten::size(%tensor.27, %51) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:153:37
                  %2647 : bool = aten::eq(%2646, %53) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:153:37
                  -> (%2647)
                block1():
                  -> (%44)
               = prim::If(%2645) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:153:8
                block0():
                  -> ()
                block1():
                  %2648 : int[] = aten::size(%tensor.27) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:153:59
                  %2649 : str = aten::str(%2648) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:153:8
                  %2650 : str = aten::add(%49, %2649) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:153:8
                   = prim::RaiseException(%2650, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:153:8
                  -> ()
               = prim::SetAttr[name="tensor"](%boxes.9, %tensor.27)
              %2651 : Tensor?[] = prim::ListConstruct(%valid_mask.2)
              %scores_per_img.7 : Tensor = aten::index(%scores_per_img.1, %2651) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\proposal_generator\proposal_utils.py:103:29
              %2653 : Tensor?[] = prim::ListConstruct(%valid_mask.2)
              %lvl.3 : Tensor = aten::index(%level_ids.7, %2653) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\proposal_generator\proposal_utils.py:104:18
              -> (%boxes.9, %scores_per_img.7, %lvl.3)
            block1():
              -> (%boxes.4, %scores_per_img.1, %level_ids.7)
          %tensor.45 : Tensor = prim::GetAttr[name="tensor"](%boxes.43)
          %2656 : Tensor = aten::isfinite(%tensor.45) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:189:15
          %2657 : Tensor = aten::all(%2656) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:189:15
          %2658 : bool = aten::Bool(%2657) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:189:15
           = prim::If(%2658) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:189:8
            block0():
              -> ()
            block1():
               = prim::RaiseException(%25, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:189:8
              -> ()
          %h.2 : int, %w.2 : int = prim::TupleUnpack(%image_size.1)
          %tensor.47 : Tensor = prim::GetAttr[name="tensor"](%boxes.43)
          %2662 : Tensor = aten::slice(%tensor.47, %48, %54, %54, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:191:13
          %2663 : Tensor = aten::select(%2662, %43, %48) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:191:13
          %x1.5 : Tensor = aten::clamp(%2663, %48, %w.2) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:191:13
          %tensor.49 : Tensor = prim::GetAttr[name="tensor"](%boxes.43)
          %2666 : Tensor = aten::slice(%tensor.49, %48, %54, %54, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:192:13
          %2667 : Tensor = aten::select(%2666, %43, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:192:13
          %y1.5 : Tensor = aten::clamp(%2667, %48, %h.2) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:192:13
          %tensor.28 : Tensor = prim::GetAttr[name="tensor"](%boxes.43)
          %2670 : Tensor = aten::slice(%tensor.28, %48, %54, %54, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:193:13
          %2671 : Tensor = aten::select(%2670, %43, %46) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:193:13
          %x2.5 : Tensor = aten::clamp(%2671, %48, %w.2) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:193:13
          %tensor.29 : Tensor = prim::GetAttr[name="tensor"](%boxes.43)
          %2674 : Tensor = aten::slice(%tensor.29, %48, %54, %54, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:194:13
          %2675 : Tensor = aten::select(%2674, %43, %36) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:194:13
          %y2.5 : Tensor = aten::clamp(%2675, %48, %h.2) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:194:13
          %2677 : Tensor[] = prim::ListConstruct(%x1.5, %y1.5, %x2.5, %y2.5)
          %2678 : Tensor = aten::stack(%2677, %51) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:195:22
           = prim::SetAttr[name="tensor"](%boxes.43, %2678)
          %tensor.25 : Tensor = prim::GetAttr[name="tensor"](%boxes.43)
          %2680 : Tensor = aten::slice(%tensor.25, %48, %54, %54, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:208:17
          %2681 : Tensor = aten::select(%2680, %43, %46) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:208:17
          %2682 : Tensor = aten::slice(%tensor.25, %48, %54, %54, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:208:29
          %2683 : Tensor = aten::select(%2682, %43, %48) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:208:29
          %widths.3 : Tensor = aten::sub(%2681, %2683, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:208:17
          %2685 : Tensor = aten::slice(%tensor.25, %48, %54, %54, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:209:18
          %2686 : Tensor = aten::select(%2685, %43, %36) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:209:18
          %2687 : Tensor = aten::slice(%tensor.25, %48, %54, %54, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:209:30
          %2688 : Tensor = aten::select(%2687, %43, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:209:30
          %heights.3 : Tensor = aten::sub(%2686, %2688, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:209:18
          %2690 : Tensor = aten::gt(%widths.3, %min_box_size) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:210:16
          %2691 : Tensor = aten::gt(%heights.3, %min_box_size) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:210:39
          %keep.2 : Tensor = aten::__and__(%2690, %2691) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:210:16
          %2693 : Tensor = aten::sum(%keep.2, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\proposal_generator\proposal_utils.py:109:28
          %2694 : Scalar = aten::item(%2693) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\proposal_generator\proposal_utils.py:109:28
          %tensor.30 : Tensor = prim::GetAttr[name="tensor"](%boxes.43)
          %2696 : int[] = aten::size(%tensor.30) # <string>:13:9
          %2697 : int = aten::__getitem__(%2696, %48) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:238:15
          %2698 : bool = aten::ne(%2694, %2697) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\proposal_generator\proposal_utils.py:109:28
          %boxes.11 : __torch__.detectron2.structures.boxes.Boxes, %scores_per_img : Tensor, %lvl : Tensor = prim::If(%2698) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\proposal_generator\proposal_utils.py:109:8
            block0():
              %tensor.34 : Tensor = prim::GetAttr[name="tensor"](%boxes.43)
              %2703 : Tensor?[] = prim::ListConstruct(%keep.2)
              %b.4 : Tensor = aten::index(%tensor.34, %2703) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:233:12
              %2705 : int = aten::dim(%b.4) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:234:15
              %2706 : bool = aten::eq(%2705, %46) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:234:15
               = prim::If(%2706) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:234:8
                block0():
                  -> ()
                block1():
                  %2707 : str = aten::format(%24, %keep.2) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:234:29
                  %2708 : str = aten::add(%49, %2707) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:234:8
                   = prim::RaiseException(%2708, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:234:8
                  -> ()
              %boxes.27 : __torch__.detectron2.structures.boxes.Boxes = prim::CreateObject()
              %device.8 : Device = prim::device(%b.4)
              %tensor.36 : Tensor = aten::as_tensor(%b.4, %22, %device.8) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:148:17
              %2712 : int = aten::numel(%tensor.36) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:149:11
              %2713 : bool = aten::eq(%2712, %48) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:149:11
              %tensor.38 : Tensor = prim::If(%2713) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:149:8
                block0():
                  %2715 : int[] = prim::ListConstruct(%51, %53)
                  %2716 : Tensor = aten::reshape(%tensor.36, %2715) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:152:21
                  %tensor.40 : Tensor = aten::to(%2716, %device.8, %22, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:152:21
                  -> (%tensor.40)
                block1():
                  -> (%tensor.36)
              %2718 : int = aten::dim(%tensor.38) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:153:15
              %2719 : bool = aten::eq(%2718, %46) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:153:15
              %2720 : bool = prim::If(%2719) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:153:15
                block0():
                  %2721 : int = aten::size(%tensor.38, %51) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:153:37
                  %2722 : bool = aten::eq(%2721, %53) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:153:37
                  -> (%2722)
                block1():
                  -> (%44)
               = prim::If(%2720) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:153:8
                block0():
                  -> ()
                block1():
                  %2723 : int[] = aten::size(%tensor.38) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:153:59
                  %2724 : str = aten::str(%2723) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:153:8
                  %2725 : str = aten::add(%49, %2724) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:153:8
                   = prim::RaiseException(%2725, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:153:8
                  -> ()
               = prim::SetAttr[name="tensor"](%boxes.27, %tensor.38)
              %2726 : Tensor?[] = prim::ListConstruct(%keep.2)
              %scores_per_img.21 : Tensor = aten::index(%scores_per_img.37, %2726) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\proposal_generator\proposal_utils.py:110:54
              %2728 : Tensor?[] = prim::ListConstruct(%keep.2)
              %lvl.17 : Tensor = aten::index(%lvl.31, %2728) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\proposal_generator\proposal_utils.py:110:76
              -> (%boxes.27, %scores_per_img.21, %lvl.17)
            block1():
              -> (%boxes.43, %scores_per_img.37, %lvl.31)
          %tensor.33 : Tensor = prim::GetAttr[name="tensor"](%boxes.11)
          %2731 : int[] = aten::size(%tensor.33) # <string>:13:9
          %2732 : int = aten::__getitem__(%2731, %51) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\nms.py:15:11
          %2733 : bool = aten::eq(%2732, %53) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\nms.py:15:11
           = prim::If(%2733) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\nms.py:15:4
            block0():
              -> ()
            block1():
               = prim::RaiseException(%49, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\nms.py:15:4
              -> ()
          %2734 : Tensor = aten::to(%tensor.33, %22, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\nms.py:20:31
          %2735 : int = aten::numel(%2734) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\boxes.py:71:7
          %2736 : Device = prim::device(%2734)
          %2737 : str = prim::type(%2736)
          %2738 : bool = aten::eq(%2737, %26) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\boxes.py:71:32
          %2739 : int = prim::If(%2738) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\boxes.py:71:24
            block0():
              -> (%27)
            block1():
              -> (%28)
          %2740 : bool = aten::gt(%2735, %2739) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\boxes.py:71:7
          %keep.19 : Tensor = prim::If(%2740) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\boxes.py:71:4
            block0():
              %keep_mask.2 : Tensor = aten::zeros_like(%scores_per_img, %29, %54, %54, %54, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\boxes.py:105:16
              %output.4 : Tensor, %inverse_indices.4 : Tensor, %counts.4 : Tensor = aten::_unique2(%lvl, %55, %44, %44) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\functional.py:860:42
              %2746 : (Tensor, Tensor, Tensor) = prim::TupleConstruct(%output.4, %inverse_indices.4, %counts.4)
              %output.6 : Tensor, %2748 : Tensor, %2749 : Tensor = prim::TupleUnpack(%2746)
              %2750 : int = aten::len(%output.6) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\boxes.py:106:4
               = prim::Loop(%2750, %55) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\boxes.py:106:4
                block0(%2751 : int):
                  %class_id.2 : Tensor = aten::select(%output.6, %48, %2751) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\boxes.py:106:4
                  %2753 : Tensor = aten::eq(%lvl, %class_id.2) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\boxes.py:107:35
                  %2754 : Tensor[] = aten::where(%2753) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\boxes.py:107:23
                  %curr_indices.2 : Tensor = aten::__getitem__(%2754, %48) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\boxes.py:107:23
                  %2756 : Tensor?[] = prim::ListConstruct(%curr_indices.2)
                  %2757 : Tensor = aten::index(%2734, %2756) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\boxes.py:108:32
                  %2758 : Tensor?[] = prim::ListConstruct(%curr_indices.2)
                  %2759 : Tensor = aten::index(%scores_per_img, %2758) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\boxes.py:108:53
                  %curr_keep_indices.2 : Tensor = torchvision::nms(%2757, %2759, %nms_thresh) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\boxes.py:40:11
                  %2761 : Tensor?[] = prim::ListConstruct(%curr_keep_indices.2)
                  %2762 : Tensor = aten::index(%curr_indices.2, %2761) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\boxes.py:109:18
                  %2763 : int = prim::dtype(%keep_mask.2)
                  %2764 : Device = prim::device(%keep_mask.2)
                  %2765 : Tensor = aten::tensor(%55, %2763, %2764, %44)
                  %2766 : Tensor?[] = prim::ListConstruct(%2762)
                  %2767 : Tensor = aten::index_put_(%keep_mask.2, %2766, %2765, %44) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\boxes.py:109:8
                  -> (%55)
              %2768 : Tensor[] = aten::where(%keep_mask.2) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\boxes.py:110:19
              %keep_indices.2 : Tensor = aten::__getitem__(%2768, %48) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\boxes.py:110:19
              %2770 : Tensor?[] = prim::ListConstruct(%keep_indices.2)
              %2771 : Tensor = aten::index(%scores_per_img, %2770) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\boxes.py:111:24
              %2772 : Tensor, %2773 : Tensor = aten::sort(%2771, %51, %55) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\boxes.py:111:24
              %2774 : Tensor?[] = prim::ListConstruct(%2773)
              %2775 : Tensor = aten::index(%keep_indices.2, %2774) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\boxes.py:111:11
              -> (%2775)
            block1():
              %2776 : int = aten::numel(%2734) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\boxes.py:88:7
              %2777 : bool = aten::eq(%2776, %48) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\boxes.py:88:7
              %2778 : Tensor = prim::If(%2777) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\boxes.py:88:4
                block0():
                  %2779 : Device = prim::device(%2734)
                  %2780 : int[] = prim::ListConstruct(%48)
                  %2781 : Tensor = aten::empty(%2780, %53, %54, %2779, %54, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\boxes.py:89:15
                  -> (%2781)
                block1():
                  %max_coordinate.4 : Tensor = aten::max(%2734) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\boxes.py:90:21
                  %2783 : Tensor = aten::to(%lvl, %2734, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\boxes.py:91:14
                  %2784 : Tensor = aten::tensor(%43, %54, %54, %44) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\boxes.py:91:49
                  %2785 : Tensor = aten::to(%2784, %2734, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\boxes.py:91:49
                  %2786 : Tensor = aten::add(%max_coordinate.4, %2785, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\boxes.py:91:32
                  %offsets.4 : Tensor = aten::mul(%2783, %2786) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\boxes.py:91:14
                  %2788 : Tensor = aten::slice(%offsets.4, %48, %54, %54, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\boxes.py:92:28
                  %2789 : Tensor = aten::unsqueeze(%2788, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\boxes.py:92:28
                  %boxes_for_nms.4 : Tensor = aten::add(%2734, %2789, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\boxes.py:92:20
                  %keep.4 : Tensor = torchvision::nms(%boxes_for_nms.4, %scores_per_img, %nms_thresh) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\boxes.py:40:11
                  -> (%keep.4)
              -> (%2778)
          %keep.23 : Tensor = aten::slice(%keep.19, %48, %54, %2546, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\proposal_generator\proposal_utils.py:120:15
          %res.1 : __torch__.detectron2.export.torchscript_patch11.ScriptedInstances11 = prim::CreateObject()
           = prim::SetAttr[name="image_size"](%res.1, %image_size.1)
           = prim::SetAttr[name="_field_names"](%res.1, %30)
           = prim::SetAttr[name="_proposal_boxes"](%res.1, %54)
           = prim::SetAttr[name="_objectness_logits"](%res.1, %54)
           = prim::SetAttr[name="_pred_boxes"](%res.1, %54)
           = prim::SetAttr[name="_scores"](%res.1, %54)
           = prim::SetAttr[name="_pred_classes"](%res.1, %54)
           = prim::SetAttr[name="_pred_masks"](%res.1, %54)
           = prim::SetAttr[name="_pred_keypoints"](%res.1, %54)
           = prim::SetAttr[name="_pred_keypoint_heatmaps"](%res.1, %54)
          %tensor.55 : Tensor = prim::GetAttr[name="tensor"](%boxes.11)
          %2795 : Tensor?[] = prim::ListConstruct(%keep.23)
          %b.3 : Tensor = aten::index(%tensor.55, %2795) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:233:12
          %2797 : int = aten::dim(%b.3) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:234:15
          %2798 : bool = aten::eq(%2797, %46) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:234:15
           = prim::If(%2798) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:234:8
            block0():
              -> ()
            block1():
              %2799 : str = aten::format(%24, %keep.23) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:234:29
              %2800 : str = aten::add(%49, %2799) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:234:8
               = prim::RaiseException(%2800, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:234:8
              -> ()
          %2801 : __torch__.detectron2.structures.boxes.Boxes = prim::CreateObject()
          %device.9 : Device = prim::device(%b.3)
          %tensor.57 : Tensor = aten::as_tensor(%b.3, %22, %device.9) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:148:17
          %2804 : int = aten::numel(%tensor.57) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:149:11
          %2805 : bool = aten::eq(%2804, %48) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:149:11
          %tensor.59 : Tensor = prim::If(%2805) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:149:8
            block0():
              %2807 : int[] = prim::ListConstruct(%51, %53)
              %2808 : Tensor = aten::reshape(%tensor.57, %2807) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:152:21
              %tensor.61 : Tensor = aten::to(%2808, %device.9, %22, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:152:21
              -> (%tensor.61)
            block1():
              -> (%tensor.57)
          %2810 : int = aten::dim(%tensor.59) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:153:15
          %2811 : bool = aten::eq(%2810, %46) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:153:15
          %2812 : bool = prim::If(%2811) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:153:15
            block0():
              %2813 : int = aten::size(%tensor.59, %51) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:153:37
              %2814 : bool = aten::eq(%2813, %53) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:153:37
              -> (%2814)
            block1():
              -> (%44)
           = prim::If(%2812) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:153:8
            block0():
              -> ()
            block1():
              %2815 : int[] = aten::size(%tensor.59) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:153:59
              %2816 : str = aten::str(%2815) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:153:8
              %2817 : str = aten::add(%49, %2816) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:153:8
               = prim::RaiseException(%2817, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:153:8
              -> ()
           = prim::SetAttr[name="tensor"](%2801, %tensor.59)
           = prim::SetAttr[name="_proposal_boxes"](%res.1, %2801)
          %2818 : Tensor?[] = prim::ListConstruct(%keep.23)
          %2819 : Tensor = aten::index(%scores_per_img, %2818) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\proposal_generator\proposal_utils.py:124:32
           = prim::SetAttr[name="_objectness_logits"](%res.1, %2819)
          %2820 : __torch__.detectron2.export.torchscript_patch11.ScriptedInstances11[] = aten::append(%proposals.1, %res.1) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\proposal_generator\proposal_utils.py:125:8
          -> (%55)
      %2821 : Tensor = prim::Exit(%2441)
      %2822 : (__torch__.detectron2.export.torchscript_patch11.ScriptedInstances11[], Dict(str, Tensor)) = prim::TupleConstruct(%proposals.1, %losses.1)
      %proposals.2 : __torch__.detectron2.export.torchscript_patch11.ScriptedInstances11[], %2824 : Dict(str, Tensor) = prim::TupleUnpack(%2822)
      %roi_heads.1 : __torch__.detectron2.modeling.roi_heads.roi_heads.___torch_mangle_408.StandardROIHeads = prim::GetAttr[name="roi_heads"](%model)
      %features.5 : Tensor[] = prim::ListConstruct()
      %box_in_features : str[] = prim::GetAttr[name="box_in_features"](%roi_heads.1)
      %2828 : int = aten::len(%box_in_features) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\roi_heads\roi_heads.py:797:19
       = prim::Loop(%2828, %55) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\roi_heads\roi_heads.py:797:19
        block0(%2829 : int):
          %f.1 : str = aten::__getitem__(%box_in_features, %2829) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\roi_heads\roi_heads.py:797:19
          %2831 : Tensor = aten::__getitem__(%features.1, %f.1) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\roi_heads\roi_heads.py:797:20
          %2832 : Tensor[] = aten::append(%features.5, %2831) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\roi_heads\roi_heads.py:797:19
          -> (%55)
      %box_pooler : __torch__.detectron2.modeling.poolers.___torch_mangle_400.ROIPooler = prim::GetAttr[name="box_pooler"](%roi_heads.1)
      %2834 : __torch__.detectron2.structures.boxes.Boxes[] = prim::ListConstruct()
      %2835 : int = aten::len(%proposals.2) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\roi_heads\roi_heads.py:798:49
       = prim::Loop(%2835, %55) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\roi_heads\roi_heads.py:798:49
        block0(%2836 : int):
          %x.8 : __torch__.detectron2.export.torchscript_patch11.ScriptedInstances11 = aten::__getitem__(%proposals.2, %2836) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\roi_heads\roi_heads.py:798:49
          %2838 : __torch__.detectron2.structures.boxes.Boxes = prim::Uninitialized()
          %_proposal_boxes.3 : __torch__.detectron2.structures.boxes.Boxes? = prim::GetAttr[name="_proposal_boxes"](%x.8)
          %2840 : bool = aten::__isnot__(%_proposal_boxes.3, %54) # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:40:15
          %t.1 : __torch__.detectron2.structures.boxes.Boxes = prim::If(%2840) # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:40:8
            block0():
              %t.8 : __torch__.detectron2.structures.boxes.Boxes = prim::unchecked_cast(%_proposal_boxes.3)
              -> (%t.8)
            block1():
               = prim::RaiseException(%21, %54) # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:40:8
              -> (%2838)
          %2843 : __torch__.detectron2.structures.boxes.Boxes[] = aten::append(%2834, %t.1) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\roi_heads\roi_heads.py:798:49
          -> (%55)
      %2844 : int = aten::len(%features.5) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\poolers.py:206:12
      %2845 : bool = aten::eq(%2844, %53) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\poolers.py:206:12
       = prim::If(%2845) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\poolers.py:205:8
        block0():
          -> ()
        block1():
          %2846 : int = aten::len(%features.5) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\poolers.py:208:35
          %2847 : str = aten::format(%17, %53, %2846) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\poolers.py:207:11
          %2848 : str = aten::add(%49, %2847) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\poolers.py:205:8
           = prim::RaiseException(%2848, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\poolers.py:205:8
          -> ()
      %2849 : int = aten::len(%2834) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\poolers.py:211:15
      %2850 : Tensor = aten::__getitem__(%features.5, %48) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\poolers.py:211:33
      %2851 : int = aten::size(%2850, %48) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\poolers.py:211:33
      %2852 : bool = aten::eq(%2849, %2851) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\poolers.py:211:15
       = prim::If(%2852) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\poolers.py:211:8
        block0():
          -> ()
        block1():
          %2853 : Tensor = aten::__getitem__(%features.5, %48) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\poolers.py:214:12
          %2854 : int = aten::size(%2853, %48) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\poolers.py:214:12
          %2855 : int = aten::len(%2834) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\poolers.py:214:26
          %2856 : str = aten::format(%16, %2854, %2855) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\poolers.py:213:11
          %2857 : str = aten::add(%49, %2856) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\poolers.py:211:8
           = prim::RaiseException(%2857, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\poolers.py:211:8
          -> ()
      %2858 : int = aten::len(%2834) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\poolers.py:216:11
      %2859 : bool = aten::eq(%2858, %48) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\poolers.py:216:11
      %box_features.1 : Tensor = prim::If(%2859) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\poolers.py:216:8
        block0():
          %2861 : Tensor = aten::__getitem__(%features.5, %48) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\poolers.py:218:20
          %2862 : int[] = aten::size(%2861) # <string>:13:9
          %2863 : int = aten::__getitem__(%2862, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\poolers.py:218:20
          %output_size.1 : (int, int) = prim::GetAttr[name="output_size"](%box_pooler)
          %2865 : int, %2866 : int = prim::TupleUnpack(%output_size.1)
          %2867 : Tensor = aten::__getitem__(%features.5, %48) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\poolers.py:218:62
          %2868 : Device = prim::device(%2867)
          %2869 : Tensor = aten::__getitem__(%features.5, %48) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\poolers.py:218:81
          %2870 : int = prim::dtype(%2869)
          %2871 : int[] = prim::ListConstruct(%48, %2863, %2865, %2866)
          %2872 : Tensor = aten::zeros(%2871, %2870, %54, %2868, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\poolers.py:217:19
          -> (%2872)
        block1():
          %2873 : Tensor[] = prim::ListConstruct()
          %2874 : int = aten::len(%2834) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\poolers.py:84:22
           = prim::Loop(%2874, %55) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\poolers.py:84:22
            block0(%2875 : int):
              %x.10 : __torch__.detectron2.structures.boxes.Boxes = aten::__getitem__(%2834, %2875) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\poolers.py:84:22
              %tensor.24 : Tensor = prim::GetAttr[name="tensor"](%x.10)
              %2878 : Tensor[] = aten::append(%2873, %tensor.24) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\poolers.py:84:22
              -> (%55)
          %boxes.2 : Tensor = aten::cat(%2873, %48) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\poolers.py:84:12
          %2880 : int[] = prim::ListConstruct()
          %2881 : int = aten::len(%2834) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\poolers.py:86:29
           = prim::Loop(%2881, %55) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\poolers.py:86:29
            block0(%2882 : int):
              %x.6 : __torch__.detectron2.structures.boxes.Boxes = aten::__getitem__(%2834, %2882) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\poolers.py:86:29
              %tensor.20 : Tensor = prim::GetAttr[name="tensor"](%x.6)
              %2885 : int[] = aten::size(%tensor.20) # <string>:13:9
              %2886 : int = aten::__getitem__(%2885, %48) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:238:15
              %2887 : int[] = aten::append(%2880, %2886) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\poolers.py:86:29
              -> (%55)
          %2888 : Device = prim::device(%boxes.2)
          %sizes.1 : Tensor = aten::as_tensor(%2880, %54, %2888) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:25:15
          %2890 : int = aten::len(%2834) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\poolers.py:88:21
          %2891 : int = prim::dtype(%boxes.2)
          %2892 : Device = prim::device(%boxes.2)
          %2893 : Tensor = aten::arange(%2890, %2891, %54, %2892, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\poolers.py:88:8
          %indices.1 : Tensor = aten::repeat_interleave(%2893, %sizes.1, %54, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\poolers.py:87:14
          %2895 : Tensor = aten::slice(%indices.1, %48, %54, %54, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\poolers.py:90:16
          %2896 : Tensor = aten::unsqueeze(%2895, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\poolers.py:90:16
          %2897 : Tensor[] = prim::ListConstruct(%2896, %boxes.2)
          %pooler_fmt_boxes.13 : Tensor = aten::cat(%2897, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:45:11
          %min_level.5 : int = prim::GetAttr[name="min_level"](%box_pooler)
          %max_level.5 : int = prim::GetAttr[name="max_level"](%box_pooler)
          %canonical_box_size.5 : int = prim::GetAttr[name="canonical_box_size"](%box_pooler)
          %canonical_level.5 : int = prim::GetAttr[name="canonical_level"](%box_pooler)
          %2903 : Tensor[] = prim::ListConstruct()
          %2904 : int = aten::len(%2834) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\poolers.py:50:31
           = prim::Loop(%2904, %55) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\poolers.py:50:31
            block0(%2905 : int):
              %boxes.3 : __torch__.detectron2.structures.boxes.Boxes = aten::__getitem__(%2834, %2905) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\poolers.py:50:31
              %tensor.22 : Tensor = prim::GetAttr[name="tensor"](%boxes.3)
              %2908 : Tensor = aten::slice(%tensor.22, %48, %54, %54, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:178:16
              %2909 : Tensor = aten::select(%2908, %43, %46) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:178:16
              %2910 : Tensor = aten::slice(%tensor.22, %48, %54, %54, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:178:28
              %2911 : Tensor = aten::select(%2910, %43, %48) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:178:28
              %2912 : Tensor = aten::sub(%2909, %2911, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:178:16
              %2913 : Tensor = aten::slice(%tensor.22, %48, %54, %54, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:178:42
              %2914 : Tensor = aten::select(%2913, %43, %36) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:178:42
              %2915 : Tensor = aten::slice(%tensor.22, %48, %54, %54, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:178:54
              %2916 : Tensor = aten::select(%2915, %43, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:178:54
              %2917 : Tensor = aten::sub(%2914, %2916, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:178:42
              %area.1 : Tensor = aten::mul(%2912, %2917) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:178:16
              %2919 : Tensor[] = aten::append(%2903, %area.1) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\poolers.py:50:31
              -> (%55)
          %2920 : int = aten::len(%2903) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:43:7
          %2921 : bool = aten::eq(%2920, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:43:7
          %2922 : Tensor = prim::If(%2921) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:43:4
            block0():
              %2923 : Tensor = aten::__getitem__(%2903, %48) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:44:15
              -> (%2923)
            block1():
              %2924 : Tensor = aten::cat(%2903, %48) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:45:11
              -> (%2924)
          %box_sizes.1 : Tensor = aten::sqrt(%2922) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\poolers.py:50:16
          %2926 : Tensor = aten::div(%box_sizes.1, %canonical_box_size.5) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\poolers.py:53:37
          %2927 : Tensor = aten::add(%2926, %18, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\poolers.py:53:37
          %2928 : Tensor = aten::log2(%2927) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\poolers.py:53:26
          %2929 : Tensor = aten::add(%2928, %canonical_level.5, %43) # <string>:5:9
          %level_assignments.1 : Tensor = aten::floor(%2929) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\poolers.py:52:24
          %level_assignments.5 : Tensor = aten::clamp(%level_assignments.1, %min_level.5, %max_level.5) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\poolers.py:57:24
          %2932 : Tensor = aten::to(%level_assignments.5, %53, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\poolers.py:58:11
          %level_assignments.13 : Tensor = aten::sub(%2932, %min_level.5, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\poolers.py:58:11
          %num_boxes.7 : int = aten::size(%pooler_fmt_boxes.13, %48) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\poolers.py:230:20
          %2935 : Tensor = aten::__getitem__(%features.5, %48) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\poolers.py:231:23
          %2936 : int[] = aten::size(%2935) # <string>:13:9
          %num_channels.7 : int = aten::__getitem__(%2936, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\poolers.py:231:23
          %output_size.17 : (int, int) = prim::GetAttr[name="output_size"](%box_pooler)
          %output_size.21 : int = prim::TupleIndex(%output_size.17, %48)
          %2940 : Tensor = aten::__getitem__(%features.5, %48) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\poolers.py:234:24
          %dtype.7 : int = prim::dtype(%2940)
          %2942 : Tensor = aten::__getitem__(%features.5, %48) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\poolers.py:234:36
          %device.7 : Device = prim::device(%2942)
          %2944 : int[] = prim::ListConstruct(%num_boxes.7, %num_channels.7, %output_size.21, %output_size.21)
          %output.15 : Tensor = aten::zeros(%2944, %dtype.7, %54, %device.7, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\poolers.py:235:17
          %level_poolers.13 : __torch__.torch.nn.modules.container.___torch_mangle_399.ModuleList = prim::GetAttr[name="level_poolers"](%box_pooler)
          %_0.11 : __torch__.detectron2.layers.roi_align.___torch_mangle_398.ROIAlign = prim::GetAttr[name="0"](%level_poolers.13)
          %_1.11 : __torch__.detectron2.layers.roi_align.___torch_mangle_398.ROIAlign = prim::GetAttr[name="1"](%level_poolers.13)
          %_2.11 : __torch__.detectron2.layers.roi_align.___torch_mangle_398.ROIAlign = prim::GetAttr[name="2"](%level_poolers.13)
          %_3.11 : __torch__.detectron2.layers.roi_align.___torch_mangle_398.ROIAlign = prim::GetAttr[name="3"](%level_poolers.13)
          %2951 : Tensor = aten::eq(%level_assignments.13, %48) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\poolers.py:240:33
          %2952 : int = aten::dim(%2951) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:128:11
          %2953 : bool = aten::eq(%2952, %48) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:128:11
          %2954 : Tensor[] = prim::If(%2953) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:128:8
            block0():
              %2955 : Tensor = aten::unsqueeze(%2951, %48) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:129:19
              %2956 : Tensor = aten::nonzero(%2955) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:129:19
              %2957 : Tensor[] = aten::unbind(%2956, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:129:19
              -> (%2957)
            block1():
              %2958 : Tensor = aten::nonzero(%2951) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:130:15
              %2959 : Tensor[] = aten::unbind(%2958, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:130:15
              -> (%2959)
          %inds.55 : Tensor = aten::__getitem__(%2954, %48) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\poolers.py:240:19
          %2961 : Tensor?[] = prim::ListConstruct(%inds.55)
          %pooler_fmt_boxes_level.31 : Tensor = aten::index(%pooler_fmt_boxes.13, %2961) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\poolers.py:241:37
          %2963 : Tensor = aten::__getitem__(%features.5, %48) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\poolers.py:243:46
          %2964 : int = aten::dim(%pooler_fmt_boxes_level.31) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\roi_align.py:55:15
          %2965 : bool = aten::eq(%2964, %46) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\roi_align.py:55:15
          %2966 : bool = prim::If(%2965) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\roi_align.py:55:15
            block0():
              %2967 : int = aten::size(%pooler_fmt_boxes_level.31, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\roi_align.py:55:35
              %2968 : bool = aten::eq(%2967, %40) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\roi_align.py:55:35
              -> (%2968)
            block1():
              -> (%44)
           = prim::If(%2966) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\roi_align.py:55:8
            block0():
              -> ()
            block1():
               = prim::RaiseException(%49, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\roi_align.py:55:8
              -> ()
          %2969 : bool = prim::is_quantized(%2963)
          %input.10 : Tensor = prim::If(%2969) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\roi_align.py:56:8
            block0():
              %input.12 : Tensor = aten::dequantize(%2963) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\roi_align.py:57:20
              -> (%input.12)
            block1():
              -> (%2963)
          %2972 : int = prim::dtype(%input.10)
          %2973 : Tensor = aten::to(%pooler_fmt_boxes_level.31, %2972, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\roi_align.py:60:12
          %output_size.4 : (int, int) = prim::GetAttr[name="output_size"](%_0.11)
          %spatial_scale.3 : float = prim::GetAttr[name="spatial_scale"](%_0.11)
          %sampling_ratio.3 : int = prim::GetAttr[name="sampling_ratio"](%_0.11)
          %aligned.3 : bool = prim::GetAttr[name="aligned"](%_0.11)
          %2978 : int, %2979 : int = prim::TupleUnpack(%output_size.4)
          %2980 : bool = prim::isinstance[types=[list, tuple]](%2973)
           = prim::If(%2980) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:29:4
            block0():
              %boxes.10 : Tensor[] = prim::unchecked_cast(%2973)
              %2982 : int = aten::len(%boxes.10) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:30:8
               = prim::Loop(%2982, %55) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:30:8
                block0(%2983 : int):
                  %_tensor.4 : Tensor = aten::__getitem__(%boxes.10, %2983) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:30:8
                  %2985 : int = aten::size(%_tensor.4, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:32:16
                  %2986 : bool = aten::eq(%2985, %53) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:32:16
                   = prim::If(%2986) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:31:12
                    block0():
                      -> ()
                    block1():
                       = prim::RaiseException(%19, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:31:12
                      -> ()
                  -> (%55)
              -> ()
            block1():
              %2987 : int = aten::size(%2973, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:35:15
              %2988 : bool = aten::eq(%2987, %40) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:35:15
               = prim::If(%2988) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:35:8
                block0():
                  -> ()
                block1():
                   = prim::RaiseException(%20, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:35:8
                  -> ()
              -> ()
          %2989 : bool = prim::isinstance[types=[Tensor]](%2973)
          %2990 : bool = aten::__not__(%2989) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\roi_align.py:59:7
          %rois.14 : Tensor = prim::If(%2990) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\roi_align.py:59:4
            block0():
              %rois.16 : Tensor[] = prim::unchecked_cast(%2973)
              %2993 : Tensor[] = prim::ListConstruct()
              %2994 : int = aten::len(%rois.16) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:19:24
               = prim::Loop(%2994, %55) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:19:24
                block0(%2995 : int):
                  %b.8 : Tensor = aten::__getitem__(%rois.16, %2995) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:19:24
                  %2997 : Tensor[] = aten::append(%2993, %b.8) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:19:24
                  -> (%55)
              %2998 : int = aten::len(%2993) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:13:7
              %2999 : bool = aten::eq(%2998, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:13:7
              %concat_boxes.4 : Tensor = prim::If(%2999) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:13:4
                block0():
                  %3001 : Tensor = aten::__getitem__(%2993, %48) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:14:15
                  -> (%3001)
                block1():
                  %3002 : Tensor = aten::cat(%2993, %48) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:15:11
                  -> (%3002)
              %temp.4 : Tensor[] = prim::ListConstruct()
              %3004 : int = aten::len(%rois.16) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:21:4
              %3005 : int[] = prim::ListConstruct(%23, %3004)
              %3006 : int = prim::min(%3005) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:21:4
               = prim::Loop(%3006, %55) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:21:4
                block0(%i.4 : int):
                  %b.10 : Tensor = aten::__getitem__(%rois.16, %i.4) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:21:4
                  %3009 : Tensor = aten::slice(%b.10, %48, %54, %54, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:22:36
                  %3010 : Tensor = aten::slice(%3009, %43, %54, %43, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:22:36
                  %3011 : Tensor = aten::full_like(%3010, %i.4, %54, %54, %54, %54, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:22:20
                  %3012 : Tensor[] = aten::append(%temp.4, %3011) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:22:8
                  -> (%55)
              %3013 : int = aten::len(%temp.4) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:13:7
              %3014 : bool = aten::eq(%3013, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:13:7
              %ids.4 : Tensor = prim::If(%3014) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:13:4
                block0():
                  %3016 : Tensor = aten::__getitem__(%temp.4, %48) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:14:15
                  -> (%3016)
                block1():
                  %3017 : Tensor = aten::cat(%temp.4, %48) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:15:11
                  -> (%3017)
              %3018 : Tensor[] = prim::ListConstruct(%ids.4, %concat_boxes.4)
              %rois.18 : Tensor = aten::cat(%3018, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:24:11
              -> (%rois.18)
            block1():
              -> (%2973)
          %3020 : Tensor = torchvision::roi_align(%input.10, %rois.14, %spatial_scale.3, %2978, %2979, %sampling_ratio.3, %aligned.3) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\roi_align.py:61:11
          %3021 : Tensor?[] = prim::ListConstruct(%inds.55)
          %3022 : Tensor = aten::index_put_(%output.15, %3021, %3020, %44) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\poolers.py:243:12
          %3023 : Tensor = aten::eq(%level_assignments.13, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\poolers.py:240:33
          %3024 : int = aten::dim(%3023) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:128:11
          %3025 : bool = aten::eq(%3024, %48) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:128:11
          %3026 : Tensor[] = prim::If(%3025) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:128:8
            block0():
              %3027 : Tensor = aten::unsqueeze(%3023, %48) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:129:19
              %3028 : Tensor = aten::nonzero(%3027) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:129:19
              %3029 : Tensor[] = aten::unbind(%3028, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:129:19
              -> (%3029)
            block1():
              %3030 : Tensor = aten::nonzero(%3023) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:130:15
              %3031 : Tensor[] = aten::unbind(%3030, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:130:15
              -> (%3031)
          %inds.59 : Tensor = aten::__getitem__(%3026, %48) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\poolers.py:240:19
          %3033 : Tensor?[] = prim::ListConstruct(%inds.59)
          %pooler_fmt_boxes_level.35 : Tensor = aten::index(%pooler_fmt_boxes.13, %3033) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\poolers.py:241:37
          %3035 : Tensor = aten::__getitem__(%features.5, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\poolers.py:243:46
          %3036 : int = aten::dim(%pooler_fmt_boxes_level.35) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\roi_align.py:55:15
          %3037 : bool = aten::eq(%3036, %46) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\roi_align.py:55:15
          %3038 : bool = prim::If(%3037) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\roi_align.py:55:15
            block0():
              %3039 : int = aten::size(%pooler_fmt_boxes_level.35, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\roi_align.py:55:35
              %3040 : bool = aten::eq(%3039, %40) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\roi_align.py:55:35
              -> (%3040)
            block1():
              -> (%44)
           = prim::If(%3038) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\roi_align.py:55:8
            block0():
              -> ()
            block1():
               = prim::RaiseException(%49, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\roi_align.py:55:8
              -> ()
          %3041 : bool = prim::is_quantized(%3035)
          %input.14 : Tensor = prim::If(%3041) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\roi_align.py:56:8
            block0():
              %input.16 : Tensor = aten::dequantize(%3035) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\roi_align.py:57:20
              -> (%input.16)
            block1():
              -> (%3035)
          %3044 : int = prim::dtype(%input.14)
          %3045 : Tensor = aten::to(%pooler_fmt_boxes_level.35, %3044, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\roi_align.py:60:12
          %output_size.6 : (int, int) = prim::GetAttr[name="output_size"](%_1.11)
          %spatial_scale.5 : float = prim::GetAttr[name="spatial_scale"](%_1.11)
          %sampling_ratio.5 : int = prim::GetAttr[name="sampling_ratio"](%_1.11)
          %aligned.5 : bool = prim::GetAttr[name="aligned"](%_1.11)
          %3050 : int, %3051 : int = prim::TupleUnpack(%output_size.6)
          %3052 : bool = prim::isinstance[types=[list, tuple]](%3045)
           = prim::If(%3052) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:29:4
            block0():
              %boxes.12 : Tensor[] = prim::unchecked_cast(%3045)
              %3054 : int = aten::len(%boxes.12) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:30:8
               = prim::Loop(%3054, %55) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:30:8
                block0(%3055 : int):
                  %_tensor.6 : Tensor = aten::__getitem__(%boxes.12, %3055) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:30:8
                  %3057 : int = aten::size(%_tensor.6, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:32:16
                  %3058 : bool = aten::eq(%3057, %53) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:32:16
                   = prim::If(%3058) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:31:12
                    block0():
                      -> ()
                    block1():
                       = prim::RaiseException(%19, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:31:12
                      -> ()
                  -> (%55)
              -> ()
            block1():
              %3059 : int = aten::size(%3045, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:35:15
              %3060 : bool = aten::eq(%3059, %40) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:35:15
               = prim::If(%3060) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:35:8
                block0():
                  -> ()
                block1():
                   = prim::RaiseException(%20, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:35:8
                  -> ()
              -> ()
          %3061 : bool = prim::isinstance[types=[Tensor]](%3045)
          %3062 : bool = aten::__not__(%3061) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\roi_align.py:59:7
          %rois.20 : Tensor = prim::If(%3062) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\roi_align.py:59:4
            block0():
              %rois.22 : Tensor[] = prim::unchecked_cast(%3045)
              %3065 : Tensor[] = prim::ListConstruct()
              %3066 : int = aten::len(%rois.22) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:19:24
               = prim::Loop(%3066, %55) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:19:24
                block0(%3067 : int):
                  %b.12 : Tensor = aten::__getitem__(%rois.22, %3067) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:19:24
                  %3069 : Tensor[] = aten::append(%3065, %b.12) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:19:24
                  -> (%55)
              %3070 : int = aten::len(%3065) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:13:7
              %3071 : bool = aten::eq(%3070, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:13:7
              %concat_boxes.6 : Tensor = prim::If(%3071) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:13:4
                block0():
                  %3073 : Tensor = aten::__getitem__(%3065, %48) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:14:15
                  -> (%3073)
                block1():
                  %3074 : Tensor = aten::cat(%3065, %48) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:15:11
                  -> (%3074)
              %temp.6 : Tensor[] = prim::ListConstruct()
              %3076 : int = aten::len(%rois.22) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:21:4
              %3077 : int[] = prim::ListConstruct(%23, %3076)
              %3078 : int = prim::min(%3077) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:21:4
               = prim::Loop(%3078, %55) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:21:4
                block0(%i.6 : int):
                  %b.14 : Tensor = aten::__getitem__(%rois.22, %i.6) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:21:4
                  %3081 : Tensor = aten::slice(%b.14, %48, %54, %54, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:22:36
                  %3082 : Tensor = aten::slice(%3081, %43, %54, %43, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:22:36
                  %3083 : Tensor = aten::full_like(%3082, %i.6, %54, %54, %54, %54, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:22:20
                  %3084 : Tensor[] = aten::append(%temp.6, %3083) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:22:8
                  -> (%55)
              %3085 : int = aten::len(%temp.6) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:13:7
              %3086 : bool = aten::eq(%3085, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:13:7
              %ids.6 : Tensor = prim::If(%3086) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:13:4
                block0():
                  %3088 : Tensor = aten::__getitem__(%temp.6, %48) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:14:15
                  -> (%3088)
                block1():
                  %3089 : Tensor = aten::cat(%temp.6, %48) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:15:11
                  -> (%3089)
              %3090 : Tensor[] = prim::ListConstruct(%ids.6, %concat_boxes.6)
              %rois.24 : Tensor = aten::cat(%3090, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:24:11
              -> (%rois.24)
            block1():
              -> (%3045)
          %3092 : Tensor = torchvision::roi_align(%input.14, %rois.20, %spatial_scale.5, %3050, %3051, %sampling_ratio.5, %aligned.5) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\roi_align.py:61:11
          %3093 : Tensor?[] = prim::ListConstruct(%inds.59)
          %3094 : Tensor = aten::index_put_(%output.15, %3093, %3092, %44) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\poolers.py:243:12
          %3095 : Tensor = aten::eq(%level_assignments.13, %46) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\poolers.py:240:33
          %3096 : int = aten::dim(%3095) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:128:11
          %3097 : bool = aten::eq(%3096, %48) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:128:11
          %3098 : Tensor[] = prim::If(%3097) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:128:8
            block0():
              %3099 : Tensor = aten::unsqueeze(%3095, %48) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:129:19
              %3100 : Tensor = aten::nonzero(%3099) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:129:19
              %3101 : Tensor[] = aten::unbind(%3100, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:129:19
              -> (%3101)
            block1():
              %3102 : Tensor = aten::nonzero(%3095) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:130:15
              %3103 : Tensor[] = aten::unbind(%3102, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:130:15
              -> (%3103)
          %inds.63 : Tensor = aten::__getitem__(%3098, %48) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\poolers.py:240:19
          %3105 : Tensor?[] = prim::ListConstruct(%inds.63)
          %pooler_fmt_boxes_level.39 : Tensor = aten::index(%pooler_fmt_boxes.13, %3105) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\poolers.py:241:37
          %3107 : Tensor = aten::__getitem__(%features.5, %46) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\poolers.py:243:46
          %3108 : int = aten::dim(%pooler_fmt_boxes_level.39) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\roi_align.py:55:15
          %3109 : bool = aten::eq(%3108, %46) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\roi_align.py:55:15
          %3110 : bool = prim::If(%3109) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\roi_align.py:55:15
            block0():
              %3111 : int = aten::size(%pooler_fmt_boxes_level.39, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\roi_align.py:55:35
              %3112 : bool = aten::eq(%3111, %40) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\roi_align.py:55:35
              -> (%3112)
            block1():
              -> (%44)
           = prim::If(%3110) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\roi_align.py:55:8
            block0():
              -> ()
            block1():
               = prim::RaiseException(%49, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\roi_align.py:55:8
              -> ()
          %3113 : bool = prim::is_quantized(%3107)
          %input.18 : Tensor = prim::If(%3113) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\roi_align.py:56:8
            block0():
              %input.20 : Tensor = aten::dequantize(%3107) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\roi_align.py:57:20
              -> (%input.20)
            block1():
              -> (%3107)
          %3116 : int = prim::dtype(%input.18)
          %3117 : Tensor = aten::to(%pooler_fmt_boxes_level.39, %3116, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\roi_align.py:60:12
          %output_size.8 : (int, int) = prim::GetAttr[name="output_size"](%_2.11)
          %spatial_scale.7 : float = prim::GetAttr[name="spatial_scale"](%_2.11)
          %sampling_ratio.7 : int = prim::GetAttr[name="sampling_ratio"](%_2.11)
          %aligned.7 : bool = prim::GetAttr[name="aligned"](%_2.11)
          %3122 : int, %3123 : int = prim::TupleUnpack(%output_size.8)
          %3124 : bool = prim::isinstance[types=[list, tuple]](%3117)
           = prim::If(%3124) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:29:4
            block0():
              %boxes.14 : Tensor[] = prim::unchecked_cast(%3117)
              %3126 : int = aten::len(%boxes.14) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:30:8
               = prim::Loop(%3126, %55) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:30:8
                block0(%3127 : int):
                  %_tensor.8 : Tensor = aten::__getitem__(%boxes.14, %3127) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:30:8
                  %3129 : int = aten::size(%_tensor.8, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:32:16
                  %3130 : bool = aten::eq(%3129, %53) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:32:16
                   = prim::If(%3130) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:31:12
                    block0():
                      -> ()
                    block1():
                       = prim::RaiseException(%19, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:31:12
                      -> ()
                  -> (%55)
              -> ()
            block1():
              %3131 : int = aten::size(%3117, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:35:15
              %3132 : bool = aten::eq(%3131, %40) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:35:15
               = prim::If(%3132) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:35:8
                block0():
                  -> ()
                block1():
                   = prim::RaiseException(%20, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:35:8
                  -> ()
              -> ()
          %3133 : bool = prim::isinstance[types=[Tensor]](%3117)
          %3134 : bool = aten::__not__(%3133) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\roi_align.py:59:7
          %rois.26 : Tensor = prim::If(%3134) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\roi_align.py:59:4
            block0():
              %rois.28 : Tensor[] = prim::unchecked_cast(%3117)
              %3137 : Tensor[] = prim::ListConstruct()
              %3138 : int = aten::len(%rois.28) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:19:24
               = prim::Loop(%3138, %55) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:19:24
                block0(%3139 : int):
                  %b.16 : Tensor = aten::__getitem__(%rois.28, %3139) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:19:24
                  %3141 : Tensor[] = aten::append(%3137, %b.16) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:19:24
                  -> (%55)
              %3142 : int = aten::len(%3137) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:13:7
              %3143 : bool = aten::eq(%3142, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:13:7
              %concat_boxes.8 : Tensor = prim::If(%3143) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:13:4
                block0():
                  %3145 : Tensor = aten::__getitem__(%3137, %48) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:14:15
                  -> (%3145)
                block1():
                  %3146 : Tensor = aten::cat(%3137, %48) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:15:11
                  -> (%3146)
              %temp.8 : Tensor[] = prim::ListConstruct()
              %3148 : int = aten::len(%rois.28) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:21:4
              %3149 : int[] = prim::ListConstruct(%23, %3148)
              %3150 : int = prim::min(%3149) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:21:4
               = prim::Loop(%3150, %55) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:21:4
                block0(%i.8 : int):
                  %b.18 : Tensor = aten::__getitem__(%rois.28, %i.8) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:21:4
                  %3153 : Tensor = aten::slice(%b.18, %48, %54, %54, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:22:36
                  %3154 : Tensor = aten::slice(%3153, %43, %54, %43, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:22:36
                  %3155 : Tensor = aten::full_like(%3154, %i.8, %54, %54, %54, %54, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:22:20
                  %3156 : Tensor[] = aten::append(%temp.8, %3155) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:22:8
                  -> (%55)
              %3157 : int = aten::len(%temp.8) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:13:7
              %3158 : bool = aten::eq(%3157, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:13:7
              %ids.8 : Tensor = prim::If(%3158) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:13:4
                block0():
                  %3160 : Tensor = aten::__getitem__(%temp.8, %48) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:14:15
                  -> (%3160)
                block1():
                  %3161 : Tensor = aten::cat(%temp.8, %48) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:15:11
                  -> (%3161)
              %3162 : Tensor[] = prim::ListConstruct(%ids.8, %concat_boxes.8)
              %rois.30 : Tensor = aten::cat(%3162, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:24:11
              -> (%rois.30)
            block1():
              -> (%3117)
          %3164 : Tensor = torchvision::roi_align(%input.18, %rois.26, %spatial_scale.7, %3122, %3123, %sampling_ratio.7, %aligned.7) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\roi_align.py:61:11
          %3165 : Tensor?[] = prim::ListConstruct(%inds.63)
          %3166 : Tensor = aten::index_put_(%output.15, %3165, %3164, %44) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\poolers.py:243:12
          %3167 : Tensor = aten::eq(%level_assignments.13, %36) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\poolers.py:240:33
          %3168 : int = aten::dim(%3167) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:128:11
          %3169 : bool = aten::eq(%3168, %48) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:128:11
          %3170 : Tensor[] = prim::If(%3169) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:128:8
            block0():
              %3171 : Tensor = aten::unsqueeze(%3167, %48) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:129:19
              %3172 : Tensor = aten::nonzero(%3171) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:129:19
              %3173 : Tensor[] = aten::unbind(%3172, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:129:19
              -> (%3173)
            block1():
              %3174 : Tensor = aten::nonzero(%3167) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:130:15
              %3175 : Tensor[] = aten::unbind(%3174, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:130:15
              -> (%3175)
          %inds.67 : Tensor = aten::__getitem__(%3170, %48) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\poolers.py:240:19
          %3177 : Tensor?[] = prim::ListConstruct(%inds.67)
          %pooler_fmt_boxes_level.43 : Tensor = aten::index(%pooler_fmt_boxes.13, %3177) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\poolers.py:241:37
          %3179 : Tensor = aten::__getitem__(%features.5, %36) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\poolers.py:243:46
          %3180 : int = aten::dim(%pooler_fmt_boxes_level.43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\roi_align.py:55:15
          %3181 : bool = aten::eq(%3180, %46) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\roi_align.py:55:15
          %3182 : bool = prim::If(%3181) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\roi_align.py:55:15
            block0():
              %3183 : int = aten::size(%pooler_fmt_boxes_level.43, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\roi_align.py:55:35
              %3184 : bool = aten::eq(%3183, %40) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\roi_align.py:55:35
              -> (%3184)
            block1():
              -> (%44)
           = prim::If(%3182) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\roi_align.py:55:8
            block0():
              -> ()
            block1():
               = prim::RaiseException(%49, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\roi_align.py:55:8
              -> ()
          %3185 : bool = prim::is_quantized(%3179)
          %input : Tensor = prim::If(%3185) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\roi_align.py:56:8
            block0():
              %input.7 : Tensor = aten::dequantize(%3179) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\roi_align.py:57:20
              -> (%input.7)
            block1():
              -> (%3179)
          %3188 : int = prim::dtype(%input)
          %3189 : Tensor = aten::to(%pooler_fmt_boxes_level.43, %3188, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\roi_align.py:60:12
          %output_size : (int, int) = prim::GetAttr[name="output_size"](%_3.11)
          %spatial_scale : float = prim::GetAttr[name="spatial_scale"](%_3.11)
          %sampling_ratio : int = prim::GetAttr[name="sampling_ratio"](%_3.11)
          %aligned : bool = prim::GetAttr[name="aligned"](%_3.11)
          %3194 : int, %3195 : int = prim::TupleUnpack(%output_size)
          %3196 : bool = prim::isinstance[types=[list, tuple]](%3189)
           = prim::If(%3196) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:29:4
            block0():
              %boxes.8 : Tensor[] = prim::unchecked_cast(%3189)
              %3198 : int = aten::len(%boxes.8) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:30:8
               = prim::Loop(%3198, %55) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:30:8
                block0(%3199 : int):
                  %_tensor.1 : Tensor = aten::__getitem__(%boxes.8, %3199) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:30:8
                  %3201 : int = aten::size(%_tensor.1, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:32:16
                  %3202 : bool = aten::eq(%3201, %53) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:32:16
                   = prim::If(%3202) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:31:12
                    block0():
                      -> ()
                    block1():
                       = prim::RaiseException(%19, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:31:12
                      -> ()
                  -> (%55)
              -> ()
            block1():
              %3203 : int = aten::size(%3189, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:35:15
              %3204 : bool = aten::eq(%3203, %40) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:35:15
               = prim::If(%3204) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:35:8
                block0():
                  -> ()
                block1():
                   = prim::RaiseException(%20, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:35:8
                  -> ()
              -> ()
          %3205 : bool = prim::isinstance[types=[Tensor]](%3189)
          %3206 : bool = aten::__not__(%3205) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\roi_align.py:59:7
          %rois : Tensor = prim::If(%3206) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\roi_align.py:59:4
            block0():
              %rois.5 : Tensor[] = prim::unchecked_cast(%3189)
              %3209 : Tensor[] = prim::ListConstruct()
              %3210 : int = aten::len(%rois.5) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:19:24
               = prim::Loop(%3210, %55) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:19:24
                block0(%3211 : int):
                  %b.1 : Tensor = aten::__getitem__(%rois.5, %3211) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:19:24
                  %3213 : Tensor[] = aten::append(%3209, %b.1) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:19:24
                  -> (%55)
              %3214 : int = aten::len(%3209) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:13:7
              %3215 : bool = aten::eq(%3214, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:13:7
              %concat_boxes.1 : Tensor = prim::If(%3215) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:13:4
                block0():
                  %3217 : Tensor = aten::__getitem__(%3209, %48) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:14:15
                  -> (%3217)
                block1():
                  %3218 : Tensor = aten::cat(%3209, %48) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:15:11
                  -> (%3218)
              %temp.1 : Tensor[] = prim::ListConstruct()
              %3220 : int = aten::len(%rois.5) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:21:4
              %3221 : int[] = prim::ListConstruct(%23, %3220)
              %3222 : int = prim::min(%3221) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:21:4
               = prim::Loop(%3222, %55) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:21:4
                block0(%i.1 : int):
                  %b.5 : Tensor = aten::__getitem__(%rois.5, %i.1) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:21:4
                  %3225 : Tensor = aten::slice(%b.5, %48, %54, %54, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:22:36
                  %3226 : Tensor = aten::slice(%3225, %43, %54, %43, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:22:36
                  %3227 : Tensor = aten::full_like(%3226, %i.1, %54, %54, %54, %54, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:22:20
                  %3228 : Tensor[] = aten::append(%temp.1, %3227) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:22:8
                  -> (%55)
              %3229 : int = aten::len(%temp.1) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:13:7
              %3230 : bool = aten::eq(%3229, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:13:7
              %ids.1 : Tensor = prim::If(%3230) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:13:4
                block0():
                  %3232 : Tensor = aten::__getitem__(%temp.1, %48) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:14:15
                  -> (%3232)
                block1():
                  %3233 : Tensor = aten::cat(%temp.1, %48) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:15:11
                  -> (%3233)
              %3234 : Tensor[] = prim::ListConstruct(%ids.1, %concat_boxes.1)
              %rois.11 : Tensor = aten::cat(%3234, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\_utils.py:24:11
              -> (%rois.11)
            block1():
              -> (%3189)
          %3236 : Tensor = torchvision::roi_align(%input, %rois, %spatial_scale, %3194, %3195, %sampling_ratio, %aligned) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\roi_align.py:61:11
          %3237 : Tensor?[] = prim::ListConstruct(%inds.67)
          %3238 : Tensor = aten::index_put_(%output.15, %3237, %3236, %44) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\poolers.py:243:12
          -> (%output.15)
      %box_head : __torch__.detectron2.modeling.roi_heads.box_head.___torch_mangle_404.FastRCNNConvFCHead = prim::GetAttr[name="box_head"](%roi_heads.1)
      %fc1 : __torch__.torch.nn.modules.linear.___torch_mangle_402.Linear = prim::GetAttr[name="fc1"](%box_head)
      %fc2 : __torch__.torch.nn.modules.linear.___torch_mangle_403.Linear = prim::GetAttr[name="fc2"](%box_head)
      %x.12 : Tensor = aten::flatten(%box_features.1, %43, %51) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\modules\flatten.py:45:15
      %weight.2 : Tensor = prim::GetAttr[name="weight"](%fc1)
      %bias.2 : Tensor = prim::GetAttr[name="bias"](%fc1)
      %x.9 : Tensor = aten::linear(%x.12, %weight.2, %bias.2) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\modules\linear.py:103:15
      %x.13 : Tensor = aten::relu(%x.9) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:1442:17
      %weight.4 : Tensor = prim::GetAttr[name="weight"](%fc2)
      %bias.4 : Tensor = prim::GetAttr[name="bias"](%fc2)
      %x.17 : Tensor = aten::linear(%x.13, %weight.4, %bias.4) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\modules\linear.py:103:15
      %box_features.5 : Tensor = aten::relu(%x.17) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:1442:17
      %box_predictor.1 : __torch__.detectron2.modeling.roi_heads.fast_rcnn.___torch_mangle_407.FastRCNNOutputLayers = prim::GetAttr[name="box_predictor"](%roi_heads.1)
      %3252 : int = aten::dim(%box_features.5) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\roi_heads\fast_rcnn.py:272:11
      %3253 : bool = aten::gt(%3252, %46) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\roi_heads\fast_rcnn.py:272:11
      %x : Tensor = prim::If(%3253) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\roi_heads\fast_rcnn.py:272:8
        block0():
          %x.7 : Tensor = aten::flatten(%box_features.5, %43, %51) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\roi_heads\fast_rcnn.py:273:16
          -> (%x.7)
        block1():
          -> (%box_features.5)
      %cls_score : __torch__.torch.nn.modules.linear.___torch_mangle_405.Linear = prim::GetAttr[name="cls_score"](%box_predictor.1)
      %weight.1 : Tensor = prim::GetAttr[name="weight"](%cls_score)
      %bias.1 : Tensor = prim::GetAttr[name="bias"](%cls_score)
      %scores.4 : Tensor = aten::linear(%x, %weight.1, %bias.1) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\modules\linear.py:103:15
      %bbox_pred : __torch__.torch.nn.modules.linear.___torch_mangle_406.Linear = prim::GetAttr[name="bbox_pred"](%box_predictor.1)
      %weight : Tensor = prim::GetAttr[name="weight"](%bbox_pred)
      %bias : Tensor = prim::GetAttr[name="bias"](%bbox_pred)
      %proposal_deltas.1 : Tensor = aten::linear(%x, %weight, %bias) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\modules\linear.py:103:15
      %predictions.1 : (Tensor, Tensor) = prim::TupleConstruct(%scores.4, %proposal_deltas.1)
      %box_predictor : __torch__.detectron2.modeling.roi_heads.fast_rcnn.___torch_mangle_407.FastRCNNOutputLayers = prim::GetAttr[name="box_predictor"](%roi_heads.1)
      %3266 : int = aten::len(%proposals.2) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\roi_heads\fast_rcnn.py:434:15
      %3267 : bool = aten::Bool(%3266) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\roi_heads\fast_rcnn.py:434:15
      %3268 : bool = aten::__not__(%3267) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\roi_heads\fast_rcnn.py:434:11
      %boxes.1 : Tensor[] = prim::If(%3268) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\roi_heads\fast_rcnn.py:434:8
        block0():
          %3270 : Tensor[] = prim::ListConstruct()
          -> (%3270)
        block1():
          %3271 : Tensor, %proposal_deltas.3 : Tensor = prim::TupleUnpack(%predictions.1)
          %num_prop_per_image.3 : int[] = prim::ListConstruct()
          %3274 : int = aten::len(%proposals.2) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\roi_heads\fast_rcnn.py:437:29
           = prim::Loop(%3274, %55) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\roi_heads\fast_rcnn.py:437:29
            block0(%3275 : int):
              %p.7 : __torch__.detectron2.export.torchscript_patch11.ScriptedInstances11 = aten::__getitem__(%proposals.2, %3275) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\roi_heads\fast_rcnn.py:437:29
              %3277 : int = prim::Uninitialized()
              %_proposal_boxes.1 : __torch__.detectron2.structures.boxes.Boxes? = prim::GetAttr[name="_proposal_boxes"](%p.7)
              %3279 : bool = aten::__isnot__(%_proposal_boxes.1, %54) # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:152:11
              %3280 : int = prim::If(%3279) # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:152:8
                block0():
                  %t.6 : __torch__.detectron2.structures.boxes.Boxes = prim::unchecked_cast(%_proposal_boxes.1)
                  %tensor.11 : Tensor = prim::GetAttr[name="tensor"](%t.6)
                  %3283 : int[] = aten::size(%tensor.11) # <string>:13:9
                  %3284 : int = aten::__getitem__(%3283, %48) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:238:15
                  -> (%3284)
                block1():
                  %_objectness_logits.2 : Tensor? = prim::GetAttr[name="_objectness_logits"](%p.7)
                  %3286 : bool = aten::__isnot__(%_objectness_logits.2, %54) # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:158:11
                  %3287 : int = prim::If(%3286) # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:158:8
                    block0():
                      %t.146 : Tensor = prim::unchecked_cast(%_objectness_logits.2)
                      %3289 : int = aten::len(%t.146) # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:159:19
                      -> (%3289)
                    block1():
                      %_pred_boxes.7 : __torch__.detectron2.structures.boxes.Boxes? = prim::GetAttr[name="_pred_boxes"](%p.7)
                      %3291 : bool = aten::__isnot__(%_pred_boxes.7, %54) # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:164:11
                      %3292 : int = prim::If(%3291) # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:164:8
                        block0():
                          %t.202 : __torch__.detectron2.structures.boxes.Boxes = prim::unchecked_cast(%_pred_boxes.7)
                          %tensor.19 : Tensor = prim::GetAttr[name="tensor"](%t.202)
                          %3295 : int[] = aten::size(%tensor.19) # <string>:13:9
                          %3296 : int = aten::__getitem__(%3295, %48) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:238:15
                          -> (%3296)
                        block1():
                          %_scores.10 : Tensor? = prim::GetAttr[name="_scores"](%p.7)
                          %3298 : bool = aten::__isnot__(%_scores.10, %54) # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:170:11
                          %3299 : int = prim::If(%3298) # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:170:8
                            block0():
                              %t.250 : Tensor = prim::unchecked_cast(%_scores.10)
                              %3301 : int = aten::len(%t.250) # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:171:19
                              -> (%3301)
                            block1():
                              %_pred_classes.14 : Tensor? = prim::GetAttr[name="_pred_classes"](%p.7)
                              %3303 : bool = aten::__isnot__(%_pred_classes.14, %54) # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:176:11
                              %3304 : int = prim::If(%3303) # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:176:8
                                block0():
                                  %t.290 : Tensor = prim::unchecked_cast(%_pred_classes.14)
                                  %3306 : int = aten::len(%t.290) # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:177:19
                                  -> (%3306)
                                block1():
                                  %_pred_masks.18 : Tensor? = prim::GetAttr[name="_pred_masks"](%p.7)
                                  %3308 : bool = aten::__isnot__(%_pred_masks.18, %54) # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:182:11
                                  %3309 : int = prim::If(%3308) # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:182:8
                                    block0():
                                      %t.322 : Tensor = prim::unchecked_cast(%_pred_masks.18)
                                      %3311 : int = aten::len(%t.322) # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:183:19
                                      -> (%3311)
                                    block1():
                                      %_pred_keypoints.22 : Tensor? = prim::GetAttr[name="_pred_keypoints"](%p.7)
                                      %3313 : bool = aten::__isnot__(%_pred_keypoints.22, %54) # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:188:11
                                      %3314 : int = prim::If(%3313) # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:188:8
                                        block0():
                                          %t.346 : Tensor = prim::unchecked_cast(%_pred_keypoints.22)
                                          %3316 : int = aten::len(%t.346) # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:189:19
                                          -> (%3316)
                                        block1():
                                          %_pred_keypoint_heatmaps.26 : Tensor? = prim::GetAttr[name="_pred_keypoint_heatmaps"](%p.7)
                                          %3318 : bool = aten::__isnot__(%_pred_keypoint_heatmaps.26, %54) # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:194:11
                                          %3319 : int = prim::If(%3318) # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:194:8
                                            block0():
                                              %t.362 : Tensor = prim::unchecked_cast(%_pred_keypoint_heatmaps.26)
                                              %3321 : int = aten::len(%t.362) # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:195:19
                                              -> (%3321)
                                            block1():
                                               = prim::RaiseException(%15, %54) # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:199:8
                                              -> (%3277)
                                          -> (%3319)
                                      -> (%3314)
                                  -> (%3309)
                              -> (%3304)
                          -> (%3299)
                      -> (%3292)
                  -> (%3287)
              %3322 : int[] = aten::append(%num_prop_per_image.3, %3280) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\roi_heads\fast_rcnn.py:437:29
              -> (%55)
          %3323 : Tensor[] = prim::ListConstruct()
          %3324 : int = aten::len(%proposals.2) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\roi_heads\fast_rcnn.py:438:29
           = prim::Loop(%3324, %55) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\roi_heads\fast_rcnn.py:438:29
            block0(%3325 : int):
              %p.11 : __torch__.detectron2.export.torchscript_patch11.ScriptedInstances11 = aten::__getitem__(%proposals.2, %3325) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\roi_heads\fast_rcnn.py:438:29
              %3327 : __torch__.detectron2.structures.boxes.Boxes = prim::Uninitialized()
              %_proposal_boxes.2 : __torch__.detectron2.structures.boxes.Boxes? = prim::GetAttr[name="_proposal_boxes"](%p.11)
              %3329 : bool = aten::__isnot__(%_proposal_boxes.2, %54) # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:40:15
              %t : __torch__.detectron2.structures.boxes.Boxes = prim::If(%3329) # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:40:8
                block0():
                  %t.7 : __torch__.detectron2.structures.boxes.Boxes = prim::unchecked_cast(%_proposal_boxes.2)
                  -> (%t.7)
                block1():
                   = prim::RaiseException(%21, %54) # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:40:8
                  -> (%3327)
              %tensor.63 : Tensor = prim::GetAttr[name="tensor"](%t)
              %3333 : Tensor[] = aten::append(%3323, %tensor.63) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\roi_heads\fast_rcnn.py:438:29
              -> (%55)
          %3334 : int = aten::len(%3323) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:43:7
          %3335 : bool = aten::eq(%3334, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:43:7
          %proposal_boxes.3 : Tensor = prim::If(%3335) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:43:4
            block0():
              %3337 : Tensor = aten::__getitem__(%3323, %48) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:44:15
              -> (%3337)
            block1():
              %3338 : Tensor = aten::cat(%3323, %48) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\wrappers.py:45:11
              -> (%3338)
          %box2box_transform.1 : __torch__.detectron2.modeling.box_regression.Box2BoxTransform = prim::GetAttr[name="box2box_transform"](%box_predictor)
          %deltas.5 : Tensor = aten::to(%proposal_deltas.3, %22, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:88:17
          %3341 : int = prim::dtype(%deltas.5)
          %boxes.5 : Tensor = aten::to(%proposal_boxes.3, %3341, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:89:16
          %3343 : Tensor = aten::slice(%boxes.5, %48, %54, %54, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:91:17
          %3344 : Tensor = aten::select(%3343, %43, %46) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:91:17
          %3345 : Tensor = aten::slice(%boxes.5, %48, %54, %54, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:91:31
          %3346 : Tensor = aten::select(%3345, %43, %48) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:91:31
          %widths.1 : Tensor = aten::sub(%3344, %3346, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:91:17
          %3348 : Tensor = aten::slice(%boxes.5, %48, %54, %54, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:92:18
          %3349 : Tensor = aten::select(%3348, %43, %36) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:92:18
          %3350 : Tensor = aten::slice(%boxes.5, %48, %54, %54, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:92:32
          %3351 : Tensor = aten::select(%3350, %43, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:92:32
          %heights.1 : Tensor = aten::sub(%3349, %3351, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:92:18
          %3353 : Tensor = aten::slice(%boxes.5, %48, %54, %54, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:93:16
          %3354 : Tensor = aten::select(%3353, %43, %48) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:93:16
          %3355 : Tensor = aten::mul(%widths.1, %31) # <string>:3:9
          %ctr_x.1 : Tensor = aten::add(%3354, %3355, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:93:16
          %3357 : Tensor = aten::slice(%boxes.5, %48, %54, %54, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:94:16
          %3358 : Tensor = aten::select(%3357, %43, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:94:16
          %3359 : Tensor = aten::mul(%heights.1, %31) # <string>:3:9
          %ctr_y.1 : Tensor = aten::add(%3358, %3359, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:94:16
          %weights : (float, float, float, float) = prim::GetAttr[name="weights"](%box2box_transform.1)
          %wx.1 : float, %wy.1 : float, %ww.1 : float, %wh.1 : float = prim::TupleUnpack(%weights)
          %3366 : Tensor = aten::slice(%deltas.5, %48, %54, %54, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:97:13
          %3367 : Tensor = aten::slice(%3366, %43, %48, %54, %53) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:97:13
          %dx.1 : Tensor = aten::div(%3367, %wx.1) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:97:13
          %3369 : Tensor = aten::slice(%deltas.5, %48, %54, %54, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:98:13
          %3370 : Tensor = aten::slice(%3369, %43, %43, %54, %53) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:98:13
          %dy.1 : Tensor = aten::div(%3370, %wy.1) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:98:13
          %3372 : Tensor = aten::slice(%deltas.5, %48, %54, %54, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:99:13
          %3373 : Tensor = aten::slice(%3372, %43, %46, %54, %53) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:99:13
          %dw.1 : Tensor = aten::div(%3373, %ww.1) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:99:13
          %3375 : Tensor = aten::slice(%deltas.5, %48, %54, %54, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:100:13
          %3376 : Tensor = aten::slice(%3375, %43, %36, %54, %53) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:100:13
          %dh.1 : Tensor = aten::div(%3376, %wh.1) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:100:13
          %scale_clamp.1 : float = prim::GetAttr[name="scale_clamp"](%box2box_transform.1)
          %dw.5 : Tensor = aten::clamp(%dw.1, %54, %scale_clamp.1) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:103:13
          %scale_clamp : float = prim::GetAttr[name="scale_clamp"](%box2box_transform.1)
          %dh.5 : Tensor = aten::clamp(%dh.1, %54, %scale_clamp) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:104:13
          %3382 : Tensor = aten::slice(%widths.1, %48, %54, %54, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:106:26
          %3383 : Tensor = aten::unsqueeze(%3382, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:106:26
          %3384 : Tensor = aten::mul(%dx.1, %3383) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:106:21
          %3385 : Tensor = aten::slice(%ctr_x.1, %48, %54, %54, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:106:44
          %3386 : Tensor = aten::unsqueeze(%3385, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:106:44
          %pred_ctr_x.1 : Tensor = aten::add(%3384, %3386, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:106:21
          %3388 : Tensor = aten::slice(%heights.1, %48, %54, %54, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:107:26
          %3389 : Tensor = aten::unsqueeze(%3388, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:107:26
          %3390 : Tensor = aten::mul(%dy.1, %3389) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:107:21
          %3391 : Tensor = aten::slice(%ctr_y.1, %48, %54, %54, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:107:45
          %3392 : Tensor = aten::unsqueeze(%3391, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:107:45
          %pred_ctr_y.1 : Tensor = aten::add(%3390, %3392, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:107:21
          %3394 : Tensor = aten::exp(%dw.5) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:108:17
          %3395 : Tensor = aten::slice(%widths.1, %48, %54, %54, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:108:33
          %3396 : Tensor = aten::unsqueeze(%3395, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:108:33
          %pred_w.1 : Tensor = aten::mul(%3394, %3396) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:108:17
          %3398 : Tensor = aten::exp(%dh.5) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:109:17
          %3399 : Tensor = aten::slice(%heights.1, %48, %54, %54, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:109:33
          %3400 : Tensor = aten::unsqueeze(%3399, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:109:33
          %pred_h.1 : Tensor = aten::mul(%3398, %3400) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:109:17
          %3402 : Tensor = aten::mul(%pred_w.1, %31) # <string>:3:9
          %x1.2 : Tensor = aten::sub(%pred_ctr_x.1, %3402, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:111:13
          %3404 : Tensor = aten::mul(%pred_h.1, %31) # <string>:3:9
          %y1.2 : Tensor = aten::sub(%pred_ctr_y.1, %3404, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:112:13
          %3406 : Tensor = aten::mul(%pred_w.1, %31) # <string>:3:9
          %x2.2 : Tensor = aten::add(%pred_ctr_x.1, %3406, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:113:13
          %3408 : Tensor = aten::mul(%pred_h.1, %31) # <string>:3:9
          %y2.2 : Tensor = aten::add(%pred_ctr_y.1, %3408, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:114:13
          %3410 : Tensor[] = prim::ListConstruct(%x1.2, %y1.2, %x2.2, %y2.2)
          %pred_boxes.1 : Tensor = aten::stack(%3410, %51) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:115:21
          %3412 : int[] = aten::size(%deltas.5) # <string>:13:9
          %predict_boxes.3 : Tensor = aten::reshape(%pred_boxes.1, %3412) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\box_regression.py:116:15
          %3414 : Tensor[] = aten::split(%predict_boxes.3, %num_prop_per_image.3, %48) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\roi_heads\fast_rcnn.py:443:15
          -> (%3414)
      %scores.1 : Tensor, %3416 : Tensor = prim::TupleUnpack(%predictions.1)
      %num_inst_per_image.1 : int[] = prim::ListConstruct()
      %3418 : int = aten::len(%proposals.2) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\roi_heads\fast_rcnn.py:460:29
       = prim::Loop(%3418, %55) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\roi_heads\fast_rcnn.py:460:29
        block0(%3419 : int):
          %p.1 : __torch__.detectron2.export.torchscript_patch11.ScriptedInstances11 = aten::__getitem__(%proposals.2, %3419) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\roi_heads\fast_rcnn.py:460:29
          %3421 : int = prim::Uninitialized()
          %_proposal_boxes.4 : __torch__.detectron2.structures.boxes.Boxes? = prim::GetAttr[name="_proposal_boxes"](%p.1)
          %3423 : bool = aten::__isnot__(%_proposal_boxes.4, %54) # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:152:11
          %3424 : int = prim::If(%3423) # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:152:8
            block0():
              %t.9 : __torch__.detectron2.structures.boxes.Boxes = prim::unchecked_cast(%_proposal_boxes.4)
              %tensor.13 : Tensor = prim::GetAttr[name="tensor"](%t.9)
              %3427 : int[] = aten::size(%tensor.13) # <string>:13:9
              %3428 : int = aten::__getitem__(%3427, %48) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:238:15
              -> (%3428)
            block1():
              %_objectness_logits.1 : Tensor? = prim::GetAttr[name="_objectness_logits"](%p.1)
              %3430 : bool = aten::__isnot__(%_objectness_logits.1, %54) # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:158:11
              %3431 : int = prim::If(%3430) # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:158:8
                block0():
                  %t.145 : Tensor = prim::unchecked_cast(%_objectness_logits.1)
                  %3433 : int = aten::len(%t.145) # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:159:19
                  -> (%3433)
                block1():
                  %_pred_boxes.5 : __torch__.detectron2.structures.boxes.Boxes? = prim::GetAttr[name="_pred_boxes"](%p.1)
                  %3435 : bool = aten::__isnot__(%_pred_boxes.5, %54) # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:164:11
                  %3436 : int = prim::If(%3435) # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:164:8
                    block0():
                      %t.201 : __torch__.detectron2.structures.boxes.Boxes = prim::unchecked_cast(%_pred_boxes.5)
                      %tensor.17 : Tensor = prim::GetAttr[name="tensor"](%t.201)
                      %3439 : int[] = aten::size(%tensor.17) # <string>:13:9
                      %3440 : int = aten::__getitem__(%3439, %48) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:238:15
                      -> (%3440)
                    block1():
                      %_scores.9 : Tensor? = prim::GetAttr[name="_scores"](%p.1)
                      %3442 : bool = aten::__isnot__(%_scores.9, %54) # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:170:11
                      %3443 : int = prim::If(%3442) # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:170:8
                        block0():
                          %t.249 : Tensor = prim::unchecked_cast(%_scores.9)
                          %3445 : int = aten::len(%t.249) # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:171:19
                          -> (%3445)
                        block1():
                          %_pred_classes.15 : Tensor? = prim::GetAttr[name="_pred_classes"](%p.1)
                          %3447 : bool = aten::__isnot__(%_pred_classes.15, %54) # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:176:11
                          %3448 : int = prim::If(%3447) # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:176:8
                            block0():
                              %t.289 : Tensor = prim::unchecked_cast(%_pred_classes.15)
                              %3450 : int = aten::len(%t.289) # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:177:19
                              -> (%3450)
                            block1():
                              %_pred_masks.17 : Tensor? = prim::GetAttr[name="_pred_masks"](%p.1)
                              %3452 : bool = aten::__isnot__(%_pred_masks.17, %54) # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:182:11
                              %3453 : int = prim::If(%3452) # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:182:8
                                block0():
                                  %t.321 : Tensor = prim::unchecked_cast(%_pred_masks.17)
                                  %3455 : int = aten::len(%t.321) # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:183:19
                                  -> (%3455)
                                block1():
                                  %_pred_keypoints.21 : Tensor? = prim::GetAttr[name="_pred_keypoints"](%p.1)
                                  %3457 : bool = aten::__isnot__(%_pred_keypoints.21, %54) # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:188:11
                                  %3458 : int = prim::If(%3457) # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:188:8
                                    block0():
                                      %t.345 : Tensor = prim::unchecked_cast(%_pred_keypoints.21)
                                      %3460 : int = aten::len(%t.345) # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:189:19
                                      -> (%3460)
                                    block1():
                                      %_pred_keypoint_heatmaps.25 : Tensor? = prim::GetAttr[name="_pred_keypoint_heatmaps"](%p.1)
                                      %3462 : bool = aten::__isnot__(%_pred_keypoint_heatmaps.25, %54) # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:194:11
                                      %3463 : int = prim::If(%3462) # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:194:8
                                        block0():
                                          %t.361 : Tensor = prim::unchecked_cast(%_pred_keypoint_heatmaps.25)
                                          %3465 : int = aten::len(%t.361) # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:195:19
                                          -> (%3465)
                                        block1():
                                           = prim::RaiseException(%15, %54) # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:199:8
                                          -> (%3421)
                                      -> (%3463)
                                  -> (%3458)
                              -> (%3453)
                          -> (%3448)
                      -> (%3443)
                  -> (%3436)
              -> (%3431)
          %3466 : int[] = aten::append(%num_inst_per_image.1, %3424) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\roi_heads\fast_rcnn.py:460:29
          -> (%55)
      %ret.2 : Tensor = aten::softmax(%scores.1, %51, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\nn\functional.py:1818:14
      %scores.2 : Tensor[] = aten::split(%ret.2, %num_inst_per_image.1, %48) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\roi_heads\fast_rcnn.py:462:15
      %image_shapes.1 : (int, int)[] = prim::ListConstruct()
      %3470 : int = aten::len(%proposals.2) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\roi_heads\fast_rcnn.py:374:23
       = prim::Loop(%3470, %55) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\roi_heads\fast_rcnn.py:374:23
        block0(%3471 : int):
          %x.2 : __torch__.detectron2.export.torchscript_patch11.ScriptedInstances11 = aten::__getitem__(%proposals.2, %3471) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\roi_heads\fast_rcnn.py:374:23
          %image_size.4 : (int, int) = prim::GetAttr[name="image_size"](%x.2)
          %3474 : (int, int)[] = aten::append(%image_shapes.1, %image_size.4) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\roi_heads\fast_rcnn.py:374:23
          -> (%55)
      %test_score_thresh : float = prim::GetAttr[name="test_score_thresh"](%box_predictor)
      %test_nms_thresh : float = prim::GetAttr[name="test_nms_thresh"](%box_predictor)
      %test_topk_per_image : int = prim::GetAttr[name="test_topk_per_image"](%box_predictor)
      %result_per_image.1 : (__torch__.detectron2.export.torchscript_patch11.ScriptedInstances11, Tensor)[] = prim::ListConstruct()
      %3479 : int = aten::len(%scores.2) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\roi_heads\fast_rcnn.py:78:23
      %3480 : int = aten::len(%boxes.1) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\roi_heads\fast_rcnn.py:78:23
      %3481 : int = aten::len(%image_shapes.1) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\roi_heads\fast_rcnn.py:78:23
      %3482 : int[] = prim::ListConstruct(%3479, %3480, %3481)
      %3483 : int = prim::min(%3482) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\roi_heads\fast_rcnn.py:78:23
       = prim::Loop(%3483, %55) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\roi_heads\fast_rcnn.py:78:23
        block0(%3484 : int):
          %scores_per_image.1 : Tensor = aten::__getitem__(%scores.2, %3484) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\roi_heads\fast_rcnn.py:78:23
          %boxes_per_image.1 : Tensor = aten::__getitem__(%boxes.1, %3484) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\roi_heads\fast_rcnn.py:78:23
          %image_shape.1 : (int, int) = aten::__getitem__(%image_shapes.1, %3484) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\roi_heads\fast_rcnn.py:78:23
          %3488 : Tensor = aten::isfinite(%boxes_per_image.1) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\roi_heads\fast_rcnn.py:136:17
          %3489 : Tensor = aten::all(%3488, %43, %44) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\roi_heads\fast_rcnn.py:136:17
          %3490 : Tensor = aten::isfinite(%scores_per_image.1) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\roi_heads\fast_rcnn.py:136:52
          %3491 : Tensor = aten::all(%3490, %43, %44) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\roi_heads\fast_rcnn.py:136:52
          %valid_mask.1 : Tensor = aten::__and__(%3489, %3491) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\roi_heads\fast_rcnn.py:136:17
          %3493 : Tensor = aten::all(%valid_mask.1) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\roi_heads\fast_rcnn.py:137:11
          %3494 : bool = aten::Bool(%3493) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\roi_heads\fast_rcnn.py:137:11
          %3495 : bool = aten::__not__(%3494) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\roi_heads\fast_rcnn.py:137:7
          %scores : Tensor, %boxes.61 : Tensor = prim::If(%3495) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\roi_heads\fast_rcnn.py:137:4
            block0():
              %3498 : Tensor?[] = prim::ListConstruct(%valid_mask.1)
              %boxes.7 : Tensor = aten::index(%boxes_per_image.1, %3498) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\roi_heads\fast_rcnn.py:138:16
              %3500 : Tensor?[] = prim::ListConstruct(%valid_mask.1)
              %scores.7 : Tensor = aten::index(%scores_per_image.1, %3500) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\roi_heads\fast_rcnn.py:139:17
              -> (%scores.7, %boxes.7)
            block1():
              -> (%scores_per_image.1, %boxes_per_image.1)
          %3502 : Tensor = aten::slice(%scores, %48, %54, %54, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\roi_heads\fast_rcnn.py:141:13
          %scores.21 : Tensor = aten::slice(%3502, %43, %54, %51, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\roi_heads\fast_rcnn.py:141:13
          %3504 : int[] = aten::size(%boxes.61) # <string>:13:9
          %3505 : int = aten::__getitem__(%3504, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\roi_heads\fast_rcnn.py:142:27
          %num_bbox_reg_classes.1 : int = aten::floordiv(%3505, %53) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\roi_heads\fast_rcnn.py:142:27
          %3507 : int[] = prim::ListConstruct(%51, %53)
          %3508 : Tensor = aten::reshape(%boxes.61, %3507) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\roi_heads\fast_rcnn.py:144:18
          %boxes.23 : __torch__.detectron2.structures.boxes.Boxes = prim::CreateObject()
          %device.2 : Device = prim::device(%3508)
          %tensor.65 : Tensor = aten::as_tensor(%3508, %22, %device.2) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:148:17
          %3512 : int = aten::numel(%tensor.65) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:149:11
          %3513 : bool = aten::eq(%3512, %48) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:149:11
          %tensor.67 : Tensor = prim::If(%3513) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:149:8
            block0():
              %3515 : int[] = prim::ListConstruct(%51, %53)
              %3516 : Tensor = aten::reshape(%tensor.65, %3515) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:152:21
              %tensor.18 : Tensor = aten::to(%3516, %device.2, %22, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:152:21
              -> (%tensor.18)
            block1():
              -> (%tensor.65)
          %3518 : int = aten::dim(%tensor.67) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:153:15
          %3519 : bool = aten::eq(%3518, %46) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:153:15
          %3520 : bool = prim::If(%3519) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:153:15
            block0():
              %3521 : int = aten::size(%tensor.67, %51) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:153:37
              %3522 : bool = aten::eq(%3521, %53) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:153:37
              -> (%3522)
            block1():
              -> (%44)
           = prim::If(%3520) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:153:8
            block0():
              -> ()
            block1():
              %3523 : int[] = aten::size(%tensor.67) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:153:59
              %3524 : str = aten::str(%3523) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:153:8
              %3525 : str = aten::add(%49, %3524) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:153:8
               = prim::RaiseException(%3525, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:153:8
              -> ()
           = prim::SetAttr[name="tensor"](%boxes.23, %tensor.67)
          %tensor.3 : Tensor = prim::GetAttr[name="tensor"](%boxes.23)
          %3527 : Tensor = aten::isfinite(%tensor.3) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:189:15
          %3528 : Tensor = aten::all(%3527) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:189:15
          %3529 : bool = aten::Bool(%3528) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:189:15
           = prim::If(%3529) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:189:8
            block0():
              -> ()
            block1():
               = prim::RaiseException(%25, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:189:8
              -> ()
          %h.1 : int, %w.1 : int = prim::TupleUnpack(%image_shape.1)
          %tensor.5 : Tensor = prim::GetAttr[name="tensor"](%boxes.23)
          %3533 : Tensor = aten::slice(%tensor.5, %48, %54, %54, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:191:13
          %3534 : Tensor = aten::select(%3533, %43, %48) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:191:13
          %x1.1 : Tensor = aten::clamp(%3534, %48, %w.1) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:191:13
          %tensor.7 : Tensor = prim::GetAttr[name="tensor"](%boxes.23)
          %3537 : Tensor = aten::slice(%tensor.7, %48, %54, %54, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:192:13
          %3538 : Tensor = aten::select(%3537, %43, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:192:13
          %y1.1 : Tensor = aten::clamp(%3538, %48, %h.1) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:192:13
          %tensor.14 : Tensor = prim::GetAttr[name="tensor"](%boxes.23)
          %3541 : Tensor = aten::slice(%tensor.14, %48, %54, %54, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:193:13
          %3542 : Tensor = aten::select(%3541, %43, %46) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:193:13
          %x2.1 : Tensor = aten::clamp(%3542, %48, %w.1) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:193:13
          %tensor.69 : Tensor = prim::GetAttr[name="tensor"](%boxes.23)
          %3545 : Tensor = aten::slice(%tensor.69, %48, %54, %54, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:194:13
          %3546 : Tensor = aten::select(%3545, %43, %36) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:194:13
          %y2.1 : Tensor = aten::clamp(%3546, %48, %h.1) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:194:13
          %3548 : Tensor[] = prim::ListConstruct(%x1.1, %y1.1, %x2.1, %y2.1)
          %3549 : Tensor = aten::stack(%3548, %51) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:195:22
           = prim::SetAttr[name="tensor"](%boxes.23, %3549)
          %tensor.71 : Tensor = prim::GetAttr[name="tensor"](%boxes.23)
          %3551 : int[] = prim::ListConstruct(%51, %num_bbox_reg_classes.1, %53)
          %boxes.29 : Tensor = aten::view(%tensor.71, %3551) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\roi_heads\fast_rcnn.py:146:12
          %filter_mask.1 : Tensor = aten::gt(%scores.21, %test_score_thresh) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\roi_heads\fast_rcnn.py:150:18
          %filter_inds.1 : Tensor = aten::nonzero(%filter_mask.1) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\roi_heads\fast_rcnn.py:153:18
          %3555 : bool = aten::eq(%num_bbox_reg_classes.1, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\roi_heads\fast_rcnn.py:154:7
          %boxes : Tensor = prim::If(%3555) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\roi_heads\fast_rcnn.py:154:4
            block0():
              %3557 : Tensor = aten::slice(%filter_inds.1, %48, %54, %54, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\roi_heads\fast_rcnn.py:155:22
              %3558 : Tensor = aten::select(%3557, %43, %48) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\roi_heads\fast_rcnn.py:155:22
              %3559 : Tensor = aten::select(%boxes.29, %43, %48) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\roi_heads\fast_rcnn.py:155:16
              %3560 : Tensor?[] = prim::ListConstruct(%3558)
              %boxes.33 : Tensor = aten::index(%3559, %3560) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\roi_heads\fast_rcnn.py:155:16
              -> (%boxes.33)
            block1():
              %3562 : Tensor?[] = prim::ListConstruct(%filter_mask.1)
              %boxes.39 : Tensor = aten::index(%boxes.29, %3562) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\roi_heads\fast_rcnn.py:157:16
              -> (%boxes.39)
          %3564 : Tensor?[] = prim::ListConstruct(%filter_mask.1)
          %scores.27 : Tensor = aten::index(%scores.21, %3564) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\roi_heads\fast_rcnn.py:158:13
          %3566 : Tensor = aten::slice(%filter_inds.1, %48, %54, %54, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\roi_heads\fast_rcnn.py:161:38
          %3567 : Tensor = aten::select(%3566, %43, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\roi_heads\fast_rcnn.py:161:38
          %3568 : int[] = aten::size(%boxes) # <string>:13:9
          %3569 : int = aten::__getitem__(%3568, %51) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\nms.py:15:11
          %3570 : bool = aten::eq(%3569, %53) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\nms.py:15:11
           = prim::If(%3570) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\nms.py:15:4
            block0():
              -> ()
            block1():
               = prim::RaiseException(%49, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\nms.py:15:4
              -> ()
          %3571 : Tensor = aten::to(%boxes, %22, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\layers\nms.py:20:31
          %3572 : int = aten::numel(%3571) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\boxes.py:71:7
          %3573 : Device = prim::device(%3571)
          %3574 : str = prim::type(%3573)
          %3575 : bool = aten::eq(%3574, %26) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\boxes.py:71:32
          %3576 : int = prim::If(%3575) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\boxes.py:71:24
            block0():
              -> (%27)
            block1():
              -> (%28)
          %3577 : bool = aten::gt(%3572, %3576) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\boxes.py:71:7
          %keep.1 : Tensor = prim::If(%3577) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\boxes.py:71:4
            block0():
              %keep_mask.1 : Tensor = aten::zeros_like(%scores.27, %29, %54, %54, %54, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\boxes.py:105:16
              %output.3 : Tensor, %inverse_indices.3 : Tensor, %counts.3 : Tensor = aten::_unique2(%3567, %55, %44, %44) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torch\functional.py:860:42
              %3583 : (Tensor, Tensor, Tensor) = prim::TupleConstruct(%output.3, %inverse_indices.3, %counts.3)
              %output.2 : Tensor, %3585 : Tensor, %3586 : Tensor = prim::TupleUnpack(%3583)
              %3587 : int = aten::len(%output.2) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\boxes.py:106:4
               = prim::Loop(%3587, %55) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\boxes.py:106:4
                block0(%3588 : int):
                  %class_id.1 : Tensor = aten::select(%output.2, %48, %3588) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\boxes.py:106:4
                  %3590 : Tensor = aten::eq(%3567, %class_id.1) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\boxes.py:107:35
                  %3591 : Tensor[] = aten::where(%3590) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\boxes.py:107:23
                  %curr_indices.1 : Tensor = aten::__getitem__(%3591, %48) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\boxes.py:107:23
                  %3593 : Tensor?[] = prim::ListConstruct(%curr_indices.1)
                  %3594 : Tensor = aten::index(%3571, %3593) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\boxes.py:108:32
                  %3595 : Tensor?[] = prim::ListConstruct(%curr_indices.1)
                  %3596 : Tensor = aten::index(%scores.27, %3595) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\boxes.py:108:53
                  %curr_keep_indices.1 : Tensor = torchvision::nms(%3594, %3596, %test_nms_thresh) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\boxes.py:40:11
                  %3598 : Tensor?[] = prim::ListConstruct(%curr_keep_indices.1)
                  %3599 : Tensor = aten::index(%curr_indices.1, %3598) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\boxes.py:109:18
                  %3600 : int = prim::dtype(%keep_mask.1)
                  %3601 : Device = prim::device(%keep_mask.1)
                  %3602 : Tensor = aten::tensor(%55, %3600, %3601, %44)
                  %3603 : Tensor?[] = prim::ListConstruct(%3599)
                  %3604 : Tensor = aten::index_put_(%keep_mask.1, %3603, %3602, %44) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\boxes.py:109:8
                  -> (%55)
              %3605 : Tensor[] = aten::where(%keep_mask.1) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\boxes.py:110:19
              %keep_indices.1 : Tensor = aten::__getitem__(%3605, %48) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\boxes.py:110:19
              %3607 : Tensor?[] = prim::ListConstruct(%keep_indices.1)
              %3608 : Tensor = aten::index(%scores.27, %3607) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\boxes.py:111:24
              %3609 : Tensor, %3610 : Tensor = aten::sort(%3608, %51, %55) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\boxes.py:111:24
              %3611 : Tensor?[] = prim::ListConstruct(%3610)
              %3612 : Tensor = aten::index(%keep_indices.1, %3611) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\boxes.py:111:11
              -> (%3612)
            block1():
              %3613 : int = aten::numel(%3571) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\boxes.py:88:7
              %3614 : bool = aten::eq(%3613, %48) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\boxes.py:88:7
              %3615 : Tensor = prim::If(%3614) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\boxes.py:88:4
                block0():
                  %3616 : Device = prim::device(%3571)
                  %3617 : int[] = prim::ListConstruct(%48)
                  %3618 : Tensor = aten::empty(%3617, %53, %54, %3616, %54, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\boxes.py:89:15
                  -> (%3618)
                block1():
                  %max_coordinate.3 : Tensor = aten::max(%3571) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\boxes.py:90:21
                  %3620 : Tensor = aten::to(%3567, %3571, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\boxes.py:91:14
                  %3621 : Tensor = aten::tensor(%43, %54, %54, %44) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\boxes.py:91:49
                  %3622 : Tensor = aten::to(%3621, %3571, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\boxes.py:91:49
                  %3623 : Tensor = aten::add(%max_coordinate.3, %3622, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\boxes.py:91:32
                  %offsets.3 : Tensor = aten::mul(%3620, %3623) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\boxes.py:91:14
                  %3625 : Tensor = aten::slice(%offsets.3, %48, %54, %54, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\boxes.py:92:28
                  %3626 : Tensor = aten::unsqueeze(%3625, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\boxes.py:92:28
                  %boxes_for_nms.3 : Tensor = aten::add(%3571, %3626, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\boxes.py:92:20
                  %keep.3 : Tensor = torchvision::nms(%boxes_for_nms.3, %scores.27, %test_nms_thresh) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\torchvision\ops\boxes.py:40:11
                  -> (%keep.3)
              -> (%3615)
          %3629 : bool = aten::ge(%test_topk_per_image, %48) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\roi_heads\fast_rcnn.py:162:7
          %keep : Tensor = prim::If(%3629) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\roi_heads\fast_rcnn.py:162:4
            block0():
              %keep.5 : Tensor = aten::slice(%keep.1, %48, %54, %test_topk_per_image, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\roi_heads\fast_rcnn.py:163:15
              -> (%keep.5)
            block1():
              -> (%keep.1)
          %3632 : Tensor?[] = prim::ListConstruct(%keep)
          %boxes.57 : Tensor = aten::index(%boxes, %3632) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\roi_heads\fast_rcnn.py:164:33
          %3634 : Tensor?[] = prim::ListConstruct(%keep)
          %scores.33 : Tensor = aten::index(%scores.27, %3634) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\roi_heads\fast_rcnn.py:164:46
          %3636 : Tensor?[] = prim::ListConstruct(%keep)
          %filter_inds.11 : Tensor = aten::index(%filter_inds.1, %3636) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\roi_heads\fast_rcnn.py:164:60
          %result.1 : __torch__.detectron2.export.torchscript_patch11.ScriptedInstances11 = prim::CreateObject()
           = prim::SetAttr[name="image_size"](%result.1, %image_shape.1)
           = prim::SetAttr[name="_field_names"](%result.1, %30)
           = prim::SetAttr[name="_proposal_boxes"](%result.1, %54)
           = prim::SetAttr[name="_objectness_logits"](%result.1, %54)
           = prim::SetAttr[name="_pred_boxes"](%result.1, %54)
           = prim::SetAttr[name="_scores"](%result.1, %54)
           = prim::SetAttr[name="_pred_classes"](%result.1, %54)
           = prim::SetAttr[name="_pred_masks"](%result.1, %54)
           = prim::SetAttr[name="_pred_keypoints"](%result.1, %54)
           = prim::SetAttr[name="_pred_keypoint_heatmaps"](%result.1, %54)
          %3639 : __torch__.detectron2.structures.boxes.Boxes = prim::CreateObject()
          %device.13 : Device = prim::device(%boxes.57)
          %tensor.73 : Tensor = aten::as_tensor(%boxes.57, %22, %device.13) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:148:17
          %3642 : int = aten::numel(%tensor.73) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:149:11
          %3643 : bool = aten::eq(%3642, %48) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:149:11
          %tensor.75 : Tensor = prim::If(%3643) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:149:8
            block0():
              %3645 : int[] = prim::ListConstruct(%51, %53)
              %3646 : Tensor = aten::reshape(%tensor.73, %3645) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:152:21
              %tensor.77 : Tensor = aten::to(%3646, %device.13, %22, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:152:21
              -> (%tensor.77)
            block1():
              -> (%tensor.73)
          %3648 : int = aten::dim(%tensor.75) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:153:15
          %3649 : bool = aten::eq(%3648, %46) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:153:15
          %3650 : bool = prim::If(%3649) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:153:15
            block0():
              %3651 : int = aten::size(%tensor.75, %51) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:153:37
              %3652 : bool = aten::eq(%3651, %53) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:153:37
              -> (%3652)
            block1():
              -> (%44)
           = prim::If(%3650) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:153:8
            block0():
              -> ()
            block1():
              %3653 : int[] = aten::size(%tensor.75) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:153:59
              %3654 : str = aten::str(%3653) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:153:8
              %3655 : str = aten::add(%49, %3654) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:153:8
               = prim::RaiseException(%3655, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:153:8
              -> ()
           = prim::SetAttr[name="tensor"](%3639, %tensor.75)
           = prim::SetAttr[name="_pred_boxes"](%result.1, %3639)
           = prim::SetAttr[name="_scores"](%result.1, %scores.33)
          %3656 : Tensor = aten::slice(%filter_inds.11, %48, %54, %54, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\roi_heads\fast_rcnn.py:169:26
          %3657 : Tensor = aten::select(%3656, %43, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\roi_heads\fast_rcnn.py:169:26
           = prim::SetAttr[name="_pred_classes"](%result.1, %3657)
          %3658 : Tensor = aten::slice(%filter_inds.11, %48, %54, %54, %43) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\roi_heads\fast_rcnn.py:170:19
          %3659 : Tensor = aten::select(%3658, %43, %48) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\roi_heads\fast_rcnn.py:170:19
          %3660 : (__torch__.detectron2.export.torchscript_patch11.ScriptedInstances11, Tensor) = prim::TupleConstruct(%result.1, %3659)
          %3661 : (__torch__.detectron2.export.torchscript_patch11.ScriptedInstances11, Tensor)[] = aten::append(%result_per_image.1, %3660) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\roi_heads\fast_rcnn.py:78:23
          -> (%55)
      %3662 : __torch__.detectron2.export.torchscript_patch11.ScriptedInstances11[] = prim::ListConstruct()
      %3663 : int = aten::len(%result_per_image.1) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\roi_heads\fast_rcnn.py:84:11
       = prim::Loop(%3663, %55) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\roi_heads\fast_rcnn.py:84:11
        block0(%3664 : int):
          %x.1 : (__torch__.detectron2.export.torchscript_patch11.ScriptedInstances11, Tensor) = aten::__getitem__(%result_per_image.1, %3664) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\roi_heads\fast_rcnn.py:84:11
          %3666 : __torch__.detectron2.export.torchscript_patch11.ScriptedInstances11 = prim::TupleIndex(%x.1, %48)
          %3667 : __torch__.detectron2.export.torchscript_patch11.ScriptedInstances11[] = aten::append(%3662, %3666) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\roi_heads\fast_rcnn.py:84:11
          -> (%55)
      %3668 : Tensor[] = prim::ListConstruct()
      %3669 : int = aten::len(%result_per_image.1) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\roi_heads\fast_rcnn.py:84:45
       = prim::Loop(%3669, %55) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\roi_heads\fast_rcnn.py:84:45
        block0(%3670 : int):
          %x.5 : (__torch__.detectron2.export.torchscript_patch11.ScriptedInstances11, Tensor) = aten::__getitem__(%result_per_image.1, %3670) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\roi_heads\fast_rcnn.py:84:45
          %3672 : Tensor = prim::TupleIndex(%x.5, %43)
          %3673 : Tensor[] = aten::append(%3668, %3672) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\roi_heads\fast_rcnn.py:84:45
          -> (%55)
      %3674 : (__torch__.detectron2.export.torchscript_patch11.ScriptedInstances11[], Tensor[]) = prim::TupleConstruct(%3662, %3668)
      %pred_instances.5 : __torch__.detectron2.export.torchscript_patch11.ScriptedInstances11[], %3676 : Tensor[] = prim::TupleUnpack(%3674)
      %3677 : __torch__.detectron2.export.torchscript_patch11.ScriptedInstances11 = aten::__getitem__(%pred_instances.5, %48) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\roi_heads\roi_heads.py:774:15
      %_pred_boxes.8 : __torch__.detectron2.structures.boxes.Boxes? = prim::GetAttr[name="_pred_boxes"](%3677)
      %3679 : bool = aten::__isnot__(%_pred_boxes.8, %54) # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:218:19
      %3680 : bool = prim::If(%3679) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\roi_heads\roi_heads.py:774:15
        block0():
          %3681 : __torch__.detectron2.export.torchscript_patch11.ScriptedInstances11 = aten::__getitem__(%pred_instances.5, %48) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\roi_heads\roi_heads.py:774:50
          %_pred_classes.16 : Tensor? = prim::GetAttr[name="_pred_classes"](%3681)
          %3683 : bool = aten::__isnot__(%_pred_classes.16, %54) # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:228:19
          -> (%3683)
        block1():
          -> (%44)
       = prim::If(%3680) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\roi_heads\roi_heads.py:774:8
        block0():
          -> ()
        block1():
           = prim::RaiseException(%49, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\roi_heads\roi_heads.py:774:8
          -> ()
      %3684 : Dict(str, Tensor) = prim::DictConstruct()
      %3685 : (__torch__.detectron2.export.torchscript_patch11.ScriptedInstances11[], Dict(str, Tensor)) = prim::TupleConstruct(%pred_instances.5, %3684)
      %results.2 : __torch__.detectron2.export.torchscript_patch11.ScriptedInstances11[], %3687 : Dict(str, Tensor) = prim::TupleUnpack(%3685)
      -> (%results.2)
    block1():
      %detected_instances.7 : __torch__.detectron2.export.torchscript_patch11.ScriptedInstances11[] = prim::unchecked_cast(%3)
      %results.3 : __torch__.detectron2.export.torchscript_patch11.ScriptedInstances11[] = prim::ListConstruct()
      %3690 : int = aten::len(%detected_instances.7) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\meta_arch\rcnn.py:211:33
       = prim::Loop(%3690, %55) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\meta_arch\rcnn.py:211:33
        block0(%3691 : int):
          %x.3 : __torch__.detectron2.export.torchscript_patch11.ScriptedInstances11 = aten::__getitem__(%detected_instances.7, %3691) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\meta_arch\rcnn.py:211:33
          %pixel_mean : Tensor = prim::GetAttr[name="pixel_mean"](%model)
          %3694 : Device = prim::device(%pixel_mean)
          %image_size : (int, int) = prim::GetAttr[name="image_size"](%x.3)
          %ret.3 : __torch__.detectron2.export.torchscript_patch11.ScriptedInstances11 = prim::CreateObject()
           = prim::SetAttr[name="image_size"](%ret.3, %image_size)
           = prim::SetAttr[name="_field_names"](%ret.3, %30)
           = prim::SetAttr[name="_proposal_boxes"](%ret.3, %54)
           = prim::SetAttr[name="_objectness_logits"](%ret.3, %54)
           = prim::SetAttr[name="_pred_boxes"](%ret.3, %54)
           = prim::SetAttr[name="_scores"](%ret.3, %54)
           = prim::SetAttr[name="_pred_classes"](%ret.3, %54)
           = prim::SetAttr[name="_pred_masks"](%ret.3, %54)
           = prim::SetAttr[name="_pred_keypoints"](%ret.3, %54)
           = prim::SetAttr[name="_pred_keypoint_heatmaps"](%ret.3, %54)
          %_proposal_boxes.5 : __torch__.detectron2.structures.boxes.Boxes? = prim::GetAttr[name="_proposal_boxes"](%x.3)
          %3698 : bool = aten::__isnot__(%_proposal_boxes.5, %54) # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:257:11
           = prim::If(%3698) # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:257:8
            block0():
              %t.10 : __torch__.detectron2.structures.boxes.Boxes = prim::unchecked_cast(%_proposal_boxes.5)
              %tensor.2 : Tensor = prim::GetAttr[name="tensor"](%t.10)
              %3701 : Tensor = aten::to(%tensor.2, %54, %54, %3694, %54, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:168:21
              %3702 : __torch__.detectron2.structures.boxes.Boxes = prim::CreateObject()
              %device.4 : Device = prim::device(%3701)
              %tensor.10 : Tensor = aten::as_tensor(%3701, %22, %device.4) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:148:17
              %3705 : int = aten::numel(%tensor.10) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:149:11
              %3706 : bool = aten::eq(%3705, %48) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:149:11
              %tensor.12 : Tensor = prim::If(%3706) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:149:8
                block0():
                  %3708 : int[] = prim::ListConstruct(%51, %53)
                  %3709 : Tensor = aten::reshape(%tensor.10, %3708) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:152:21
                  %tensor.16 : Tensor = aten::to(%3709, %device.4, %22, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:152:21
                  -> (%tensor.16)
                block1():
                  -> (%tensor.10)
              %3711 : int = aten::dim(%tensor.12) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:153:15
              %3712 : bool = aten::eq(%3711, %46) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:153:15
              %3713 : bool = prim::If(%3712) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:153:15
                block0():
                  %3714 : int = aten::size(%tensor.12, %51) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:153:37
                  %3715 : bool = aten::eq(%3714, %53) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:153:37
                  -> (%3715)
                block1():
                  -> (%44)
               = prim::If(%3713) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:153:8
                block0():
                  -> ()
                block1():
                  %3716 : int[] = aten::size(%tensor.12) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:153:59
                  %3717 : str = aten::str(%3716) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:153:8
                  %3718 : str = aten::add(%49, %3717) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:153:8
                   = prim::RaiseException(%3718, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:153:8
                  -> ()
               = prim::SetAttr[name="tensor"](%3702, %tensor.12)
               = prim::SetAttr[name="_proposal_boxes"](%ret.3, %3702)
              -> ()
            block1():
              -> ()
          %_objectness_logits.3 : Tensor? = prim::GetAttr[name="_objectness_logits"](%x.3)
          %3720 : bool = aten::__isnot__(%_objectness_logits.3, %54) # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:263:11
           = prim::If(%3720) # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:263:8
            block0():
              %t.24 : Tensor = prim::unchecked_cast(%_objectness_logits.3)
              %3722 : Tensor = aten::to(%t.24, %3694, %54, %44, %44) # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:264:37
               = prim::SetAttr[name="_objectness_logits"](%ret.3, %3722)
              -> ()
            block1():
              -> ()
          %_pred_boxes.1 : __torch__.detectron2.structures.boxes.Boxes? = prim::GetAttr[name="_pred_boxes"](%x.3)
          %3724 : bool = aten::__isnot__(%_pred_boxes.1, %54) # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:269:11
           = prim::If(%3724) # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:269:8
            block0():
              %t.42 : __torch__.detectron2.structures.boxes.Boxes = prim::unchecked_cast(%_pred_boxes.1)
              %tensor.21 : Tensor = prim::GetAttr[name="tensor"](%t.42)
              %3727 : Tensor = aten::to(%tensor.21, %54, %54, %3694, %54, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:168:21
              %3728 : __torch__.detectron2.structures.boxes.Boxes = prim::CreateObject()
              %device.1 : Device = prim::device(%3727)
              %tensor.9 : Tensor = aten::as_tensor(%3727, %22, %device.1) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:148:17
              %3731 : int = aten::numel(%tensor.9) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:149:11
              %3732 : bool = aten::eq(%3731, %48) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:149:11
              %tensor.23 : Tensor = prim::If(%3732) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:149:8
                block0():
                  %3734 : int[] = prim::ListConstruct(%51, %53)
                  %3735 : Tensor = aten::reshape(%tensor.9, %3734) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:152:21
                  %tensor.15 : Tensor = aten::to(%3735, %device.1, %22, %44, %44, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:152:21
                  -> (%tensor.15)
                block1():
                  -> (%tensor.9)
              %3737 : int = aten::dim(%tensor.23) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:153:15
              %3738 : bool = aten::eq(%3737, %46) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:153:15
              %3739 : bool = prim::If(%3738) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:153:15
                block0():
                  %3740 : int = aten::size(%tensor.23, %51) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:153:37
                  %3741 : bool = aten::eq(%3740, %53) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:153:37
                  -> (%3741)
                block1():
                  -> (%44)
               = prim::If(%3739) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:153:8
                block0():
                  -> ()
                block1():
                  %3742 : int[] = aten::size(%tensor.23) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:153:59
                  %3743 : str = aten::str(%3742) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:153:8
                  %3744 : str = aten::add(%49, %3743) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:153:8
                   = prim::RaiseException(%3744, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\structures\boxes.py:153:8
                  -> ()
               = prim::SetAttr[name="tensor"](%3728, %tensor.23)
               = prim::SetAttr[name="_pred_boxes"](%ret.3, %3728)
              -> ()
            block1():
              -> ()
          %_scores.1 : Tensor? = prim::GetAttr[name="_scores"](%x.3)
          %3746 : bool = aten::__isnot__(%_scores.1, %54) # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:275:11
           = prim::If(%3746) # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:275:8
            block0():
              %t.60 : Tensor = prim::unchecked_cast(%_scores.1)
              %3748 : Tensor = aten::to(%t.60, %3694, %54, %44, %44) # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:276:26
               = prim::SetAttr[name="_scores"](%ret.3, %3748)
              -> ()
            block1():
              -> ()
          %_pred_classes.1 : Tensor? = prim::GetAttr[name="_pred_classes"](%x.3)
          %3750 : bool = aten::__isnot__(%_pred_classes.1, %54) # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:281:11
           = prim::If(%3750) # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:281:8
            block0():
              %t.78 : Tensor = prim::unchecked_cast(%_pred_classes.1)
              %3752 : Tensor = aten::to(%t.78, %3694, %54, %44, %44) # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:282:32
               = prim::SetAttr[name="_pred_classes"](%ret.3, %3752)
              -> ()
            block1():
              -> ()
          %_pred_masks.1 : Tensor? = prim::GetAttr[name="_pred_masks"](%x.3)
          %3754 : bool = aten::__isnot__(%_pred_masks.1, %54) # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:287:11
           = prim::If(%3754) # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:287:8
            block0():
              %t.96 : Tensor = prim::unchecked_cast(%_pred_masks.1)
              %3756 : Tensor = aten::to(%t.96, %3694, %54, %44, %44) # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:288:30
               = prim::SetAttr[name="_pred_masks"](%ret.3, %3756)
              -> ()
            block1():
              -> ()
          %_pred_keypoints.1 : Tensor? = prim::GetAttr[name="_pred_keypoints"](%x.3)
          %3758 : bool = aten::__isnot__(%_pred_keypoints.1, %54) # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:293:11
           = prim::If(%3758) # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:293:8
            block0():
              %t.114 : Tensor = prim::unchecked_cast(%_pred_keypoints.1)
              %3760 : Tensor = aten::to(%t.114, %3694, %54, %44, %44) # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:294:34
               = prim::SetAttr[name="_pred_keypoints"](%ret.3, %3760)
              -> ()
            block1():
              -> ()
          %_pred_keypoint_heatmaps.1 : Tensor? = prim::GetAttr[name="_pred_keypoint_heatmaps"](%x.3)
          %3762 : bool = aten::__isnot__(%_pred_keypoint_heatmaps.1, %54) # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:299:11
           = prim::If(%3762) # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:299:8
            block0():
              %t.132 : Tensor = prim::unchecked_cast(%_pred_keypoint_heatmaps.1)
              %3764 : Tensor = aten::to(%t.132, %3694, %54, %44, %44) # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:300:42
               = prim::SetAttr[name="_pred_keypoint_heatmaps"](%ret.3, %3764)
              -> ()
            block1():
              -> ()
          %3765 : __torch__.detectron2.export.torchscript_patch11.ScriptedInstances11[] = aten::append(%results.3, %ret.3) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\meta_arch\rcnn.py:211:33
          -> (%55)
      %3766 : __torch__.detectron2.export.torchscript_patch11.ScriptedInstances11 = aten::__getitem__(%results.3, %48) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\roi_heads\roi_heads.py:774:15
      %_pred_boxes.6 : __torch__.detectron2.structures.boxes.Boxes? = prim::GetAttr[name="_pred_boxes"](%3766)
      %3768 : bool = aten::__isnot__(%_pred_boxes.6, %54) # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:218:19
      %3769 : bool = prim::If(%3768) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\roi_heads\roi_heads.py:774:15
        block0():
          %3770 : __torch__.detectron2.export.torchscript_patch11.ScriptedInstances11 = aten::__getitem__(%results.3, %48) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\roi_heads\roi_heads.py:774:50
          %_pred_classes.13 : Tensor? = prim::GetAttr[name="_pred_classes"](%3770)
          %3772 : bool = aten::__isnot__(%_pred_classes.13, %54) # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:228:19
          -> (%3772)
        block1():
          -> (%44)
       = prim::If(%3769) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\roi_heads\roi_heads.py:774:8
        block0():
          -> ()
        block1():
           = prim::RaiseException(%49, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\roi_heads\roi_heads.py:774:8
          -> ()
      -> (%results.3)
  %instances.1 : __torch__.detectron2.export.torchscript_patch11.ScriptedInstances11[] = prim::If(%4) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\meta_arch\rcnn.py:214:8
    block0():
       = prim::RaiseException(%56, %54) # C:\Miniconda3\envs\tron2_copy\lib\site-packages\detectron2\modeling\meta_arch\rcnn.py:215:12
      -> (%57)
    block1():
      -> (%results)
  %9 : Dict(str, Tensor)[] = prim::ListConstruct()
  %10 : int = aten::len(%instances.1) # C:\Users\HOFTIJ~1\AppData\Local\Temp/ipykernel_15240/909090163.py:28:23
   = prim::Loop(%10, %2) # C:\Users\HOFTIJ~1\AppData\Local\Temp/ipykernel_15240/909090163.py:28:23
    block0(%11 : int):
      %i.2 : __torch__.detectron2.export.torchscript_patch11.ScriptedInstances11 = aten::__getitem__(%instances.1, %11) # C:\Users\HOFTIJ~1\AppData\Local\Temp/ipykernel_15240/909090163.py:28:23
      %3774 : NoneType = prim::Constant() # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:459:20
      %3775 : str = prim::Constant[value="proposal_boxes"]() # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:460:16
      %3776 : str = prim::Constant[value="objectness_logits"]() # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:466:16
      %3777 : str = prim::Constant[value="pred_boxes"]() # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:472:16
      %3778 : str = prim::Constant[value="scores"]() # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:478:16
      %3779 : str = prim::Constant[value="pred_classes"]() # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:484:16
      %3780 : str = prim::Constant[value="pred_masks"]() # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:490:16
      %3781 : str = prim::Constant[value="pred_keypoints"]() # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:496:16
      %3782 : str = prim::Constant[value="pred_keypoint_heatmaps"]() # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:502:16
      %ret.1 : Dict(str, Tensor) = prim::DictConstruct()
      %_proposal_boxes : __torch__.detectron2.structures.boxes.Boxes? = prim::GetAttr[name="_proposal_boxes"](%i.2)
      %3785 : bool = aten::__isnot__(%_proposal_boxes, %3774) # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:459:11
       = prim::If(%3785) # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:459:8
        block0():
          %t.5 : __torch__.detectron2.structures.boxes.Boxes = prim::unchecked_cast(%_proposal_boxes)
          %tensor.1 : Tensor = prim::GetAttr[name="tensor"](%t.5)
           = aten::_set_item(%ret.1, %3775, %tensor.1) # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:460:12
          -> ()
        block1():
          -> ()
      %_objectness_logits : Tensor? = prim::GetAttr[name="_objectness_logits"](%i.2)
      %3789 : bool = aten::__isnot__(%_objectness_logits, %3774) # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:465:11
       = prim::If(%3789) # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:465:8
        block0():
          %t.23 : Tensor = prim::unchecked_cast(%_objectness_logits)
           = aten::_set_item(%ret.1, %3776, %t.23) # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:466:12
          -> ()
        block1():
          -> ()
      %_pred_boxes : __torch__.detectron2.structures.boxes.Boxes? = prim::GetAttr[name="_pred_boxes"](%i.2)
      %3792 : bool = aten::__isnot__(%_pred_boxes, %3774) # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:471:11
       = prim::If(%3792) # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:471:8
        block0():
          %t.41 : __torch__.detectron2.structures.boxes.Boxes = prim::unchecked_cast(%_pred_boxes)
          %tensor : Tensor = prim::GetAttr[name="tensor"](%t.41)
           = aten::_set_item(%ret.1, %3777, %tensor) # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:472:12
          -> ()
        block1():
          -> ()
      %_scores : Tensor? = prim::GetAttr[name="_scores"](%i.2)
      %3796 : bool = aten::__isnot__(%_scores, %3774) # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:477:11
       = prim::If(%3796) # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:477:8
        block0():
          %t.59 : Tensor = prim::unchecked_cast(%_scores)
           = aten::_set_item(%ret.1, %3778, %t.59) # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:478:12
          -> ()
        block1():
          -> ()
      %_pred_classes : Tensor? = prim::GetAttr[name="_pred_classes"](%i.2)
      %3799 : bool = aten::__isnot__(%_pred_classes, %3774) # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:483:11
       = prim::If(%3799) # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:483:8
        block0():
          %t.77 : Tensor = prim::unchecked_cast(%_pred_classes)
           = aten::_set_item(%ret.1, %3779, %t.77) # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:484:12
          -> ()
        block1():
          -> ()
      %_pred_masks : Tensor? = prim::GetAttr[name="_pred_masks"](%i.2)
      %3802 : bool = aten::__isnot__(%_pred_masks, %3774) # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:489:11
       = prim::If(%3802) # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:489:8
        block0():
          %t.95 : Tensor = prim::unchecked_cast(%_pred_masks)
           = aten::_set_item(%ret.1, %3780, %t.95) # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:490:12
          -> ()
        block1():
          -> ()
      %_pred_keypoints : Tensor? = prim::GetAttr[name="_pred_keypoints"](%i.2)
      %3805 : bool = aten::__isnot__(%_pred_keypoints, %3774) # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:495:11
       = prim::If(%3805) # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:495:8
        block0():
          %t.113 : Tensor = prim::unchecked_cast(%_pred_keypoints)
           = aten::_set_item(%ret.1, %3781, %t.113) # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:496:12
          -> ()
        block1():
          -> ()
      %_pred_keypoint_heatmaps : Tensor? = prim::GetAttr[name="_pred_keypoint_heatmaps"](%i.2)
      %3808 : bool = aten::__isnot__(%_pred_keypoint_heatmaps, %3774) # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:501:11
       = prim::If(%3808) # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:501:8
        block0():
          %t.131 : Tensor = prim::unchecked_cast(%_pred_keypoint_heatmaps)
           = aten::_set_item(%ret.1, %3782, %t.131) # C:\Users\HOFTIJ~1\AppData\Local\Temp\detectron2g90_iz5o\tmpkdd_jgbm.py:502:12
          -> ()
        block1():
          -> ()
      %14 : Dict(str, Tensor)[] = aten::append(%9, %ret.1) # C:\Users\HOFTIJ~1\AppData\Local\Temp/ipykernel_15240/909090163.py:28:23
      -> (%2)
  return (%9)
